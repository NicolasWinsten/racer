!function(scope){"use strict";function F(arity,fun,wrapper){return wrapper.a=arity,wrapper.f=fun,wrapper}function F2(fun){return F(2,fun,function(a){return function(b){return fun(a,b)}})}function F3(fun){return F(3,fun,function(a){return function(b){return function(c){return fun(a,b,c)}}})}function F4(fun){return F(4,fun,function(a){return function(b){return function(c){return function(d){return fun(a,b,c,d)}}}})}function F5(fun){return F(5,fun,function(a){return function(b){return function(c){return function(d){return function(e){return fun(a,b,c,d,e)}}}}})}function F6(fun){return F(6,fun,function(a){return function(b){return function(c){return function(d){return function(e){return function(f){return fun(a,b,c,d,e,f)}}}}}})}function F7(fun){return F(7,fun,function(a){return function(b){return function(c){return function(d){return function(e){return function(f){return function(g){return fun(a,b,c,d,e,f,g)}}}}}}})}function A2(fun,a,b){return 2===fun.a?fun.f(a,b):fun(a)(b)}function A3(fun,a,b,c){return 3===fun.a?fun.f(a,b,c):fun(a)(b)(c)}function A4(fun,a,b,c,d){return 4===fun.a?fun.f(a,b,c,d):fun(a)(b)(c)(d)}function A5(fun,a,b,c,d,e){return 5===fun.a?fun.f(a,b,c,d,e):fun(a)(b)(c)(d)(e)}function A6(fun,a,b,c,d,e,f){return 6===fun.a?fun.f(a,b,c,d,e,f):fun(a)(b)(c)(d)(e)(f)}function A7(fun,a,b,c,d,e,f,g){return 7===fun.a?fun.f(a,b,c,d,e,f,g):fun(a)(b)(c)(d)(e)(f)(g)}var _JsArray_initialize=F3(function(size,offset,func){for(var result=Array(size),i=0;i<size;i++)result[i]=func(offset+i);return result}),$elm$random$Random$int=F2(function(max,ls){for(var result=Array(max),i=0;i<max&&ls.b;i++)result[i]=ls.a,ls=ls.b;return result.length=i,{a:result,b:ls}}),$elm$core$Array$fromListHelp=F2(function(index,array){return array[index]});function _Debug_crash(identifier){throw Error("https://github.com/elm/core/blob/1.0.0/hints/"+identifier+".md")}function _Utils_eq(x,y){for(var pair,stack=[],isEqual=_Utils_eqHelp(x,y,0,stack);isEqual&&(pair=stack.pop());isEqual=_Utils_eqHelp(pair.a,pair.b,0,stack));return isEqual}function _Utils_eqHelp(x,y,depth,stack){if(x===y)return!0;if("object"!=typeof x||null===x||null===y)return"function"==typeof x&&_Debug_crash(5),!1;if(100<depth)return stack.push({a:x,b:y}),!0;for(var key in x.$<0&&(x=$elm$core$Dict$toList(x),y=$elm$core$Dict$toList(y)),x)if(!_Utils_eqHelp(x[key],y[key],depth+1,stack))return!1;return!0}var _Utils_equal=F2(_Utils_eq);function _Utils_cmp(x,y,ord){if("object"!=typeof x)return x===y?0:x<y?-1:1;if(void 0===x.$)return(ord=_Utils_cmp(x.a,y.a))||(ord=_Utils_cmp(x.b,y.b))?ord:_Utils_cmp(x.c,y.c);for(;x.b&&y.b&&!(ord=_Utils_cmp(x.a,y.a));x=x.b,y=y.b);return ord||(x.b?1:y.b?-1:0)}var $elm$json$Json$Decode$string=F2(function(x,n){n=_Utils_cmp(x,n);return n<0?$elm$core$Basics$LT:n?$elm$core$Basics$GT:$elm$core$Basics$EQ}),_Utils_Tuple0=0;function _Utils_update(oldRecord,updatedFields){var key,newRecord={};for(key in oldRecord)newRecord[key]=oldRecord[key];for(key in updatedFields)newRecord[key]=updatedFields[key];return newRecord}function _Utils_ap(xs,ys){if("string"==typeof xs)return xs+ys;if(!xs.b)return ys;var root={$:1,a:xs.a,b:ys};xs=xs.b;for(var curr=root;xs.b;xs=xs.b)curr=curr.b={$:1,a:xs.a,b:ys};return root}var _List_Nil={$:0};function _List_Cons(hd,tl){return{$:1,a:hd,b:tl}}var _List_cons=F2(_List_Cons);function _List_fromArray(arr){for(var out=_List_Nil,i=arr.length;i--;)out={$:1,a:arr[i],b:out};return out}function _List_toArray(xs){for(var out=[];xs.b;xs=xs.b)out.push(xs.a);return out}var _List_map2=F3(function(f,xs,ys){for(var arr=[];xs.b&&ys.b;xs=xs.b,ys=ys.b)arr.push(A2(f,xs.a,ys.a));return _List_fromArray(arr)}),_List_sortBy=F2(function(f,xs){return _List_fromArray(_List_toArray(xs).sort(function(a,b){return _Utils_cmp(f(a),f(b))}))}),_Basics_add=F2(function(a,b){return a+b}),$hecrj$html_parser$Html$Parser$hexadecimal=F2(Math.pow),list=F2(function(modulus,answer){answer%=modulus;return 0===modulus?_Debug_crash(11):0<answer&&modulus<0||answer<0&&0<modulus?answer+modulus:answer});var _Basics_ceiling=Math.ceil,$elm$json$Json$Decode$map2=Math.floor,_Basics_log=Math.log;var _String_cons=F2(function(chr,str){return chr+str});var $elm$html$Html$Attributes$boolProperty=F3(function(func,state,string){for(var len=string.length,i=0;i<len;){var char=string[i],word=string.charCodeAt(i);i++,word<55296||56319<word||(char+=string[i],i++),state=A2(func,char,state)}return state}),$hecrj$html_parser$Html$Parser$numericCharacterReference=F3(function(func,state,string){for(var i=string.length;i--;){var char=string[i],word=string.charCodeAt(i);state=A2(func,char=word>=56320&&57343>=word?string[--i]+char:char,state)}return state}),_String_split=F2(function(sep,str){return str.split(sep)}),_String_join=F2(function(sep,strs){return strs.join(sep)}),converter=F3(function(start,end,str){return str.slice(start,end)});var _String_all=F2(function(isGood,string){for(var i=string.length;i--;){var char=string[i],word=string.charCodeAt(i);if(!isGood(char=word>=56320&&57343>=word?string[--i]+char:char))return!1}return!0}),$elm$browser$Browser$element=F2(function(sub,str){return!!~str.indexOf(sub)}),$author$project$PeerPort$peerDisconnectDecoder=F2(function(sub,str){return 0==str.indexOf(sub)});function _String_fromNumber(number){return number+""}var $author$project$PeerPort$gameInfoDecoder={$:2,b:function(value){return"number"!=typeof value||(value<=-2147483647||2147483647<=value||(0|value)!==value)&&(!isFinite(value)||value%1)?_Json_expecting("an INT",value):$elm$core$Result$Ok(value)}},$author$project$PeerPort$peerConnectDecoder={$:2,b:function(value){return"boolean"==typeof value?$elm$core$Result$Ok(value):_Json_expecting("a BOOL",value)}},$author$project$PeerPort$receiveData={$:2,b:function(value){return $elm$core$Result$Ok(value)}},$author$project$PeerPort$gameFinishDecoder={$:2,b:function(value){return"string"==typeof value?$elm$core$Result$Ok(value):value instanceof String?$elm$core$Result$Ok(value+""):_Json_expecting("a STRING",value)}};var $author$project$PeerPort$uuidDecoder=F2(function(field,decoder){return{$:6,d:field,b:decoder}});var $author$project$PeerPort$makePeer=F2(function(f,d1){return{$:9,f:f,g:[d1]}}),$elm$core$Task$perform=F3(function(f,d1,d2){return{$:9,f:f,g:[d1,d2]}}),$elm$json$Json$Decode$decodeValue=F4(function(f,d1,d2,d3){return{$:9,f:f,g:[d1,d2,d3]}}),$elm$json$Json$Decode$map5=F5(function(f,d1,d2,d3,d4){return{$:9,f:f,g:[d1,d2,d3,d4]}}),$author$project$PeerPort$peerIdGenDecoder=F6(function(f,d1,d2,d3,d4,d5){return{$:9,f:f,g:[d1,d2,d3,d4,d5]}}),$elm$http$Http$cmdMap=F2(function(decoder,string){try{return _Json_runHelp(decoder,JSON.parse(string))}catch(e){return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure,"This is not valid JSON! "+e.message,string))}}),_Json_run=F2(_Json_runHelp);function _Json_runHelp(decoder,value){switch(decoder.$){case 2:return decoder.b(value);case 5:return null===value?$elm$core$Result$Ok(decoder.c):_Json_expecting("null",value);case 3:return _Json_isArray(value)?_Json_runArrayDecoder(decoder.b,value,_List_fromArray):_Json_expecting("a LIST",value);case 4:return _Json_isArray(value)?_Json_runArrayDecoder(decoder.b,value,_Json_toElmArray):_Json_expecting("an ARRAY",value);case 6:var index=decoder.d;if("object"!=typeof value||null===value||!(index in value))return _Json_expecting("an OBJECT with a field named `"+index+"`",value);var result=_Json_runHelp(decoder.b,value[index]);return $elm$core$Result$isOk(result)?result:$elm$core$Result$Err(A2($elm$json$Json$Decode$Field,index,result.a));case 7:index=decoder.e;if(!_Json_isArray(value))return _Json_expecting("an ARRAY",value);if(value.length<=index)return _Json_expecting("a LONGER array. Need index "+index+" but only see "+value.length+" entries",value);result=_Json_runHelp(decoder.b,value[index]);return $elm$core$Result$isOk(result)?result:$elm$core$Result$Err(A2($elm$json$Json$Decode$Index,index,result.a));case 8:if("object"!=typeof value||null===value||_Json_isArray(value))return _Json_expecting("an OBJECT",value);var key,keyValuePairs=_List_Nil;for(key in value)if(value.hasOwnProperty(key)){result=_Json_runHelp(decoder.b,value[key]);if(!$elm$core$Result$isOk(result))return $elm$core$Result$Err(A2($elm$json$Json$Decode$Field,key,result.a));keyValuePairs={$:1,a:{a:key,b:result.a},b:keyValuePairs}}return $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));case 9:for(var answer=decoder.f,decoders=decoder.g,i=0;i<decoders.length;i++){result=_Json_runHelp(decoders[i],value);if(!$elm$core$Result$isOk(result))return result;answer=answer(result.a)}return $elm$core$Result$Ok(answer);case 10:result=_Json_runHelp(decoder.b,value);return $elm$core$Result$isOk(result)?_Json_runHelp(decoder.h(result.a),value):result;case 11:for(var errors=_List_Nil,temp=decoder.g;temp.b;temp=temp.b){result=_Json_runHelp(temp.a,value);if($elm$core$Result$isOk(result))return result;errors={$:1,a:result.a,b:errors}}return $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));case 1:return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure,decoder.a,value));case 0:return $elm$core$Result$Ok(decoder.a)}}function _Json_runArrayDecoder(decoder,value,toElmValue){for(var len=value.length,array=Array(len),i=0;i<len;i++){var result=_Json_runHelp(decoder,value[i]);if(!$elm$core$Result$isOk(result))return $elm$core$Result$Err(A2($elm$json$Json$Decode$Index,i,result.a));array[i]=result.a}return $elm$core$Result$Ok(toElmValue(array))}function _Json_isArray(value){return Array.isArray(value)||"undefined"!=typeof FileList&&value instanceof FileList}function _Json_toElmArray(array){return A2($elm$core$Array$initialize,array.length,function(i){return array[i]})}function _Json_expecting(type,value){return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure,"Expecting "+type,value))}function _Json_equality(x,y){if(x===y)return!0;if(x.$!==y.$)return!1;switch(x.$){case 0:case 1:return x.a===y.a;case 2:return x.b===y.b;case 5:return x.c===y.c;case 3:case 4:case 8:return _Json_equality(x.b,y.b);case 6:return x.d===y.d&&_Json_equality(x.b,y.b);case 7:return x.e===y.e&&_Json_equality(x.b,y.b);case 9:return x.f===y.f&&_Json_listEquality(x.g,y.g);case 10:return x.h===y.h&&_Json_equality(x.b,y.b);case 11:return _Json_listEquality(x.g,y.g)}}function _Json_listEquality(aDecoders,bDecoders){var len=aDecoders.length;if(len!==bDecoders.length)return!1;for(var i=0;i<len;i++)if(!_Json_equality(aDecoders[i],bDecoders[i]))return!1;return!0}var _Json_encode=F2(function(indentLevel,value){return JSON.stringify(value,null,indentLevel)+""});function _Json_wrap(value){return value}var _Json_addField=F3(function(key,value,object){return object[key]=value,object});function _Scheduler_succeed(value){return{$:0,a:value}}var _Scheduler_andThen=F2(function(callback,task){return{$:3,b:callback,d:task}});var _Scheduler_guid=0;function _Scheduler_rawSpawn(proc){proc={$:0,e:_Scheduler_guid++,f:proc,g:null,h:[]};return _Scheduler_enqueue(proc),proc}function _Scheduler_spawn(task){return{$:2,b:function(callback){callback({$:0,a:_Scheduler_rawSpawn(task)})},c:null}}function _Scheduler_rawSend(proc,msg){proc.h.push(msg),_Scheduler_enqueue(proc)}var _Scheduler_send=F2(function(proc,msg){return{$:2,b:function(callback){_Scheduler_rawSend(proc,msg),callback({$:0,a:_Utils_Tuple0})},c:null}});var _Scheduler_working=!1,_Scheduler_queue=[];function _Scheduler_enqueue(proc){if(_Scheduler_queue.push(proc),!_Scheduler_working){for(_Scheduler_working=!0;proc=_Scheduler_queue.shift();)!function(proc){for(;proc.f;){var rootTag=proc.f.$;if(0===rootTag||1===rootTag){for(;proc.g&&proc.g.$!==rootTag;)proc.g=proc.g.i;if(!proc.g)return;proc.f=proc.g.b(proc.f.a),proc.g=proc.g.i}else{if(2===rootTag)return proc.f.c=proc.f.b(function(newRoot){proc.f=newRoot,_Scheduler_enqueue(proc)});if(5===rootTag){if(0===proc.h.length)return;proc.f=proc.f.b(proc.h.shift())}else proc.g={$:3===rootTag?0:1,b:proc.f.b,i:proc.g},proc.f=proc.f.d}}}(proc);_Scheduler_working=!1}}function _Platform_initialize(flagDecoder,initPair,init,update,subscriptions,ports){initPair=A2(_Json_run,flagDecoder,initPair?initPair.flags:void 0);$elm$core$Result$isOk(initPair)||_Debug_crash(2);var managers={},initPair=init(initPair.a),model=initPair.a,stepper=ports(sendToApp,model),ports=function(managers,sendToApp){var ports,key;for(key in _Platform_effectManagers){var manager=_Platform_effectManagers[key];manager.a&&((ports=ports||{})[key]=manager.a(key,sendToApp)),managers[key]=function(info,sendToApp){var router={g:sendToApp,h:void 0},onEffects=info.c,onSelfMsg=info.d,cmdMap=info.e,subMap=info.f;function loop(state){return A2(_Scheduler_andThen,loop,{$:5,b:function(msg){var value=msg.a;return 0===msg.$?A3(onSelfMsg,router,value,state):cmdMap&&subMap?A4(onEffects,router,value.i,value.j,state):A3(onEffects,router,cmdMap?value.i:value.j,state)}})}return router.h=_Scheduler_rawSpawn(A2(_Scheduler_andThen,loop,info.b))}(manager,sendToApp)}return ports}(managers,sendToApp);function sendToApp(pair,viewMetadata){pair=A2(update,pair,model);stepper(model=pair.a,viewMetadata),_Platform_enqueueEffects(managers,pair.b,subscriptions(model))}return _Platform_enqueueEffects(managers,initPair.b,subscriptions(model)),ports?{ports:ports}:{}}var _Platform_effectManagers={};var $elm$random$Random$generate=F2(function(router,msg){return{$:2,b:function(callback){router.g(msg),callback({$:0,a:_Utils_Tuple0})},c:null}}),jsValueTranslator=F2(function(router,msg){return A2(_Scheduler_send,router.h,{$:0,a:msg})});function _Platform_leaf(home){return function(value){return{$:1,k:home,l:value}}}function _Platform_batch(list){return{$:2,m:list}}var $elm$http$Http$onSelfMsg=F2(function(tagger,bag){return{$:3,n:tagger,o:bag}}),_Platform_effectsQueue=[],_Platform_effectsActive=!1;function _Platform_enqueueEffects(managers,cmdBag,subBag){if(_Platform_effectsQueue.push({p:managers,q:cmdBag,r:subBag}),!_Platform_effectsActive){_Platform_effectsActive=!0;for(var fx;fx=_Platform_effectsQueue.shift();)!function(managers,cmdBag,subBag){var home,effectsDict={};for(home in _Platform_gatherEffects(!0,cmdBag,effectsDict,null),_Platform_gatherEffects(!1,subBag,effectsDict,null),managers)_Scheduler_rawSend(managers[home],{$:"fx",a:effectsDict[home]||{i:_List_Nil,j:_List_Nil}})}(fx.p,fx.q,fx.r);_Platform_effectsActive=!1}}function _Platform_gatherEffects(isCmd,bag,effectsDict,taggers){switch(bag.$){case 1:var home=bag.k,effect=function(isCmd,home,taggers,value){function applyTaggers(x){for(var temp=taggers;temp;temp=temp.t)x=temp.s(x);return x}return A2(isCmd?_Platform_effectManagers[home].e:_Platform_effectManagers[home].f,applyTaggers,value)}(isCmd,home,taggers,bag.l);return void(effectsDict[home]=function(isCmd,newEffect,effects){return effects=effects||{i:_List_Nil,j:_List_Nil},isCmd?effects.i={$:1,a:newEffect,b:effects.i}:effects.j={$:1,a:newEffect,b:effects.j},effects}(isCmd,effect,effectsDict[home]));case 2:for(var list=bag.m;list.b;list=list.b)_Platform_gatherEffects(isCmd,list.a,effectsDict,taggers);return;case 3:return void _Platform_gatherEffects(isCmd,bag.o,effectsDict,{s:bag.n,t:taggers})}}function _Platform_checkPortName(name){_Platform_effectManagers[name]&&_Debug_crash(3)}function _Platform_outgoingPort(name,converter){return _Platform_checkPortName(name),_Platform_effectManagers[name]={e:_Platform_outgoingPortMap,u:converter,a:_Platform_setupOutgoingPort},_Platform_leaf(name)}var _Platform_outgoingPortMap=F2(function(tagger,value){return value});function _Platform_setupOutgoingPort(name){var time,subs=[],converter=_Platform_effectManagers[name].u,init=(time=0,{$:2,b:function(callback){var id=setTimeout(function(){callback({$:0,a:_Utils_Tuple0})},time);return function(){clearTimeout(id)}},c:null});return _Platform_effectManagers[name].b=init,_Platform_effectManagers[name].c=F3(function(router,cmdList,state){for(;cmdList.b;cmdList=cmdList.b)for(var currentSubs=subs,value=converter(cmdList.a),i=0;i<currentSubs.length;i++)currentSubs[i](value);return init}),{subscribe:function(callback){subs.push(callback)},unsubscribe:function(index){(index=(subs=subs.slice()).indexOf(index))<0||subs.splice(index,1)}}}var _VirtualDom_divertHrefToApp,_Platform_incomingPortMap=F2(function(tagger,finalTagger){return function(value){return tagger(finalTagger(value))}});function _Platform_setupIncomingPort(name,sendToApp){var subs=_List_Nil,converter=_Platform_effectManagers[name].u,init={$:0,a:null};return _Platform_effectManagers[name].b=init,_Platform_effectManagers[name].c=F3(function(router,subList,state){return subs=subList,init}),{send:function(result){$elm$core$Result$isOk(result=A2(_Json_run,converter,result))||_Debug_crash(4);for(var value=result.a,temp=subs;temp.b;temp=temp.b)sendToApp(temp.a(value))}}}var _VirtualDom_doc="undefined"!=typeof document?document:{};function _VirtualDom_text(string){return{$:0,a:string}}var _VirtualDom_node=F2(function(namespace,tag){return F2(function(factList,kidList){for(var kids=[],descendantsCount=0;kidList.b;kidList=kidList.b){var kid=kidList.a;descendantsCount+=kid.b||0,kids.push(kid)}return descendantsCount+=kids.length,{$:1,c:tag,d:_VirtualDom_organizeFacts(factList),e:kids,f:namespace,b:descendantsCount}})})(void 0);F2(function(namespace,tag){return F2(function(factList,kidList){for(var kids=[],descendantsCount=0;kidList.b;kidList=kidList.b){var kid=kidList.a;descendantsCount+=kid.b.b||0,kids.push(kid)}return descendantsCount+=kids.length,{$:2,c:tag,d:_VirtualDom_organizeFacts(factList),e:kids,f:namespace,b:descendantsCount}})})(void 0);var _VirtualDom_on=F2(function(key,handler){return{$:"a0",n:key,o:handler}}),_VirtualDom_style=F2(function(key,value){return{$:"a1",n:key,o:value}}),_VirtualDom_property=F2(function(key,value){return{$:"a2",n:key,o:value}}),_VirtualDom_attribute=F2(function(key,value){return{$:"a3",n:key,o:value}});function _VirtualDom_noJavaScriptOrHtmlUri(value){return/^\s*(javascript:|data:text\/html)/i.test(value)?"":value}var _VirtualDom_passiveSupported;function _VirtualDom_organizeFacts(factList){for(var facts={};factList.b;factList=factList.b){var subFacts=factList.a,tag=subFacts.$,key=subFacts.n,value=subFacts.o;"a2"!==tag?(subFacts=facts[tag]||(facts[tag]={}),"a3"===tag&&"class"===key?_VirtualDom_addClass(subFacts,key,value):subFacts[key]=value):"className"===key?_VirtualDom_addClass(facts,key,value):facts[key]=value}return facts}function _VirtualDom_addClass(object,key,newClass){var classes=object[key];object[key]=classes?classes+" "+newClass:newClass}function _VirtualDom_render(vNode,eventNode){var tag=vNode.$;if(5===tag)return _VirtualDom_render(vNode.k||(vNode.k=vNode.m()),eventNode);if(0===tag)return _VirtualDom_doc.createTextNode(vNode.a);if(4===tag){for(var subNode=vNode.k,tagger=vNode.j;4===subNode.$;)"object"!=typeof tagger?tagger=[tagger,subNode.j]:tagger.push(subNode.j),subNode=subNode.k;var subEventRoot={j:tagger,p:eventNode};return(domNode=_VirtualDom_render(subNode,subEventRoot)).elm_event_node_ref=subEventRoot,domNode}if(3===tag)return _VirtualDom_applyFacts(domNode=vNode.h(vNode.g),eventNode,vNode.d),domNode;var domNode=vNode.f?_VirtualDom_doc.createElementNS(vNode.f,vNode.c):_VirtualDom_doc.createElement(vNode.c);_VirtualDom_divertHrefToApp&&"a"==vNode.c&&domNode.addEventListener("click",_VirtualDom_divertHrefToApp(domNode)),_VirtualDom_applyFacts(domNode,eventNode,vNode.d);for(var kids=vNode.e,i=0;i<kids.length;i++)domNode.appendChild(_VirtualDom_render(1===tag?kids[i]:kids[i].b,eventNode));return domNode}function _VirtualDom_applyFacts(domNode,eventNode,facts){for(var key in facts){var value=facts[key];"a1"===key?function(domNode,styles){var key,domNodeStyle=domNode.style;for(key in styles)domNodeStyle[key]=styles[key]}(domNode,value):"a0"===key?function(domNode,eventNode,events){var key,allCallbacks=domNode.elmFs||(domNode.elmFs={});for(key in events){var newHandler=events[key],oldCallback=allCallbacks[key];if(newHandler){if(oldCallback){if(oldCallback.q.$===newHandler.$){oldCallback.q=newHandler;continue}domNode.removeEventListener(key,oldCallback)}oldCallback=function(eventNode,initialHandler){function callback(event){var value=callback.q,stopPropagation=_Json_runHelp(value.a,event);if($elm$core$Result$isOk(stopPropagation)){for(var tagger,tag=$elm$virtual_dom$VirtualDom$toHandlerInt(value),value=stopPropagation.a,message=tag?tag<3?value.a:value.E:value,stopPropagation=1==tag?value.b:3==tag&&value.al,currentEventNode=(stopPropagation&&event.stopPropagation(),(2==tag?value.b:3==tag&&value.ai)&&event.preventDefault(),eventNode);tagger=currentEventNode.j;){if("function"==typeof tagger)message=tagger(message);else for(var i=tagger.length;i--;)message=tagger[i](message);currentEventNode=currentEventNode.p}currentEventNode(message,stopPropagation)}}return callback.q=initialHandler,callback}(eventNode,newHandler),domNode.addEventListener(key,oldCallback,_VirtualDom_passiveSupported&&{passive:$elm$virtual_dom$VirtualDom$toHandlerInt(newHandler)<2}),allCallbacks[key]=oldCallback}else domNode.removeEventListener(key,oldCallback),allCallbacks[key]=void 0}}(domNode,eventNode,value):"a3"===key?function(domNode,attrs){for(var key in attrs){var value=attrs[key];void 0!==value?domNode.setAttribute(key,value):domNode.removeAttribute(key)}}(domNode,value):"a4"===key?function(domNode,nsAttrs){for(var key in nsAttrs){var value=nsAttrs[key],namespace=value.f,value=value.o;void 0!==value?domNode.setAttributeNS(namespace,key,value):domNode.removeAttributeNS(namespace,key)}}(domNode,value):("value"!==key&&"checked"!==key||domNode[key]!==value)&&(domNode[key]=value)}}try{window.addEventListener("t",null,Object.defineProperty({},"passive",{get:function(){_VirtualDom_passiveSupported=!0}}))}catch(e){}function _VirtualDom_diff(x,y){var patches=[];return _VirtualDom_diffHelp(x,y,patches,0),patches}function _VirtualDom_pushPatch(patches,type,index,patch){patch={$:type,r:index,s:patch,t:void 0,u:void 0};return patches.push(patch),patch}function _VirtualDom_diffHelp(x,y,patches,index){if(x!==y){var xType=x.$,yType=y.$;if(xType!==yType){if(1!==xType||2!==yType)return void _VirtualDom_pushPatch(patches,0,index,y);y=function(keyedNode){for(var keyedKids=keyedNode.e,len=keyedKids.length,kids=Array(len),i=0;i<len;i++)kids[i]=keyedKids[i].b;return{$:1,c:keyedNode.c,d:keyedNode.d,e:kids,f:keyedNode.f,b:keyedNode.b}}(y),yType=1}switch(yType){case 5:for(var xRefs=x.l,yRefs=y.l,i=xRefs.length,same=i===yRefs.length;same&&i--;)same=xRefs[i]===yRefs[i];if(same)return void(y.k=x.k);y.k=y.m();var patch=[];return _VirtualDom_diffHelp(x.k,y.k,patch,0),void(0<patch.length&&_VirtualDom_pushPatch(patches,1,index,patch));case 4:for(var xTaggers=x.j,yTaggers=y.j,nesting=!1,xSubNode=x.k;4===xSubNode.$;)nesting=!0,"object"!=typeof xTaggers?xTaggers=[xTaggers,xSubNode.j]:xTaggers.push(xSubNode.j),xSubNode=xSubNode.k;for(var ySubNode=y.k;4===ySubNode.$;)nesting=!0,"object"!=typeof yTaggers?yTaggers=[yTaggers,ySubNode.j]:yTaggers.push(ySubNode.j),ySubNode=ySubNode.k;return nesting&&xTaggers.length!==yTaggers.length?void _VirtualDom_pushPatch(patches,0,index,y):((nesting?function(as,bs){for(var i=0;i<as.length;i++)if(as[i]!==bs[i])return!1;return!0}(xTaggers,yTaggers):xTaggers===yTaggers)||_VirtualDom_pushPatch(patches,2,index,yTaggers),void _VirtualDom_diffHelp(xSubNode,ySubNode,patches,index+1));case 0:return void(x.a!==y.a&&_VirtualDom_pushPatch(patches,3,index,y.a));case 1:return void _VirtualDom_diffNodes(x,y,patches,index,_VirtualDom_diffKids);case 2:return void _VirtualDom_diffNodes(x,y,patches,index,_VirtualDom_diffKeyedKids);case 3:if(x.h!==y.h)return void _VirtualDom_pushPatch(patches,0,index,y);patch=_VirtualDom_diffFacts(x.d,y.d);patch&&_VirtualDom_pushPatch(patches,4,index,patch);patch=y.i(x.g,y.g);return void(patch&&_VirtualDom_pushPatch(patches,5,index,patch))}}}function _VirtualDom_diffNodes(x,y,patches,index,diffKids){var factsDiff;x.c===y.c&&x.f===y.f?((factsDiff=_VirtualDom_diffFacts(x.d,y.d))&&_VirtualDom_pushPatch(patches,4,index,factsDiff),diffKids(x,y,patches,index)):_VirtualDom_pushPatch(patches,0,index,y)}function _VirtualDom_diffFacts(x,y,category){var diff,xKey,xValue,subDiff,yKey;for(xKey in x)"a1"!==xKey&&"a0"!==xKey&&"a3"!==xKey&&"a4"!==xKey?xKey in y?(xValue=x[xKey])===(subDiff=y[xKey])&&"value"!==xKey&&"checked"!==xKey||"a0"===category&&function(x,y){return x.$==y.$&&_Json_equality(x.a,y.a)}(xValue,subDiff)||((diff=diff||{})[xKey]=subDiff):(diff=diff||{})[xKey]=category?"a1"===category?"":"a0"===category||"a3"===category?void 0:{f:x[xKey].f,o:void 0}:"string"==typeof x[xKey]?"":null:(subDiff=_VirtualDom_diffFacts(x[xKey],y[xKey]||{},xKey))&&((diff=diff||{})[xKey]=subDiff);for(yKey in y)yKey in x||((diff=diff||{})[yKey]=y[yKey]);return diff}function _VirtualDom_diffKids(xLen,yLen,patches,index){var xKids=xLen.e,yKids=yLen.e,xLen=xKids.length,yLen=yKids.length;yLen<xLen?_VirtualDom_pushPatch(patches,6,index,{v:yLen,i:xLen-yLen}):xLen<yLen&&_VirtualDom_pushPatch(patches,7,index,{v:xLen,e:yKids});for(var minLen=xLen<yLen?xLen:yLen,i=0;i<minLen;i++){var xKid=xKids[i];_VirtualDom_diffHelp(xKid,yKids[i],patches,++index),index+=xKid.b||0}}function _VirtualDom_diffKeyedKids(xParent,yParent,patches,rootIndex){for(var localPatches=[],changes={},inserts=[],xKids=xParent.e,yKids=yParent.e,xLen=xKids.length,yLen=yKids.length,xIndex=0,yIndex=0,index=rootIndex;xIndex<xLen&&yIndex<yLen;){var x=xKids[xIndex],y=yKids[yIndex],xKey=x.a,yKey=y.a,xNode=x.b,yNode=y.b,newMatch=void 0,oldMatch=void 0;if(xKey!==yKey){var xNextKey,xNextNode,yNextKey,yNextNode,xNext=xKids[xIndex+1],yNext=yKids[yIndex+1];if(xNext&&(xNextNode=xNext.b,oldMatch=yKey===(xNextKey=xNext.a)),yNext&&(yNextNode=yNext.b,newMatch=xKey===(yNextKey=yNext.a)),newMatch&&oldMatch)_VirtualDom_diffHelp(xNode,yNextNode,localPatches,++index),_VirtualDom_insertNode(changes,localPatches,xKey,yNode,yIndex,inserts),index+=xNode.b||0,_VirtualDom_removeNode(changes,localPatches,xKey,xNextNode,++index),index+=xNextNode.b||0,xIndex+=2,yIndex+=2;else if(newMatch)index++,_VirtualDom_insertNode(changes,localPatches,yKey,yNode,yIndex,inserts),_VirtualDom_diffHelp(xNode,yNextNode,localPatches,index),index+=xNode.b||0,xIndex+=1,yIndex+=2;else if(oldMatch)_VirtualDom_removeNode(changes,localPatches,xKey,xNode,++index),index+=xNode.b||0,_VirtualDom_diffHelp(xNextNode,yNode,localPatches,++index),index+=xNextNode.b||0,xIndex+=2,yIndex+=1;else{if(!xNext||xNextKey!==yNextKey)break;_VirtualDom_removeNode(changes,localPatches,xKey,xNode,++index),_VirtualDom_insertNode(changes,localPatches,yKey,yNode,yIndex,inserts),index+=xNode.b||0,_VirtualDom_diffHelp(xNextNode,yNextNode,localPatches,++index),index+=xNextNode.b||0,xIndex+=2,yIndex+=2}}else _VirtualDom_diffHelp(xNode,yNode,localPatches,++index),index+=xNode.b||0,xIndex++,yIndex++}for(;xIndex<xLen;){xNode=(x=xKids[xIndex]).b;_VirtualDom_removeNode(changes,localPatches,x.a,xNode,++index),index+=xNode.b||0,xIndex++}for(;yIndex<yLen;){var endInserts=endInserts||[];_VirtualDom_insertNode(changes,localPatches,(y=yKids[yIndex]).a,y.b,void 0,endInserts),yIndex++}(0<localPatches.length||0<inserts.length||endInserts)&&_VirtualDom_pushPatch(patches,8,rootIndex,{w:localPatches,x:inserts,y:endInserts})}var _VirtualDom_POSTFIX="_elmW6BL";function _VirtualDom_insertNode(changes,localPatches,key,vnode,yIndex,inserts){var entry=changes[key];if(!entry)return inserts.push({r:yIndex,A:entry={c:0,z:vnode,r:yIndex,s:void 0}}),void(changes[key]=entry);if(1===entry.c){inserts.push({r:yIndex,A:entry}),entry.c=2;var subPatches=[];return _VirtualDom_diffHelp(entry.z,vnode,subPatches,entry.r),entry.r=yIndex,void(entry.s.s={w:subPatches,A:entry})}_VirtualDom_insertNode(changes,localPatches,key+_VirtualDom_POSTFIX,vnode,yIndex,inserts)}function _VirtualDom_removeNode(changes,patch,key,vnode,index){var entry=changes[key];if(entry){if(0===entry.c){entry.c=2;var subPatches=[];return _VirtualDom_diffHelp(vnode,entry.z,subPatches,index),void _VirtualDom_pushPatch(patch,9,index,{w:subPatches,A:entry})}_VirtualDom_removeNode(changes,patch,key+_VirtualDom_POSTFIX,vnode,index)}else{patch=_VirtualDom_pushPatch(patch,9,index,void 0);changes[key]={c:1,z:vnode,r:index,s:patch}}}function _VirtualDom_addDomNodes(domNode,vNode,patches,eventNode){!function _VirtualDom_addDomNodesHelp(domNode,vNode,patches,i,low,high,eventNode){var patch=patches[i];var index=patch.r;for(;index===low;){var subPatches,data=patch.$;if(1===data?_VirtualDom_addDomNodes(domNode,vNode.k,patch.s,eventNode):8===data?(patch.t=domNode,patch.u=eventNode,0<(subPatches=patch.s.w).length&&_VirtualDom_addDomNodesHelp(domNode,vNode,subPatches,0,low,high,eventNode)):9===data?(patch.t=domNode,patch.u=eventNode,(data=patch.s)&&(data.A.s=domNode,0<(subPatches=data.w).length&&_VirtualDom_addDomNodesHelp(domNode,vNode,subPatches,0,low,high,eventNode))):(patch.t=domNode,patch.u=eventNode),!(patch=patches[++i])||(index=patch.r)>high)return i}var tag=vNode.$;if(4===tag){for(var subNode=vNode.k;4===subNode.$;)subNode=subNode.k;return _VirtualDom_addDomNodesHelp(domNode,subNode,patches,i,low+1,high,domNode.elm_event_node_ref)}var vKids=vNode.e;var childNodes=domNode.childNodes;for(var j=0;j<vKids.length;j++){var vKid=1===tag?vKids[j]:vKids[j].b,nextLow=++low+(vKid.b||0);if(low<=index&&index<=nextLow&&(i=_VirtualDom_addDomNodesHelp(childNodes[j],vKid,patches,i,low,nextLow,eventNode),!(patch=patches[i])||(index=patch.r)>high))return i;low=nextLow}return i}(domNode,vNode,patches,0,0,vNode.b,eventNode)}function _VirtualDom_applyPatches(rootDomNode,oldVirtualNode,patches,eventNode){return 0===patches.length?rootDomNode:(_VirtualDom_addDomNodes(rootDomNode,oldVirtualNode,patches,eventNode),_VirtualDom_applyPatchesHelp(rootDomNode,patches))}function _VirtualDom_applyPatchesHelp(rootDomNode,patches){for(var i=0;i<patches.length;i++){var newNode=patches[i],localDomNode=newNode.t,newNode=function(domNode,patch){switch(patch.$){case 0:return function(domNode,vNode,newNode){var parentNode=domNode.parentNode,newNode=_VirtualDom_render(vNode,newNode);newNode.elm_event_node_ref||(newNode.elm_event_node_ref=domNode.elm_event_node_ref);parentNode&&newNode!==domNode&&parentNode.replaceChild(newNode,domNode);return newNode}(domNode,patch.s,patch.u);case 4:return _VirtualDom_applyFacts(domNode,patch.u,patch.s),domNode;case 3:return domNode.replaceData(0,domNode.length,patch.s),domNode;case 1:return _VirtualDom_applyPatchesHelp(domNode,patch.s);case 2:return domNode.elm_event_node_ref?domNode.elm_event_node_ref.j=patch.s:domNode.elm_event_node_ref={j:patch.s,p:patch.u},domNode;case 6:for(var data=patch.s,i=0;i<data.i;i++)domNode.removeChild(domNode.childNodes[data.v]);return domNode;case 7:for(var kids=(data=patch.s).e,i=data.v,theEnd=domNode.childNodes[i];i<kids.length;i++)domNode.insertBefore(_VirtualDom_render(kids[i],patch.u),theEnd);return domNode;case 9:if(!(data=patch.s))return domNode.parentNode.removeChild(domNode),domNode;var entry=data.A;return void 0!==entry.r&&domNode.parentNode.removeChild(domNode),entry.s=_VirtualDom_applyPatchesHelp(domNode,data.w),domNode;case 8:return function(domNode,patch){var data=patch.s,frag=function(endInserts,patch){if(endInserts){for(var frag=_VirtualDom_doc.createDocumentFragment(),i=0;i<endInserts.length;i++){var entry=endInserts[i].A;frag.appendChild(2===entry.c?entry.s:_VirtualDom_render(entry.z,patch.u))}return frag}}(data.y,patch);domNode=_VirtualDom_applyPatchesHelp(domNode,data.w);for(var inserts=data.x,i=0;i<inserts.length;i++){var insert=inserts[i],node=insert.A,node=2===node.c?node.s:_VirtualDom_render(node.z,patch.u);domNode.insertBefore(node,domNode.childNodes[insert.r])}frag&&domNode.appendChild(frag);return domNode}(domNode,patch);case 5:return patch.s(domNode);default:_Debug_crash(10)}}(localDomNode,newNode);localDomNode===rootDomNode&&(rootDomNode=newNode)}return rootDomNode}function _VirtualDom_virtualize(node){if(3===node.nodeType)return{$:0,a:node.textContent};if(1!==node.nodeType)return{$:0,a:""};for(var attrList=_List_Nil,attrs=node.attributes,i=attrs.length;i--;)var attr=attrs[i],attrList={$:1,a:A2(_VirtualDom_attribute,attr.name,attr.value),b:attrList};for(var tag=node.tagName.toLowerCase(),kidList=_List_Nil,kids=node.childNodes,i=kids.length;i--;)kidList={$:1,a:_VirtualDom_virtualize(kids[i]),b:kidList};return A3(_VirtualDom_node,tag,attrList,kidList)}var $elm$json$Json$Decode$int=F4(function(impl,flagDecoder,debugMetadata,args){return _Platform_initialize(flagDecoder,args,impl.bo,impl.bD,impl.bB,function(sendToApp,initialModel){var view=impl.bF,domNode=args.node,currNode=_VirtualDom_virtualize(domNode);return _Browser_makeAnimator(initialModel,function(patches){var nextNode=view(patches),patches=_VirtualDom_diff(currNode,nextNode);domNode=_VirtualDom_applyPatches(domNode,currNode,patches,sendToApp),currNode=nextNode})})}),_Browser_requestAnimationFrame="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:function(callback){return setTimeout(callback,1e3/60)};function _Browser_makeAnimator(model,draw){draw(model);var state=0;function updateIfNeeded(){state=1===state?0:(_Browser_requestAnimationFrame(updateIfNeeded),draw(model),1)}return function(nextModel,isSync){model=nextModel,isSync?(draw(model),2===state&&(state=1)):(0===state&&_Browser_requestAnimationFrame(updateIfNeeded),state=2)}}var $elm$http$Http$onEffects={addEventListener:function(){},removeEventListener:function(){}},_Browser_window="undefined"!=typeof window?window:$elm$http$Http$onEffects;var exports=F2(function(x,y){return doStuff=function(){return _Browser_window.scroll(x,y),_Utils_Tuple0},{$:2,b:function(callback){_Browser_requestAnimationFrame(function(){callback({$:0,a:doStuff()})})},c:null};var doStuff});var $author$project$PeerPort$gameStartDecoder=F2(function(interval,task){return{$:2,b:function(callback){var id=setInterval(function(){_Scheduler_rawSpawn(task)},interval);return function(){clearInterval(id)}},c:null}});var $elm$http$Http$init=F5(function(smallString,offset,row,col,bigString){for(var smallLength=smallString.length,isGood=offset+smallLength<=bigString.length,i=0;isGood&&i<smallLength;)var code=bigString.charCodeAt(offset),isGood=smallString[i++]===bigString[offset++]&&(10==code?(row++,col=1):(col++,55296==(63488&code)?smallString[i++]===bigString[offset++]:1));return{a:isGood?offset:-1,b:row,c:col}}),$hecrj$html_parser$Html$Parser$namedCharacterReference=F3(function(predicate,offset,string){return offset<string.length?55296==(63488&string.charCodeAt(offset))?predicate(string.substr(offset,2))?offset+2:-1:predicate(string[offset])?"\n"===string[offset]?-2:offset+1:-1:-1}),_Parser_isAsciiCode=F3(function(code,offset,string){return string.charCodeAt(offset)===code}),_Parser_chompBase10=F2(function(offset,string){for(;offset<string.length;offset++){var code=string.charCodeAt(offset);if(code<48||57<code)return offset}return offset}),_Parser_consumeBase=F3(function(base,offset,string){for(var total=0;offset<string.length;offset++){var digit=string.charCodeAt(offset)-48;if(digit<0||base<=digit)break;total=base*total+digit}return{a:offset,b:total}}),_Parser_consumeBase16=F2(function(offset,string){for(var total=0;offset<string.length;offset++){var code=string.charCodeAt(offset);if(48>code||code>57)if(65>code||code>70){if(code<97||102<code)break;total=16*total+code-87}else total=16*total+code-55;else total=16*total+code-48}return{a:offset,b:total}}),$elm$http$Http$onEffects=F5(function(smallString,offset,row,col,bigString){for(var newOffset=bigString.indexOf(smallString,offset),target=newOffset<0?bigString.length:newOffset+smallString.length;offset<target;){var code=bigString.charCodeAt(offset++);10==code?(col=1,row++):(col++,55296==(63488&code)&&offset++)}return{a:newOffset,b:row,c:col}}),_Http_toTask=F3(function(router,toTask,request){return{$:2,b:function(callback){function done(response){callback(toTask(request.bk.a(response)))}var xhr=new XMLHttpRequest;xhr.addEventListener("error",function(){done($elm$http$Http$NetworkError_)}),xhr.addEventListener("timeout",function(){done($elm$http$Http$Timeout_)}),xhr.addEventListener("load",function(){done(function(toBody,xhr){return A2(200<=xhr.status&&xhr.status<300?$elm$http$Http$GoodStatus_:$elm$http$Http$BadStatus_,function(xhr){return{bE:xhr.responseURL,bz:xhr.status,bA:xhr.statusText,ax:function(rawHeaders){if(!rawHeaders)return $elm$core$Dict$empty;for(var headers=$elm$core$Dict$empty,headerPairs=rawHeaders.split("\r\n"),i=headerPairs.length;i--;){var key,value,headerPair=headerPairs[i],index=headerPair.indexOf(": ");0<index&&(key=headerPair.substring(0,index),value=headerPair.substring(2+index),headers=A3($elm$core$Dict$update,key,function(oldValue){return $elm$core$Maybe$Just($elm$core$Maybe$isJust(oldValue)?value+", "+oldValue.a:value)},headers))}return headers}(xhr.getAllResponseHeaders())}}(xhr),toBody(xhr.response))}(request.bk.b,xhr))}),$elm$core$Maybe$isJust(request.a4)&&function(router,xhr,tracker){xhr.upload.addEventListener("progress",function(event){xhr.c||_Scheduler_rawSpawn(A2($elm$core$Platform$sendToSelf,router,{a:tracker,b:$elm$http$Http$Sending({bx:event.loaded,a0:event.total})}))}),xhr.addEventListener("progress",function(event){xhr.c||_Scheduler_rawSpawn(A2($elm$core$Platform$sendToSelf,router,{a:tracker,b:$elm$http$Http$Receiving({bv:event.loaded,a0:event.lengthComputable?$elm$core$Maybe$Just(event.total):$elm$core$Maybe$Nothing})}))})}(router,xhr,request.a4.a);try{xhr.open(request.bq,request.bE,!0)}catch(e){return done($elm$http$Http$BadUrl_(request.bE))}return function(xhr,request){for(var headers=request.ax;headers.b;headers=headers.b)xhr.setRequestHeader(headers.a.a,headers.a.b);xhr.timeout=request.bC.a||0,xhr.responseType=request.bk.d,xhr.withCredentials=request.bb}(xhr,request),request.bd.a&&xhr.setRequestHeader("Content-Type",request.bd.a),xhr.send(request.bd.b),function(){xhr.c=!0,xhr.abort()}},c:null}});var _Http_expect=F3(function(type,toBody,toValue){return{$:0,d:type,b:toBody,a:toValue}}),_Http_mapExpect=F2(function(func,expect){return{$:0,d:expect.d,b:expect.b,a:function(x){return func(expect.a(x))}}});function $author$project$Model$GotUUID(a){return{$:12,a:a}}function $elm$json$Json$Decode$indent(str){return A2($elm$core$String$join,"\n    ",A2($elm$core$String$split,"\n",str))}function $elm$core$List$length(xs){return A3($elm$core$List$foldl,F2(function(_v0,i){return i+1}),0,xs)}function $elm$core$Char$isLower(code){return 97<=(code=$elm$core$Char$toCode(code))&&code<=122}function $elm$core$Char$isUpper(code){return(code=$elm$core$Char$toCode(code))<=90&&65<=code}function $elm$core$Char$isAlpha(_char){return $elm$core$Char$isLower(_char)||$elm$core$Char$isUpper(_char)}function $elm$core$Char$isAlphaNum(_char){return $elm$core$Char$isLower(_char)||$elm$core$Char$isUpper(_char)||function(code){code=$elm$core$Char$toCode(code);return code<=57&&48<=code}(_char)}function $elm$core$Basics$identity(x){return x}function $elm$core$Task$sequence(tasks){return A3($elm$core$List$foldr,$elm$core$Task$map2($elm$core$List$cons),$elm$core$Task$succeed(_List_Nil),tasks)}var $elm$core$List$cons=_List_cons,$elm$core$Dict$foldr=F3(function(func,acc,t){for(;;){if(-2===t.$)return acc;var left=t.d,$temp$func=func,$temp$acc=A3(func,t.b,t.c,A3($elm$core$Dict$foldr,func,acc,t.e));func=$temp$func,acc=$temp$acc,t=left}}),$elm$core$Dict$toList=function(dict){return A3($elm$core$Dict$foldr,F3(function(key,value,list){return A2($elm$core$List$cons,{a:key,b:value},list)}),_List_Nil,dict)},$elm$core$Basics$EQ=1,$elm$core$Basics$GT=2,$elm$core$Basics$LT=0,$elm$core$Basics$apL=F2(function(f,x){return f(x)}),$elm$core$Result$Err=function(a){return{$:1,a:a}},$elm$json$Json$Decode$Failure=F2(function(a,b){return{$:3,a:a,b:b}}),$elm$json$Json$Decode$Field=F2(function(a,b){return{$:0,a:a,b:b}}),$elm$json$Json$Decode$Index=F2(function(a,b){return{$:1,a:a,b:b}}),$elm$core$Result$Ok=function(a){return{$:0,a:a}},$elm$json$Json$Decode$OneOf=function(a){return{$:2,a:a}},$elm$core$Basics$add=_Basics_add,$elm$core$Maybe$Just=function(a){return{$:0,a:a}},$elm$core$Maybe$Nothing={$:1},$elm$core$String$all=_String_all,$elm$json$Json$Encode$encode=_Json_encode,$elm$core$String$fromInt=_String_fromNumber,$elm$core$String$join=F2(function(sep,chunks){return A2(_String_join,sep,_List_toArray(chunks))}),$elm$core$String$split=F2(function(sep,string){return _List_fromArray(A2(_String_split,sep,string))}),$elm$core$List$foldl=F3(function(func,acc,list){for(;;){if(!list.b)return acc;var xs=list.b,$temp$func=func,$temp$acc=A2(func,list.a,acc);func=$temp$func,acc=$temp$acc,list=xs}}),$elm$core$List$map2=_List_map2,$elm$core$List$rangeHelp=F3(function(lo,hi,list){for(;;){if(1<=_Utils_cmp(lo,hi))return list;var $temp$lo=lo,$temp$hi=hi-1,$temp$list=A2($elm$core$List$cons,hi,list);lo=$temp$lo,hi=$temp$hi,list=$temp$list}}),$elm$core$List$range=F2(function(lo,hi){return A3($elm$core$List$rangeHelp,lo,hi,_List_Nil)}),$elm$core$List$indexedMap=F2(function(f,xs){return A3($elm$core$List$map2,f,A2($elm$core$List$range,0,$elm$core$List$length(xs)-1),xs)}),$elm$core$Char$toCode=function(char){var code=char.charCodeAt(0);return code<55296||56319<code?code:1024*(code-55296)+char.charCodeAt(1)-56320+65536},$elm$core$List$reverse=function(list){return A3($elm$core$List$foldl,$elm$core$List$cons,_List_Nil,list)},$elm$core$String$uncons=function(string){var word=string.charCodeAt(0);return isNaN(word)?$elm$core$Maybe$Nothing:$elm$core$Maybe$Just(word<55296||56319<word?{a:string[0],b:string.slice(1)}:{a:string[0]+string[1],b:string.slice(2)})},$elm$json$Json$Decode$errorOneOf=F2(function(i,error){return"\n\n("+$elm$core$String$fromInt(i+1)+(") "+$elm$json$Json$Decode$indent($elm$json$Json$Decode$errorToString(error)))}),$elm$json$Json$Decode$errorToString=function(error){return A2($elm$json$Json$Decode$errorToStringHelp,error,_List_Nil)},$elm$json$Json$Decode$errorToStringHelp=F2(function(error,context){for(;;)switch(error.$){case 0:var f=error.a,err=error.b,isSimple=function(){var rest=$elm$core$String$uncons(f);if(1===rest.$)return!1;var _v2=rest.a,rest=_v2.b;return $elm$core$Char$isAlpha(_v2.a)&&A2($elm$core$String$all,$elm$core$Char$isAlphaNum,rest)}();error=err,context=A2($elm$core$List$cons,isSimple?"."+f:"['"+f+"']",context);continue;case 1:var err=error.b,msg="["+$elm$core$String$fromInt(error.a)+"]";error=err,context=A2($elm$core$List$cons,msg,context);continue;case 2:var json=error.a;if(json.b){if(json.b.b){var introduction=(context.b?"The Json.Decode.oneOf at json"+A2($elm$core$String$join,"",$elm$core$List$reverse(context)):"Json.Decode.oneOf")+" failed in the following "+$elm$core$String$fromInt($elm$core$List$length(json))+" ways:";return A2($elm$core$String$join,"\n\n",A2($elm$core$List$cons,introduction,A2($elm$core$List$indexedMap,$elm$json$Json$Decode$errorOneOf,json)))}error=err=json.a,context=context;continue}return"Ran into a Json.Decode.oneOf with no possibilities"+(context.b?" at json"+A2($elm$core$String$join,"",$elm$core$List$reverse(context)):"!");default:msg=error.a,json=error.b;return(introduction=context.b?"Problem with the value at json"+A2($elm$core$String$join,"",$elm$core$List$reverse(context))+":\n\n    ":"Problem with the given value:\n\n")+($elm$json$Json$Decode$indent(A2($elm$json$Json$Encode$encode,4,json))+"\n\n")+msg}}),$elm$core$Array$Array_elm_builtin=F4(function(a,b,c,d){return{$:0,a:a,b:b,c:c,d:d}}),$elm$core$Elm$JsArray$empty=[],$elm$core$Basics$ceiling=_Basics_ceiling,$elm$core$Basics$logBase=F2(function(base,number){return _Basics_log(number)/_Basics_log(base)}),$elm$core$Array$shiftStep=$elm$core$Basics$ceiling(A2($elm$core$Basics$logBase,2,32)),$elm$core$Array$empty=A4($elm$core$Array$Array_elm_builtin,0,$elm$core$Array$shiftStep,$elm$core$Elm$JsArray$empty,$elm$core$Elm$JsArray$empty),$elm$core$Elm$JsArray$initialize=_JsArray_initialize,$elm$core$Basics$eq=_Utils_equal,$elm$core$Basics$floor=$elm$json$Json$Decode$map2,$elm$core$Elm$JsArray$length=function(array){return array.length},$elm$core$Basics$max=F2(function(x,y){return 0<_Utils_cmp(x,y)?x:y}),$elm$core$Elm$JsArray$initializeFromList=$elm$random$Random$int,$elm$core$Array$compressNodes=F2(function(nodes,acc){for(;;){var newAcc=A2($elm$core$Elm$JsArray$initializeFromList,32,nodes),remainingNodes=newAcc.b,newAcc=A2($elm$core$List$cons,{$:0,a:newAcc.a},acc);if(!remainingNodes.b)return $elm$core$List$reverse(newAcc);nodes=remainingNodes,acc=newAcc}}),$elm$core$Array$treeFromBuilder=F2(function(nodeList,nodeListSize){for(;;){var newNodeSize=$elm$core$Basics$ceiling(nodeListSize/32);if(1===newNodeSize)return A2($elm$core$Elm$JsArray$initializeFromList,32,nodeList).a;nodeList=A2($elm$core$Array$compressNodes,nodeList,_List_Nil),nodeListSize=newNodeSize}}),$elm$core$Array$builderToArray=F2(function(tree,builder){if(builder.k){var treeLen=32*builder.k,depth=$elm$core$Basics$floor(A2($elm$core$Basics$logBase,32,treeLen-1)),tree=tree?$elm$core$List$reverse(builder.n):builder.n,tree=A2($elm$core$Array$treeFromBuilder,tree,builder.k);return A4($elm$core$Array$Array_elm_builtin,$elm$core$Elm$JsArray$length(builder.m)+treeLen,A2($elm$core$Basics$max,5,depth*$elm$core$Array$shiftStep),tree,builder.m)}return A4($elm$core$Array$Array_elm_builtin,$elm$core$Elm$JsArray$length(builder.m),$elm$core$Array$shiftStep,$elm$core$Elm$JsArray$empty,builder.m)}),$elm$core$Array$initializeHelp=F5(function(fn,fromIndex,len,nodeList,tail){for(;;){if(fromIndex<0)return A2($elm$core$Array$builderToArray,!1,{n:nodeList,k:len/32|0,m:tail});var leaf={$:1,a:A3($elm$core$Elm$JsArray$initialize,32,fromIndex,fn)};fn=fn,fromIndex=fromIndex-32,len=len,nodeList=A2($elm$core$List$cons,leaf,nodeList),tail=tail}}),$elm$core$Array$initialize=F2(function(len,fn){if(0<len){var tailLen=len%32;return A5($elm$core$Array$initializeHelp,fn,len-tailLen-32,len,_List_Nil,A3($elm$core$Elm$JsArray$initialize,tailLen,len-tailLen,fn))}return $elm$core$Array$empty}),$elm$core$Result$isOk=function(result){return!result.$},$elm$core$Platform$Cmd$batch=_Platform_batch,$elm$json$Json$Decode$map=$author$project$PeerPort$makePeer,$elm$json$Json$Decode$map2=$elm$core$Task$perform,$elm$json$Json$Decode$succeed=function(msg){return{$:0,a:msg}},$elm$virtual_dom$VirtualDom$toHandlerInt=function(handler){switch(handler.$){case 0:return 0;case 1:return 1;case 2:return 2;default:return 3}},$elm$core$String$contains=$elm$browser$Browser$element,$elm$core$String$length=function(str){return str.length},$elm$core$String$slice=converter,$elm$core$String$dropLeft=F2(function(n,string){return n<1?string:A3($elm$core$String$slice,n,$elm$core$String$length(string),string)}),$elm$core$String$isEmpty=function(string){return""===string},$elm$core$String$toInt=function(str){for(var total=0,code0=str.charCodeAt(0),start=43==code0||45==code0?1:0,i=start;i<str.length;++i){var code=str.charCodeAt(i);if(code<48||57<code)return $elm$core$Maybe$Nothing;total=10*total+code-48}return i==start?$elm$core$Maybe$Nothing:$elm$core$Maybe$Just(45==code0?-total:total)},$elm$core$String$startsWith=$author$project$PeerPort$peerDisconnectDecoder,$elm$core$Task$succeed=_Scheduler_succeed,$elm$random$Random$int=$elm$core$Task$succeed(0),$elm$core$List$foldrHelper=F4(function(fn,acc,ctr,c){if(c.b){var a=c.a,r3=c.b;if(r3.b){var b=r3.a,r4=r3.b;if(r4.b){c=r4.a,r3=r4.b;if(r3.b){r4=r3.b;return A2(fn,a,A2(fn,b,A2(fn,c,A2(fn,r3.a,500<ctr?A3($elm$core$List$foldl,fn,acc,$elm$core$List$reverse(r4)):A4($elm$core$List$foldrHelper,fn,acc,ctr+1,r4)))))}return A2(fn,a,A2(fn,b,A2(fn,c,acc)))}return A2(fn,a,A2(fn,b,acc))}return A2(fn,a,acc)}return acc}),$elm$core$List$foldr=F3(function(fn,acc,ls){return A4($elm$core$List$foldrHelper,fn,acc,0,ls)}),$elm$core$List$map=F2(function(f,xs){return A3($elm$core$List$foldr,F2(function(x,acc){return A2($elm$core$List$cons,f(x),acc)}),_List_Nil,xs)}),$elm$core$Task$andThen=_Scheduler_andThen,$elm$core$Task$map=F2(function(func,taskA){return A2($elm$core$Task$andThen,function(a){return $elm$core$Task$succeed(func(a))},taskA)}),$elm$core$Task$map2=F3(function(func,taskA,taskB){return A2($elm$core$Task$andThen,function(a){return A2($elm$core$Task$andThen,function(b){return $elm$core$Task$succeed(A2(func,a,b))},taskB)},taskA)}),$elm$core$Platform$sendToApp=$elm$random$Random$generate,$elm$core$Task$spawnCmd=F2(function(router,task){return _Scheduler_spawn(A2($elm$core$Task$andThen,$elm$core$Platform$sendToApp(router),task))}),$author$project$PeerPort$makePeer=F3(function(router,commands,state){return A2($elm$core$Task$map,function(_v0){return 0},$elm$core$Task$sequence(A2($elm$core$List$map,$elm$core$Task$spawnCmd(router),commands)))});_Platform_effectManagers.Task={b:$elm$random$Random$int,c:$author$project$PeerPort$makePeer,d:F3(function(_v0,_v1,_v2){return $elm$core$Task$succeed(0)}),e:F2(function(tagger,_v0){return A2($elm$core$Task$map,tagger,_v0)}),f:void 0};function $elm$random$Random$next(_v0){var incr=_v0.b;return A2($elm$random$Random$Seed,1664525*_v0.a+incr>>>0,incr)}var millisToPosix,$elm$core$Task$command=_Platform_leaf("Task"),$elm$core$Task$perform=F2(function(toMessage,task){return $elm$core$Task$command(A2($elm$core$Task$map,toMessage,task))}),$elm$browser$Browser$element=$elm$json$Json$Decode$int,$elm$random$Random$Seed=F2(function(a,b){return{$:0,a:a,b:b}}),$elm$random$Random$initialSeed=function(x){var _v0=$elm$random$Random$next(A2($elm$random$Random$Seed,0,1013904223));return $elm$random$Random$next(A2($elm$random$Random$Seed,_v0.a+x>>>0,_v0.b))},$elm$time$Time$now=(millisToPosix=$elm$core$Basics$identity,{$:2,b:function(callback){callback({$:0,a:millisToPosix(Date.now())})},c:null}),converter=A2($elm$core$Task$andThen,function(time){return $elm$core$Task$succeed($elm$random$Random$initialSeed(time))},$elm$time$Time$now),$elm$random$Random$step=F2(function(_v0,seed){return _v0(seed)}),$elm$random$Random$onEffects=F3(function(router,_v1,seed){if(_v1.b){var rest=_v1.b,_v1=A2($elm$random$Random$step,_v1.a,seed),newSeed=_v1.b;return A2($elm$core$Task$andThen,function(_v2){return A3($elm$random$Random$onEffects,router,rest,newSeed)},A2($elm$core$Platform$sendToApp,router,_v1.a))}return $elm$core$Task$succeed(seed)}),$author$project$PeerPort$peerDisconnectDecoder=F3(function(_v0,_v1,seed){return $elm$core$Task$succeed(seed)}),$elm$random$Random$map=F2(function(func,_v0){var genA=_v0;return function(seed1){var _v1=genA(seed1),seed1=_v1.b;return{a:func(_v1.a),b:seed1}}});_Platform_effectManagers.Random={b:converter,c:$elm$random$Random$onEffects,d:$author$project$PeerPort$peerDisconnectDecoder,e:F2(function(func,_v0){return A2($elm$random$Random$map,func,_v0)}),f:void 0};function $elm$core$Basics$negate(n){return-n}function $elm$random$Random$peel(word){return((word=277803737*((word=word.a)^word>>>4+(word>>>28)))>>>22^word)>>>0}function $author$project$Model$PeerMsg(a){return{$:11,a:a}}function $author$project$Model$Tick(a){return{$:10,a:a}}var $elm$random$Random$command=_Platform_leaf("Random"),$elm$random$Random$generate=F2(function(tagger,generator){return $elm$random$Random$command(A2($elm$random$Random$map,tagger,generator))}),$elm$core$Dict$RBEmpty_elm_builtin={$:-2},$elm$core$Dict$empty=$elm$core$Dict$RBEmpty_elm_builtin,$author$project$Main$initialModel={y:_List_Nil,R:!1,o:{A:_List_Nil,u:_List_Nil,N:_List_Nil,H:0},S:_List_Nil,a:{f:!1,ab:"",F:6,aI:"",B:"",j:"",g:0},i:$elm$core$Dict$empty,X:"",h:{$:2}},$elm$random$Random$int=F2(function(a,b){return function(seed0){var _v0=_Utils_cmp(a,b)<0?{a:a,b:b}:{a:b,b:a},lo=_v0.a,range=_v0.b-lo+1;if(range-1&range){var threshhold=(-range>>>0)%range>>>0;return function(seed){for(;;){var x=$elm$random$Random$peel(seed),seedN=$elm$random$Random$next(seed);if(0<=_Utils_cmp(x,threshhold))return{a:x%range+lo,b:seedN};seed=seedN}}(seed0)}return{a:((range-1&$elm$random$Random$peel(seed0))>>>0)+lo,b:$elm$random$Random$next(seed0)}}}),$elm$json$Json$Encode$string=_Json_wrap,$author$project$PeerPort$makePeer=_Platform_outgoingPort("makePeer",$elm$json$Json$Encode$string),$elm$core$Platform$Sub$batch=_Platform_batch,$elm$time$Time$Every=F2(function(a,b){return{$:0,a:a,b:b}}),$elm$time$Time$State=F2(function(taggers,processes){return{aQ:processes,a3:taggers}}),$elm$json$Json$Decode$int=$elm$core$Task$succeed(A2($elm$time$Time$State,$elm$core$Dict$empty,$elm$core$Dict$empty)),$elm$core$Basics$compare=$elm$json$Json$Decode$string,$elm$core$Dict$get=F2(function(targetKey,dict){for(;;){if(-2===dict.$)return $elm$core$Maybe$Nothing;var value=dict.c,left=dict.d,right=dict.e;switch(A2($elm$core$Basics$compare,targetKey,dict.b)){case 0:targetKey=targetKey,dict=left;continue;case 1:return $elm$core$Maybe$Just(value);default:targetKey=targetKey,dict=right;continue}}}),$elm$core$Dict$RBNode_elm_builtin=F5(function(a,b,c,d,e){return{$:-1,a:a,b:b,c:c,d:d,e:e}}),$elm$core$Dict$balance=F5(function(color,key,value,left,rRight){if(-1!==rRight.$||rRight.a){if(-1!==left.$||left.a||-1!==left.d.$||left.d.a)return A5($elm$core$Dict$RBNode_elm_builtin,color,key,value,left,rRight);var lK=left.b,lV=left.c,rLeft=left.d,lRight=left.e;return A5($elm$core$Dict$RBNode_elm_builtin,0,lK,lV,A5($elm$core$Dict$RBNode_elm_builtin,1,rLeft.b,rLeft.c,rLeft.d,rLeft.e),A5($elm$core$Dict$RBNode_elm_builtin,1,key,value,lRight,rRight))}var rK=rRight.b,rV=rRight.c,rLeft=rRight.d,rRight=rRight.e;if(-1!==left.$||left.a)return A5($elm$core$Dict$RBNode_elm_builtin,color,rK,rV,A5($elm$core$Dict$RBNode_elm_builtin,0,key,value,left,rLeft),rRight);var lK,lV,lRight;return A5($elm$core$Dict$RBNode_elm_builtin,0,key,value,A5($elm$core$Dict$RBNode_elm_builtin,1,lK=left.b,lV=left.c,left.d,lRight=left.e),A5($elm$core$Dict$RBNode_elm_builtin,1,rK,rV,rLeft,rRight))}),$elm$core$Dict$insertHelp=F3(function(key,value,dict){if(-2===dict.$)return A5($elm$core$Dict$RBNode_elm_builtin,0,key,value,$elm$core$Dict$RBEmpty_elm_builtin,$elm$core$Dict$RBEmpty_elm_builtin);var nColor=dict.a,nKey=dict.b,nValue=dict.c,nLeft=dict.d,nRight=dict.e;switch(A2($elm$core$Basics$compare,key,nKey)){case 0:return A5($elm$core$Dict$balance,nColor,nKey,nValue,A3($elm$core$Dict$insertHelp,key,value,nLeft),nRight);case 1:return A5($elm$core$Dict$RBNode_elm_builtin,nColor,nKey,value,nLeft,nRight);default:return A5($elm$core$Dict$balance,nColor,nKey,nValue,nLeft,A3($elm$core$Dict$insertHelp,key,value,nRight))}}),$elm$core$Dict$insert=F3(function(key,value,_v0){_v0=A3($elm$core$Dict$insertHelp,key,value,_v0);if(-1!==_v0.$||_v0.a)return _v0;return A5($elm$core$Dict$RBNode_elm_builtin,1,_v0.b,_v0.c,_v0.d,_v0.e)}),$elm$time$Time$addMySub=F2(function(_v1,state){var interval=_v1.a,tagger=_v1.b,_v1=A2($elm$core$Dict$get,interval,state);return A3($elm$core$Dict$insert,interval,1===_v1.$?_List_fromArray([tagger]):A2($elm$core$List$cons,tagger,_v1.a),state)}),$elm$core$Process$kill=function(proc){return{$:2,b:function(callback){var task=proc.f;2===task.$&&task.c&&task.c(),proc.f=null,callback({$:0,a:_Utils_Tuple0})},c:null}},$elm$core$Dict$foldl=F3(function(func,acc,dict){for(;;){if(-2===dict.$)return acc;var right=dict.e,$temp$func=func,$temp$acc=A3(func,dict.b,dict.c,A3($elm$core$Dict$foldl,func,acc,dict.d));func=$temp$func,acc=$temp$acc,dict=right}}),$elm$core$Dict$merge=F6(function(leftStep,bothStep,rightStep,leftDict,leftovers,intermediateResult){intermediateResult=A3($elm$core$Dict$foldl,F3(function(rKey,rValue,_v0){for(;;){var list=_v0.a,result=_v0.b;if(!list.b)return{a:list,b:A3(rightStep,rKey,rValue,result)};var rest=list.a,lKey=rest.a,lValue=rest.b,rest=list.b;if(0<=_Utils_cmp(lKey,rKey))return 0<_Utils_cmp(lKey,rKey)?{a:list,b:A3(rightStep,rKey,rValue,result)}:{a:rest,b:A4(bothStep,lKey,lValue,rValue,result)};rKey=rKey,rValue=rValue,_v0={a:rest,b:A3(leftStep,lKey,lValue,result)}}}),{a:$elm$core$Dict$toList(leftDict),b:intermediateResult},leftovers),leftovers=intermediateResult.a,intermediateResult=intermediateResult.b;return A3($elm$core$List$foldl,F2(function(_v4,result){return A3(leftStep,_v4.a,_v4.b,result)}),intermediateResult,leftovers)}),$elm$core$Platform$sendToSelf=jsValueTranslator,$elm$time$Time$setInterval=$author$project$PeerPort$gameStartDecoder,$elm$core$Process$spawn=_Scheduler_spawn,$elm$time$Time$spawnHelp=F3(function(router,spawnTimer,processes){if(spawnTimer.b){var interval=spawnTimer.a,rest=spawnTimer.b,spawnTimer=$elm$core$Process$spawn(A2($elm$time$Time$setInterval,interval,A2($elm$core$Platform$sendToSelf,router,interval)));return A2($elm$core$Task$andThen,function(id){return A3($elm$time$Time$spawnHelp,router,rest,A3($elm$core$Dict$insert,interval,id,processes))},spawnTimer)}return $elm$core$Task$succeed(processes)}),converter=F3(function(router,subs,rightStep){var _v1=rightStep.aQ,rightStep=F3(function(_v6,id,_v7){var kills=_v7.c;return{a:_v7.a,b:_v7.b,c:A2($elm$core$Task$andThen,function(_v5){return kills},$elm$core$Process$kill(id))}}),newTaggers=A3($elm$core$List$foldl,$elm$time$Time$addMySub,$elm$core$Dict$empty,subs),_v1=A6($elm$core$Dict$merge,F3(function(interval,taggers,_v4){var existing=_v4.b,kills=_v4.c;return{a:A2($elm$core$List$cons,interval,_v4.a),b:existing,c:kills}}),F4(function(interval,taggers,id,_v3){var kills=_v3.c;return{a:_v3.a,b:A3($elm$core$Dict$insert,interval,id,_v3.b),c:kills}}),rightStep,newTaggers,_v1,{a:_List_Nil,b:$elm$core$Dict$empty,c:$elm$core$Task$succeed(0)}),spawnList=_v1.a,existingDict=_v1.b;return A2($elm$core$Task$andThen,function(newProcesses){return $elm$core$Task$succeed(A2($elm$time$Time$State,newTaggers,newProcesses))},A2($elm$core$Task$andThen,function(_v2){return A3($elm$time$Time$spawnHelp,router,spawnList,existingDict)},_v1.c))}),$author$project$PeerPort$peerDisconnectDecoder=F3(function(router,_v0,state){_v0=A2($elm$core$Dict$get,_v0,state.a3);if(1===_v0.$)return $elm$core$Task$succeed(state);var taggers=_v0.a;return A2($elm$core$Task$andThen,function(_v1){return $elm$core$Task$succeed(state)},A2($elm$core$Task$andThen,function(time){return $elm$core$Task$sequence(A2($elm$core$List$map,function(tagger){return A2($elm$core$Platform$sendToApp,router,tagger(time))},taggers))},$elm$time$Time$now))}),$elm$core$Basics$composeL=F3(function(g,f,x){return g(f(x))});_Platform_effectManagers.Time={b:$elm$json$Json$Decode$int,c:converter,d:$author$project$PeerPort$peerDisconnectDecoder,e:0,f:F2(function(f,_v0){return A2($elm$time$Time$Every,_v0.a,A2($elm$core$Basics$composeL,f,_v0.b))})};var $elm$time$Time$subscription=_Platform_leaf("Time"),$elm$time$Time$every=F2(function(interval,tagger){return $elm$time$Time$subscription(A2($elm$time$Time$Every,interval,tagger))}),$elm$core$Platform$Sub$map=$elm$http$Http$onSelfMsg,$elm$core$Platform$Sub$none=$elm$core$Platform$Sub$batch(_List_Nil),$elm$core$Basics$composeR=F3(function(f,g,x){return g(f(x))}),$elm$json$Json$Decode$field=$author$project$PeerPort$uuidDecoder,$elm$json$Json$Decode$string=$author$project$PeerPort$gameFinishDecoder,jsValueTranslator=A2($elm$json$Json$Decode$map,function(a){return{$:9,a:a}},A2($elm$json$Json$Decode$field,"error",$elm$json$Json$Decode$string)),$author$project$PeerPort$gameStartDecoder=F3(function(a,b,c){return{$:3,a:a,b:b,c:c}}),$elm$json$Json$Decode$int=$author$project$PeerPort$gameInfoDecoder,converter=function(decoder){return{$:3,b:decoder}},$author$project$PeerPort$peerDisconnectDecoder=$elm$json$Json$Decode$decodeValue,$author$project$PeerPort$uuidDecoder=A2($elm$json$Json$Decode$field,"uuid",$elm$json$Json$Decode$int),$author$project$PeerPort$gameFinishDecoder=A2($elm$json$Json$Decode$field,"finish",A4($author$project$PeerPort$peerDisconnectDecoder,$author$project$PeerPort$gameStartDecoder,$author$project$PeerPort$uuidDecoder,A2($elm$json$Json$Decode$field,"path",converter($elm$json$Json$Decode$string)),A2($elm$json$Json$Decode$field,"time",$elm$json$Json$Decode$int))),$author$project$PeerPort$gameInfoDecoder=F2(function(a,b){return{$:10,a:a,b:b}}),$elm$json$Json$Decode$decodeValue=F4(function(seed,numDestinations,peers,started){return{F:numDestinations,i:peers,a_:seed,by:started}}),$author$project$PeerPort$peerDisconnectDecoder=$author$project$PeerPort$peerConnectDecoder,$author$project$PeerPort$gameStartDecoder=$elm$json$Json$Decode$map5,$author$project$PeerPort$peerConnectDecoder=F5(function(uuid,username,isHost,lastDest,finished){return{Q:finished,f:isHost,K:lastDest,j:username,g:uuid}}),$elm$json$Json$Decode$map5=$author$project$PeerPort$peerIdGenDecoder,$author$project$PeerPort$peerIdGenDecoder=A2($elm$json$Json$Decode$field,"username",$elm$json$Json$Decode$string),$author$project$PeerPort$peerConnectDecoder=A6($elm$json$Json$Decode$map5,$author$project$PeerPort$peerConnectDecoder,$author$project$PeerPort$uuidDecoder,$author$project$PeerPort$peerIdGenDecoder,A2($elm$json$Json$Decode$field,"isHost",$author$project$PeerPort$peerDisconnectDecoder),A2($elm$json$Json$Decode$field,"lastDest",$elm$json$Json$Decode$string),A2($elm$json$Json$Decode$field,"finished",$author$project$PeerPort$peerDisconnectDecoder)),$author$project$PeerPort$gameInfoDecoder=A2($elm$json$Json$Decode$field,"gameInfo",A3($elm$json$Json$Decode$map2,$author$project$PeerPort$gameInfoDecoder,$author$project$PeerPort$uuidDecoder,A2($elm$json$Json$Decode$field,"info",A5($author$project$PeerPort$gameStartDecoder,$elm$json$Json$Decode$decodeValue,A2($elm$json$Json$Decode$field,"seed",$elm$json$Json$Decode$string),A2($elm$json$Json$Decode$field,"numDestinations",$elm$json$Json$Decode$int),A2($elm$json$Json$Decode$field,"peers",converter($author$project$PeerPort$peerConnectDecoder)),A2($elm$json$Json$Decode$field,"started",$author$project$PeerPort$peerDisconnectDecoder))))),$author$project$PeerPort$gameStartDecoder=A2($elm$json$Json$Decode$field,"start",A2($elm$json$Json$Decode$map,function(a){return{$:1,a:a}},A2($elm$json$Json$Decode$field,"msg",$elm$json$Json$Decode$string))),$elm$json$Json$Decode$decodeValue=A2($elm$json$Json$Decode$map,function(a){return{$:6,a:a}},A2($elm$json$Json$Decode$field,"hostLost",$elm$json$Json$Decode$string)),converter=A2($elm$json$Json$Decode$map,function(a){return{$:7,a:a}},A2($elm$json$Json$Decode$field,"newGame",$elm$json$Json$Decode$string)),$author$project$PeerPort$peerConnectDecoder=A2($elm$json$Json$Decode$field,"peerConnect",A3($elm$json$Json$Decode$map2,F2(function(a,b){return{$:4,a:a,b:b}}),$author$project$PeerPort$peerIdGenDecoder,$author$project$PeerPort$uuidDecoder)),$author$project$PeerPort$peerDisconnectDecoder=A2($elm$json$Json$Decode$field,"peerDisconnect",A2($elm$json$Json$Decode$map,function(a){return{$:5,a:a}},$author$project$PeerPort$uuidDecoder)),$author$project$PeerPort$peerIdGenDecoder=A2($elm$json$Json$Decode$map,function(a){return{$:8,a:a}},A2($elm$json$Json$Decode$field,"id",$elm$json$Json$Decode$string)),jsValueTranslator=function(decoders){return{$:11,g:decoders}}(_List_fromArray([A2($elm$json$Json$Decode$field,"seedInfo",A3($elm$json$Json$Decode$map2,F2(function(a,b){return{$:0,a:a,b:b}}),A2($elm$json$Json$Decode$field,"numTitles",$elm$json$Json$Decode$int),A2($elm$json$Json$Decode$field,"seed",$elm$json$Json$Decode$string))),$author$project$PeerPort$gameStartDecoder,A2($elm$json$Json$Decode$field,"titleReach",A3($elm$json$Json$Decode$map2,F2(function(a,b){return{$:2,a:a,b:b}}),$author$project$PeerPort$uuidDecoder,A2($elm$json$Json$Decode$field,"title",$elm$json$Json$Decode$string))),$author$project$PeerPort$gameFinishDecoder,$author$project$PeerPort$peerConnectDecoder,$author$project$PeerPort$peerDisconnectDecoder,$author$project$PeerPort$peerIdGenDecoder,$author$project$PeerPort$gameInfoDecoder,jsValueTranslator,$elm$json$Json$Decode$decodeValue,converter])),$elm$json$Json$Decode$decodeValue=_Json_run,$author$project$PeerPort$receiveData=(converter=$author$project$PeerPort$receiveData,_Platform_checkPortName($author$project$PeerPort$receiveData="receiveData"),_Platform_effectManagers[$author$project$PeerPort$receiveData]={f:_Platform_incomingPortMap,u:converter,a:_Platform_setupIncomingPort},_Platform_leaf($author$project$PeerPort$receiveData)),$author$project$PeerPort$receiveDataFromJS=(jsValueTranslator=A2($elm$core$Basics$composeR,$elm$json$Json$Decode$decodeValue(jsValueTranslator),makeDataValue),$author$project$PeerPort$receiveData(jsValueTranslator));function makeDataValue(res){return res.$?{$:11,a:$elm$json$Json$Decode$errorToString(res.a)}:res.a}function $author$project$Main$subscriptions(model){return $elm$core$Platform$Sub$batch(_List_fromArray([model.h.$?$elm$core$Platform$Sub$none:A2($elm$time$Time$every,10,$author$project$Model$Tick),A2($elm$core$Platform$Sub$map,$author$project$Model$PeerMsg,$author$project$PeerPort$receiveDataFromJS)]))}function $author$project$Model$Loading(a){return{$:0,a:a}}function $hecrj$html_parser$Html$Parser$Text(a){return{$:0,a:a}}function $author$project$PageFetch$extractShortDesc(node){switch(node.$){case 0:return $elm$core$Maybe$Nothing;case 1:if("div"!==node.a||!node.b.b||"class"!==node.b.a.a||!node.c.b||node.c.a.$||node.c.b.b)return A3($elm$core$List$foldr,$author$project$Helpers$firstMaybe,$elm$core$Maybe$Nothing,A2($elm$core$List$map,$author$project$PageFetch$extractShortDesc,node.c));var desc=node.c.a.a;return A2($elm$core$String$contains,"shortdescription",node.b.a.b)?$elm$core$Maybe$Just(desc):$elm$core$Maybe$Nothing;default:return $elm$core$Maybe$Nothing}}function $elm$core$List$head(list){return list.b?$elm$core$Maybe$Just(list.a):$elm$core$Maybe$Nothing}function $author$project$PageFetch$grabImg(imgs){return imgs=A3($elm$core$Basics$composeR,$author$project$Helpers$grabByClass("infobox"),$elm$core$List$concatMap($author$project$Helpers$grabElements("img")),imgs),$elm$core$List$head(imgs)}function $hecrj$html_parser$Html$Parser$chompOneOrMore(fn){return A2($elm$parser$Parser$ignorer,$elm$parser$Parser$chompIf(fn),$elm$parser$Parser$chompWhile(fn))}function $elm$core$Basics$not(bool){return!bool}function $elm$parser$Parser$problem(msg){return x={$:12,a:msg},function(s){return A2($elm$parser$Parser$Advanced$Bad,!1,A2($elm$parser$Parser$Advanced$fromState,s,x))};var x}function $hecrj$html_parser$Html$Parser$Comment(a){return{$:2,a:a}}function $elm$parser$Parser$toToken(str){return A2($elm$parser$Parser$Advanced$Token,str,$elm$parser$Parser$Expecting(str))}function $elm$parser$Parser$token(str){return function(_v0){var str=_v0.a,expecting=_v0.b,progress=!$elm$core$String$isEmpty(str);return function(s){var newCol=A5($elm$parser$Parser$Advanced$isSubString,str,s.c,s.aY,s.ap,s.b),newOffset=newCol.a,newRow=newCol.b,newCol=newCol.c;return _Utils_eq(newOffset,-1)?A2($elm$parser$Parser$Advanced$Bad,!1,A2($elm$parser$Parser$Advanced$fromState,s,expecting)):A3($elm$parser$Parser$Advanced$Good,progress,0,{ap:newCol,d:s.d,e:s.e,c:newOffset,aY:newRow,b:s.b})}}($elm$parser$Parser$toToken(str))}function $elm$parser$Parser$toAdvancedStep(step){return step.$?{$:1,a:step.a}:{$:0,a:step.a}}function $elm$core$String$fromChar(_char){return A2($elm$core$String$cons,_char,"")}function $elm$core$Char$fromCode(code){return code<0||1114111<code?"�":65535<code?String.fromCharCode(55296+Math.floor((code-=65536)/1024),code%1024+56320):String.fromCharCode(code)}function $elm$core$String$toList(string){return A3($elm$core$String$foldr,$elm$core$List$cons,_List_Nil,string)}function $rtfeldman$elm_hex$Hex$fromString(str){if($elm$core$String$isEmpty(str))return $elm$core$Result$Err("Empty strings are not valid hexadecimal strings.");var result=function(){if(A2($elm$core$String$startsWith,"-",str)){var list=A2($elm$core$Maybe$withDefault,_List_Nil,function(list){if(list.b)return $elm$core$Maybe$Just(list.b);return $elm$core$Maybe$Nothing}($elm$core$String$toList(str)));return A2($elm$core$Result$map,$elm$core$Basics$negate,A3($rtfeldman$elm_hex$Hex$fromStringHelp,$elm$core$List$length(list)-1,list,0))}return A3($rtfeldman$elm_hex$Hex$fromStringHelp,$elm$core$String$length(str)-1,$elm$core$String$toList(str),0)}();return A2($elm$core$Result$mapError,function(err){return A2($elm$core$String$join," ",_List_fromArray(['"'+str+'"',"is not a valid hexadecimal string because",err]))},result)}function $hecrj$html_parser$Html$Parser$tagAttributeQuotedValue(quote){return A2($elm$parser$Parser$keeper,A2($elm$parser$Parser$ignorer,$elm$parser$Parser$succeed($elm$core$Basics$identity),$elm$parser$Parser$chompIf($elm$core$Basics$eq(quote))),A2($elm$parser$Parser$ignorer,A2($elm$parser$Parser$map,$elm$core$String$join(""),$hecrj$html_parser$Html$Parser$many($elm$parser$Parser$oneOf(_List_fromArray([$elm$parser$Parser$getChompedString($hecrj$html_parser$Html$Parser$chompOneOrMore(function(c){return!_Utils_eq(c,quote)&&"&"!==c})),$hecrj$html_parser$Html$Parser$characterReference])))),$elm$parser$Parser$chompIf($elm$core$Basics$eq(quote))))}var $author$project$Model$Preview={$:3},$author$project$Main$activateClippy=_Platform_outgoingPort("activateClippySignal",$elm$json$Json$Encode$string)("This is a dummy value"),$author$project$Main$activateTooltips=_Platform_outgoingPort("activateTooltipsSignal",$elm$json$Json$Encode$string)("This is a dummy value"),$author$project$Model$GotDescription=F2(function(a,b){return{$:1,a:a,b:b}}),$elm$core$Maybe$andThen=F2(function(callback,maybeValue){return maybeValue.$?$elm$core$Maybe$Nothing:callback(maybeValue.a)}),$author$project$Helpers$firstMaybe=F2(function(left,right){return 1===left.$?right:left}),$elm$core$List$append=F2(function(xs,ys){return ys.b?A3($elm$core$List$foldr,$elm$core$List$cons,ys,xs):xs}),$elm$core$List$concatMap=F2(function(f,list){return A3($elm$core$List$foldr,$elm$core$List$append,_List_Nil,A2($elm$core$List$map,f,list))}),$author$project$Helpers$grabByClass=F2(function(clazz,node){switch(node.$){case 0:return _List_Nil;case 1:var element=node,_v1=element.b,rest=element.c,rest=A2($elm$core$List$concatMap,$author$project$Helpers$grabByClass(clazz),rest),_v1=function(attrs){for(;;){if(!attrs.b)return $elm$core$Maybe$Nothing;var _v1=attrs.a,rest=attrs.b;if("class"===_v1.a)return $elm$core$Maybe$Just(_v1.b);attrs=rest}}(_v1);return!_v1.$&&A2($elm$core$String$contains,clazz,_v1.a)?A2($elm$core$List$cons,element,rest):rest;default:return _List_Nil}}),$author$project$Helpers$grabElements=F2(function(tag,node){switch(node.$){case 0:return _List_Nil;case 1:var element=node,nTag=element.a,rest=element.c,rest=A2($elm$core$List$concatMap,$author$project$Helpers$grabElements(tag),rest);return _Utils_eq(tag,nTag)?A2($elm$core$List$cons,element,rest):rest;default:return _List_Nil}}),$hecrj$html_parser$Html$Parser$Element=F3(function(a,b,c){return{$:1,a:a,b:b,c:c}}),$elm$parser$Parser$Advanced$Bad=F2(function(a,b){return{$:1,a:a,b:b}}),$elm$parser$Parser$Advanced$Good=F3(function(a,b,c){return{$:0,a:a,b:b,c:c}}),$elm$parser$Parser$andThen=F2(function(callback,_v0){var parseA=_v0;return function(_v3){var _v1=parseA(_v3);if(1===_v1.$)return A2($elm$parser$Parser$Advanced$Bad,_v1.a,_v1.b);var p1=_v1.a,_v3=_v1.c,_v3=callback(_v1.b)(_v3);if(1===_v3.$){var p2=_v3.a;return A2($elm$parser$Parser$Advanced$Bad,p1||p2,_v3.b)}p2=_v3.a;return A3($elm$parser$Parser$Advanced$Good,p1||p2,_v3.b,_v3.c)}}),$elm$parser$Parser$backtrackable=function(_v0){var parse=_v0;return function(_v1){_v1=parse(_v1);return 1!==_v1.$?A3($elm$parser$Parser$Advanced$Good,!1,_v1.b,_v1.c):A2($elm$parser$Parser$Advanced$Bad,!1,_v1.b)}},$elm$parser$Parser$UnexpectedChar={$:11},$elm$parser$Parser$Advanced$AddRight=F2(function(a,b){return{$:1,a:a,b:b}}),$elm$parser$Parser$Advanced$DeadEnd=F4(function(row,col,problem,contextStack){return{ap:col,bg:contextStack,aO:problem,aY:row}}),$elm$parser$Parser$Advanced$Empty={$:0},$elm$parser$Parser$Advanced$fromState=F2(function(s,x){return A2($elm$parser$Parser$Advanced$AddRight,$elm$parser$Parser$Advanced$Empty,A4($elm$parser$Parser$Advanced$DeadEnd,s.aY,s.ap,x,s.d))}),$elm$parser$Parser$Advanced$isSubChar=$hecrj$html_parser$Html$Parser$namedCharacterReference,$elm$parser$Parser$Advanced$chompIf=F2(function(isGood,expecting){return function(s){var newOffset=A3($elm$parser$Parser$Advanced$isSubChar,isGood,s.c,s.b);return _Utils_eq(newOffset,-1)?A2($elm$parser$Parser$Advanced$Bad,!1,A2($elm$parser$Parser$Advanced$fromState,s,expecting)):_Utils_eq(newOffset,-2)?A3($elm$parser$Parser$Advanced$Good,!0,0,{ap:1,d:s.d,e:s.e,c:s.c+1,aY:s.aY+1,b:s.b}):A3($elm$parser$Parser$Advanced$Good,!0,0,{ap:s.ap+1,d:s.d,e:s.e,c:newOffset,aY:s.aY,b:s.b})}}),$elm$parser$Parser$chompIf=function(isGood){return A2($elm$parser$Parser$Advanced$chompIf,isGood,$elm$parser$Parser$UnexpectedChar)},$elm$parser$Parser$Advanced$chompWhileHelp=F5(function(isGood,offset,row,col,s0){for(;;){var newOffset=A3($elm$parser$Parser$Advanced$isSubChar,isGood,offset,s0.b);if(_Utils_eq(newOffset,-1))return A3($elm$parser$Parser$Advanced$Good,_Utils_cmp(s0.c,offset)<0,0,{ap:col,d:s0.d,e:s0.e,c:offset,aY:row,b:s0.b});s0=(col=_Utils_eq(newOffset,-2)?(isGood=isGood,offset=offset+1,row=row+1,1):(isGood=isGood,offset=newOffset,row=row,col+1),s0)}}),$elm$parser$Parser$chompWhile=function(isGood){return function(s){return A5($elm$parser$Parser$Advanced$chompWhileHelp,isGood,s.c,s.aY,s.ap,s)}},$elm$core$Basics$always=F2(function(a,_v0){return a}),$elm$parser$Parser$Advanced$map2=F3(function(func,_v0,_v1){var parseA=_v0,parseB=_v1;return function(_v3){var s2=parseA(_v3);if(1===s2.$)return A2($elm$parser$Parser$Advanced$Bad,s2.a,s2.b);var p1=s2.a,a=s2.b,_v3=parseB(s2.c);if(1===_v3.$){var p2=_v3.a;return A2($elm$parser$Parser$Advanced$Bad,p1||p2,_v3.b)}p2=_v3.a,s2=_v3.c;return A3($elm$parser$Parser$Advanced$Good,p1||p2,A2(func,a,_v3.b),s2)}}),$elm$parser$Parser$ignorer=F2(function(keepParser,ignoreParser){return A3($elm$parser$Parser$Advanced$map2,$elm$core$Basics$always,keepParser,ignoreParser)}),$elm$parser$Parser$Advanced$mapChompedString=F2(function(func,_v0){var parse=_v0;return function(s0){var s1=parse(s0);if(1===s1.$)return A2($elm$parser$Parser$Advanced$Bad,p=s1.a,s1.b);var p=s1.a,a=s1.b,s1=s1.c;return A3($elm$parser$Parser$Advanced$Good,p,A2(func,A3($elm$core$String$slice,s0.c,s1.c,s0.b),a),s1)}}),$elm$parser$Parser$getChompedString=function(parser){return A2($elm$parser$Parser$Advanced$mapChompedString,$elm$core$Basics$always,parser)},$hecrj$html_parser$Html$Parser$isSpaceCharacter=function(c){return" "===c||"\t"===c||"\n"===c||"\r"===c||"\f"===c||" "===c},$elm$parser$Parser$succeed=function(a){return function(s){return A3($elm$parser$Parser$Advanced$Good,!1,a,s)}},$elm$core$String$toLower=function(str){return str.toLowerCase()},$hecrj$html_parser$Html$Parser$closingTag=function(name){var chompName=A2($elm$parser$Parser$andThen,function(closingName){return _Utils_eq($elm$core$String$toLower(closingName),name)?$elm$parser$Parser$succeed(0):$elm$parser$Parser$problem("closing tag does not match opening tag: "+name)},$elm$parser$Parser$getChompedString($hecrj$html_parser$Html$Parser$chompOneOrMore(function(c){return!$hecrj$html_parser$Html$Parser$isSpaceCharacter(c)&&">"!==c})));return A2($elm$parser$Parser$ignorer,A2($elm$parser$Parser$ignorer,A2($elm$parser$Parser$ignorer,A2($elm$parser$Parser$ignorer,$elm$parser$Parser$chompIf($elm$core$Basics$eq("<")),$elm$parser$Parser$chompIf($elm$core$Basics$eq("/"))),chompName),$elm$parser$Parser$chompWhile($hecrj$html_parser$Html$Parser$isSpaceCharacter)),$elm$parser$Parser$chompIf($elm$core$Basics$eq(">")))},$elm$parser$Parser$Advanced$findSubString=$elm$http$Http$onEffects,$elm$parser$Parser$Advanced$fromInfo=F4(function(row,col,x,context){return A2($elm$parser$Parser$Advanced$AddRight,$elm$parser$Parser$Advanced$Empty,A4($elm$parser$Parser$Advanced$DeadEnd,row,col,x,context))}),$elm$parser$Parser$Expecting=function(a){return{$:0,a:a}},$elm$parser$Parser$Advanced$Token=F2(function(a,b){return{$:0,a:a,b:b}}),$elm$parser$Parser$keeper=F2(function(parseFunc,parseArg){return A3($elm$parser$Parser$Advanced$map2,$elm$core$Basics$apL,parseFunc,parseArg)}),$elm$parser$Parser$Advanced$isSubString=$elm$http$Http$init,$hecrj$html_parser$Html$Parser$namedCharacterReference=A2($elm$parser$Parser$keeper,A2($elm$parser$Parser$ignorer,A2($elm$parser$Parser$ignorer,$elm$parser$Parser$succeed($elm$core$Basics$identity),$elm$parser$Parser$token("<!")),$elm$parser$Parser$token("--")),A2($elm$parser$Parser$ignorer,$elm$parser$Parser$getChompedString(function(_v0){var str=_v0.a,expecting=_v0.b;return function(s){var newCol=A5($elm$parser$Parser$Advanced$findSubString,str,s.c,s.aY,s.ap,s.b),newOffset=newCol.a,newRow=newCol.b,newCol=newCol.c;return _Utils_eq(newOffset,-1)?A2($elm$parser$Parser$Advanced$Bad,!1,A4($elm$parser$Parser$Advanced$fromInfo,newRow,newCol,expecting,s.d)):A3($elm$parser$Parser$Advanced$Good,_Utils_cmp(s.c,newOffset)<0,0,{ap:newCol,d:s.d,e:s.e,c:newOffset,aY:newRow,b:s.b})}}($elm$parser$Parser$toToken("--\x3e"))),$elm$parser$Parser$token("--\x3e"))),$elm$parser$Parser$map=F2(function(func,_v0){var parse=_v0;return function(s1){var _v1=parse(s1);if(_v1.$)return A2($elm$parser$Parser$Advanced$Bad,p=_v1.a,_v1.b);var p=_v1.a,s1=_v1.c;return A3($elm$parser$Parser$Advanced$Good,p,func(_v1.b),s1)}}),$hecrj$html_parser$Html$Parser$comment=A2($elm$parser$Parser$map,$hecrj$html_parser$Html$Parser$Comment,$hecrj$html_parser$Html$Parser$namedCharacterReference),$elm$core$List$any=F2(function(isOkay,list){for(;;){if(!list.b)return!1;var xs=list.b;if(isOkay(list.a))return!0;isOkay=isOkay,list=xs}}),$elm$core$List$member=F2(function(x,xs){return A2($elm$core$List$any,function(a){return _Utils_eq(a,x)},xs)}),$hecrj$html_parser$Html$Parser$voidElements=_List_fromArray(["area","base","br","col","embed","hr","img","input","link","meta","param","source","track","wbr"]),$hecrj$html_parser$Html$Parser$isVoidElement=function(name){return A2($elm$core$List$member,name,$hecrj$html_parser$Html$Parser$voidElements)},$elm$parser$Parser$Done=function(a){return{$:1,a:a}},$elm$parser$Parser$Loop=function(a){return{$:0,a:a}},$elm$parser$Parser$Advanced$loopHelp=F4(function(p,state,callback,s0){for(;;){var s1=callback(state)(s0);if(s1.$){p1=s1.a;return A2($elm$parser$Parser$Advanced$Bad,p||p1,s1.b)}var p1=s1.a,step=s1.b,s1=s1.c;if(step.$)return A3($elm$parser$Parser$Advanced$Good,p||p1,step.a,s1);p=p||p1,state=step.a,callback=callback,s0=s1}}),$elm$parser$Parser$Advanced$loop=F2(function(state,callback){return function(s){return A4($elm$parser$Parser$Advanced$loopHelp,!1,state,callback,s)}}),$elm$parser$Parser$loop=F2(function(state,callback){return A2($elm$parser$Parser$Advanced$loop,state,function(s){return A2($elm$parser$Parser$map,$elm$parser$Parser$toAdvancedStep,callback(s))})}),$elm$parser$Parser$Advanced$Append=F2(function(a,b){return{$:2,a:a,b:b}}),$elm$parser$Parser$Advanced$oneOfHelp=F3(function(s0,bag,parsers){for(;;){if(!parsers.b)return A2($elm$parser$Parser$Advanced$Bad,!1,bag);var step,_v1=parsers.a,remainingParsers=parsers.b,_v1=_v1(s0);if(!_v1.$)return step=_v1;if((step=_v1).a)return step;s0=s0,bag=A2($elm$parser$Parser$Advanced$Append,bag,step.b),parsers=remainingParsers}}),$elm$parser$Parser$oneOf=function(parsers){return function(s){return A3($elm$parser$Parser$Advanced$oneOfHelp,s,$elm$parser$Parser$Advanced$Empty,parsers)}},$hecrj$html_parser$Html$Parser$many=function(parser_){return A2($elm$parser$Parser$loop,_List_Nil,function(list){return $elm$parser$Parser$oneOf(_List_fromArray([A2($elm$parser$Parser$map,function(_new){return $elm$parser$Parser$Loop(A2($elm$core$List$cons,_new,list))},parser_),$elm$parser$Parser$succeed($elm$parser$Parser$Done($elm$core$List$reverse(list)))]))})},$elm$core$Tuple$pair=F2(function(a,b){return{a:a,b:b}}),$elm$http$Http$onEffects=A2($elm$parser$Parser$map,$elm$core$String$toLower,$elm$parser$Parser$getChompedString($hecrj$html_parser$Html$Parser$chompOneOrMore(function(c){return!$hecrj$html_parser$Html$Parser$isSpaceCharacter(c)&&'"'!==c&&"'"!==c&&">"!==c&&"/"!==c&&"="!==c}))),$elm$http$Http$init=$elm$parser$Parser$chompIf($elm$core$Basics$eq(";")),$hecrj$html_parser$Html$Parser$NamedCharacterReferences$dict=($hecrj$html_parser$Html$Parser$namedCharacterReference=_List_fromArray([{a:"Aacute",b:"Á"},{a:"aacute",b:"á"},{a:"Abreve",b:"Ă"},{a:"abreve",b:"ă"},{a:"ac",b:"∾"},{a:"acd",b:"∿"},{a:"acE",b:"∾̳"},{a:"Acirc",b:"Â"},{a:"acirc",b:"â"},{a:"acute",b:"´"},{a:"Acy",b:"А"},{a:"acy",b:"а"},{a:"AElig",b:"Æ"},{a:"aelig",b:"æ"},{a:"af",b:"⁡"},{a:"Afr",b:"𝔄"},{a:"afr",b:"𝔞"},{a:"Agrave",b:"À"},{a:"agrave",b:"à"},{a:"alefsym",b:"ℵ"},{a:"aleph",b:"ℵ"},{a:"Alpha",b:"Α"},{a:"alpha",b:"α"},{a:"Amacr",b:"Ā"},{a:"amacr",b:"ā"},{a:"amalg",b:"⨿"},{a:"amp",b:"&"},{a:"AMP",b:"&"},{a:"andand",b:"⩕"},{a:"And",b:"⩓"},{a:"and",b:"∧"},{a:"andd",b:"⩜"},{a:"andslope",b:"⩘"},{a:"andv",b:"⩚"},{a:"ang",b:"∠"},{a:"ange",b:"⦤"},{a:"angle",b:"∠"},{a:"angmsdaa",b:"⦨"},{a:"angmsdab",b:"⦩"},{a:"angmsdac",b:"⦪"},{a:"angmsdad",b:"⦫"},{a:"angmsdae",b:"⦬"},{a:"angmsdaf",b:"⦭"},{a:"angmsdag",b:"⦮"},{a:"angmsdah",b:"⦯"},{a:"angmsd",b:"∡"},{a:"angrt",b:"∟"},{a:"angrtvb",b:"⊾"},{a:"angrtvbd",b:"⦝"},{a:"angsph",b:"∢"},{a:"angst",b:"Å"},{a:"angzarr",b:"⍼"},{a:"Aogon",b:"Ą"},{a:"aogon",b:"ą"},{a:"Aopf",b:"𝔸"},{a:"aopf",b:"𝕒"},{a:"apacir",b:"⩯"},{a:"ap",b:"≈"},{a:"apE",b:"⩰"},{a:"ape",b:"≊"},{a:"apid",b:"≋"},{a:"apos",b:"'"},{a:"ApplyFunction",b:"⁡"},{a:"approx",b:"≈"},{a:"approxeq",b:"≊"},{a:"Aring",b:"Å"},{a:"aring",b:"å"},{a:"Ascr",b:"𝒜"},{a:"ascr",b:"𝒶"},{a:"Assign",b:"≔"},{a:"ast",b:"*"},{a:"asymp",b:"≈"},{a:"asympeq",b:"≍"},{a:"Atilde",b:"Ã"},{a:"atilde",b:"ã"},{a:"Auml",b:"Ä"},{a:"auml",b:"ä"},{a:"awconint",b:"∳"},{a:"awint",b:"⨑"},{a:"backcong",b:"≌"},{a:"backepsilon",b:"϶"},{a:"backprime",b:"‵"},{a:"backsim",b:"∽"},{a:"backsimeq",b:"⋍"},{a:"Backslash",b:"∖"},{a:"Barv",b:"⫧"},{a:"barvee",b:"⊽"},{a:"barwed",b:"⌅"},{a:"Barwed",b:"⌆"},{a:"barwedge",b:"⌅"},{a:"bbrk",b:"⎵"},{a:"bbrktbrk",b:"⎶"},{a:"bcong",b:"≌"},{a:"Bcy",b:"Б"},{a:"bcy",b:"б"},{a:"bdquo",b:"„"},{a:"becaus",b:"∵"},{a:"because",b:"∵"},{a:"Because",b:"∵"},{a:"bemptyv",b:"⦰"},{a:"bepsi",b:"϶"},{a:"bernou",b:"ℬ"},{a:"Bernoullis",b:"ℬ"},{a:"Beta",b:"Β"},{a:"beta",b:"β"},{a:"beth",b:"ℶ"},{a:"between",b:"≬"},{a:"Bfr",b:"𝔅"},{a:"bfr",b:"𝔟"},{a:"bigcap",b:"⋂"},{a:"bigcirc",b:"◯"},{a:"bigcup",b:"⋃"},{a:"bigodot",b:"⨀"},{a:"bigoplus",b:"⨁"},{a:"bigotimes",b:"⨂"},{a:"bigsqcup",b:"⨆"},{a:"bigstar",b:"★"},{a:"bigtriangledown",b:"▽"},{a:"bigtriangleup",b:"△"},{a:"biguplus",b:"⨄"},{a:"bigvee",b:"⋁"},{a:"bigwedge",b:"⋀"},{a:"bkarow",b:"⤍"},{a:"blacklozenge",b:"⧫"},{a:"blacksquare",b:"▪"},{a:"blacktriangle",b:"▴"},{a:"blacktriangledown",b:"▾"},{a:"blacktriangleleft",b:"◂"},{a:"blacktriangleright",b:"▸"},{a:"blank",b:"␣"},{a:"blk12",b:"▒"},{a:"blk14",b:"░"},{a:"blk34",b:"▓"},{a:"block",b:"█"},{a:"bne",b:"=⃥"},{a:"bnequiv",b:"≡⃥"},{a:"bNot",b:"⫭"},{a:"bnot",b:"⌐"},{a:"Bopf",b:"𝔹"},{a:"bopf",b:"𝕓"},{a:"bot",b:"⊥"},{a:"bottom",b:"⊥"},{a:"bowtie",b:"⋈"},{a:"boxbox",b:"⧉"},{a:"boxdl",b:"┐"},{a:"boxdL",b:"╕"},{a:"boxDl",b:"╖"},{a:"boxDL",b:"╗"},{a:"boxdr",b:"┌"},{a:"boxdR",b:"╒"},{a:"boxDr",b:"╓"},{a:"boxDR",b:"╔"},{a:"boxh",b:"─"},{a:"boxH",b:"═"},{a:"boxhd",b:"┬"},{a:"boxHd",b:"╤"},{a:"boxhD",b:"╥"},{a:"boxHD",b:"╦"},{a:"boxhu",b:"┴"},{a:"boxHu",b:"╧"},{a:"boxhU",b:"╨"},{a:"boxHU",b:"╩"},{a:"boxminus",b:"⊟"},{a:"boxplus",b:"⊞"},{a:"boxtimes",b:"⊠"},{a:"boxul",b:"┘"},{a:"boxuL",b:"╛"},{a:"boxUl",b:"╜"},{a:"boxUL",b:"╝"},{a:"boxur",b:"└"},{a:"boxuR",b:"╘"},{a:"boxUr",b:"╙"},{a:"boxUR",b:"╚"},{a:"boxv",b:"│"},{a:"boxV",b:"║"},{a:"boxvh",b:"┼"},{a:"boxvH",b:"╪"},{a:"boxVh",b:"╫"},{a:"boxVH",b:"╬"},{a:"boxvl",b:"┤"},{a:"boxvL",b:"╡"},{a:"boxVl",b:"╢"},{a:"boxVL",b:"╣"},{a:"boxvr",b:"├"},{a:"boxvR",b:"╞"},{a:"boxVr",b:"╟"},{a:"boxVR",b:"╠"},{a:"bprime",b:"‵"},{a:"breve",b:"˘"},{a:"Breve",b:"˘"},{a:"brvbar",b:"¦"},{a:"bscr",b:"𝒷"},{a:"Bscr",b:"ℬ"},{a:"bsemi",b:"⁏"},{a:"bsim",b:"∽"},{a:"bsime",b:"⋍"},{a:"bsolb",b:"⧅"},{a:"bsol",b:"\\"},{a:"bsolhsub",b:"⟈"},{a:"bull",b:"•"},{a:"bullet",b:"•"},{a:"bump",b:"≎"},{a:"bumpE",b:"⪮"},{a:"bumpe",b:"≏"},{a:"Bumpeq",b:"≎"},{a:"bumpeq",b:"≏"},{a:"Cacute",b:"Ć"},{a:"cacute",b:"ć"},{a:"capand",b:"⩄"},{a:"capbrcup",b:"⩉"},{a:"capcap",b:"⩋"},{a:"cap",b:"∩"},{a:"Cap",b:"⋒"},{a:"capcup",b:"⩇"},{a:"capdot",b:"⩀"},{a:"CapitalDifferentialD",b:"ⅅ"},{a:"caps",b:"∩︀"},{a:"caret",b:"⁁"},{a:"caron",b:"ˇ"},{a:"Cayleys",b:"ℭ"},{a:"ccaps",b:"⩍"},{a:"Ccaron",b:"Č"},{a:"ccaron",b:"č"},{a:"Ccedil",b:"Ç"},{a:"ccedil",b:"ç"},{a:"Ccirc",b:"Ĉ"},{a:"ccirc",b:"ĉ"},{a:"Cconint",b:"∰"},{a:"ccups",b:"⩌"},{a:"ccupssm",b:"⩐"},{a:"Cdot",b:"Ċ"},{a:"cdot",b:"ċ"},{a:"cedil",b:"¸"},{a:"Cedilla",b:"¸"},{a:"cemptyv",b:"⦲"},{a:"cent",b:"¢"},{a:"centerdot",b:"·"},{a:"CenterDot",b:"·"},{a:"cfr",b:"𝔠"},{a:"Cfr",b:"ℭ"},{a:"CHcy",b:"Ч"},{a:"chcy",b:"ч"},{a:"check",b:"✓"},{a:"checkmark",b:"✓"},{a:"Chi",b:"Χ"},{a:"chi",b:"χ"},{a:"circ",b:"ˆ"},{a:"circeq",b:"≗"},{a:"circlearrowleft",b:"↺"},{a:"circlearrowright",b:"↻"},{a:"circledast",b:"⊛"},{a:"circledcirc",b:"⊚"},{a:"circleddash",b:"⊝"},{a:"CircleDot",b:"⊙"},{a:"circledR",b:"®"},{a:"circledS",b:"Ⓢ"},{a:"CircleMinus",b:"⊖"},{a:"CirclePlus",b:"⊕"},{a:"CircleTimes",b:"⊗"},{a:"cir",b:"○"},{a:"cirE",b:"⧃"},{a:"cire",b:"≗"},{a:"cirfnint",b:"⨐"},{a:"cirmid",b:"⫯"},{a:"cirscir",b:"⧂"},{a:"ClockwiseContourIntegral",b:"∲"},{a:"CloseCurlyDoubleQuote",b:"”"},{a:"CloseCurlyQuote",b:"’"},{a:"clubs",b:"♣"},{a:"clubsuit",b:"♣"},{a:"colon",b:":"},{a:"Colon",b:"∷"},{a:"Colone",b:"⩴"},{a:"colone",b:"≔"},{a:"coloneq",b:"≔"},{a:"comma",b:","},{a:"commat",b:"@"},{a:"comp",b:"∁"},{a:"compfn",b:"∘"},{a:"complement",b:"∁"},{a:"complexes",b:"ℂ"},{a:"cong",b:"≅"},{a:"congdot",b:"⩭"},{a:"Congruent",b:"≡"},{a:"conint",b:"∮"},{a:"Conint",b:"∯"},{a:"ContourIntegral",b:"∮"},{a:"copf",b:"𝕔"},{a:"Copf",b:"ℂ"},{a:"coprod",b:"∐"},{a:"Coproduct",b:"∐"},{a:"copy",b:"©"},{a:"COPY",b:"©"},{a:"copysr",b:"℗"},{a:"CounterClockwiseContourIntegral",b:"∳"},{a:"crarr",b:"↵"},{a:"cross",b:"✗"},{a:"Cross",b:"⨯"},{a:"Cscr",b:"𝒞"},{a:"cscr",b:"𝒸"},{a:"csub",b:"⫏"},{a:"csube",b:"⫑"},{a:"csup",b:"⫐"},{a:"csupe",b:"⫒"},{a:"ctdot",b:"⋯"},{a:"cudarrl",b:"⤸"},{a:"cudarrr",b:"⤵"},{a:"cuepr",b:"⋞"},{a:"cuesc",b:"⋟"},{a:"cularr",b:"↶"},{a:"cularrp",b:"⤽"},{a:"cupbrcap",b:"⩈"},{a:"cupcap",b:"⩆"},{a:"CupCap",b:"≍"},{a:"cup",b:"∪"},{a:"Cup",b:"⋓"},{a:"cupcup",b:"⩊"},{a:"cupdot",b:"⊍"},{a:"cupor",b:"⩅"},{a:"cups",b:"∪︀"},{a:"curarr",b:"↷"},{a:"curarrm",b:"⤼"},{a:"curlyeqprec",b:"⋞"},{a:"curlyeqsucc",b:"⋟"},{a:"curlyvee",b:"⋎"},{a:"curlywedge",b:"⋏"},{a:"curren",b:"¤"},{a:"curvearrowleft",b:"↶"},{a:"curvearrowright",b:"↷"},{a:"cuvee",b:"⋎"},{a:"cuwed",b:"⋏"},{a:"cwconint",b:"∲"},{a:"cwint",b:"∱"},{a:"cylcty",b:"⌭"},{a:"dagger",b:"†"},{a:"Dagger",b:"‡"},{a:"daleth",b:"ℸ"},{a:"darr",b:"↓"},{a:"Darr",b:"↡"},{a:"dArr",b:"⇓"},{a:"dash",b:"‐"},{a:"Dashv",b:"⫤"},{a:"dashv",b:"⊣"},{a:"dbkarow",b:"⤏"},{a:"dblac",b:"˝"},{a:"Dcaron",b:"Ď"},{a:"dcaron",b:"ď"},{a:"Dcy",b:"Д"},{a:"dcy",b:"д"},{a:"ddagger",b:"‡"},{a:"ddarr",b:"⇊"},{a:"DD",b:"ⅅ"},{a:"dd",b:"ⅆ"},{a:"DDotrahd",b:"⤑"},{a:"ddotseq",b:"⩷"},{a:"deg",b:"°"},{a:"Del",b:"∇"},{a:"Delta",b:"Δ"},{a:"delta",b:"δ"},{a:"demptyv",b:"⦱"},{a:"dfisht",b:"⥿"},{a:"Dfr",b:"𝔇"},{a:"dfr",b:"𝔡"},{a:"dHar",b:"⥥"},{a:"dharl",b:"⇃"},{a:"dharr",b:"⇂"},{a:"DiacriticalAcute",b:"´"},{a:"DiacriticalDot",b:"˙"},{a:"DiacriticalDoubleAcute",b:"˝"},{a:"DiacriticalGrave",b:"`"},{a:"DiacriticalTilde",b:"˜"},{a:"diam",b:"⋄"},{a:"diamond",b:"⋄"},{a:"Diamond",b:"⋄"},{a:"diamondsuit",b:"♦"},{a:"diams",b:"♦"},{a:"die",b:"¨"},{a:"DifferentialD",b:"ⅆ"},{a:"digamma",b:"ϝ"},{a:"disin",b:"⋲"},{a:"div",b:"÷"},{a:"divide",b:"÷"},{a:"divideontimes",b:"⋇"},{a:"divonx",b:"⋇"},{a:"DJcy",b:"Ђ"},{a:"djcy",b:"ђ"},{a:"dlcorn",b:"⌞"},{a:"dlcrop",b:"⌍"},{a:"dollar",b:"$"},{a:"Dopf",b:"𝔻"},{a:"dopf",b:"𝕕"},{a:"Dot",b:"¨"},{a:"dot",b:"˙"},{a:"DotDot",b:"⃜"},{a:"doteq",b:"≐"},{a:"doteqdot",b:"≑"},{a:"DotEqual",b:"≐"},{a:"dotminus",b:"∸"},{a:"dotplus",b:"∔"},{a:"dotsquare",b:"⊡"},{a:"doublebarwedge",b:"⌆"},{a:"DoubleContourIntegral",b:"∯"},{a:"DoubleDot",b:"¨"},{a:"DoubleDownArrow",b:"⇓"},{a:"DoubleLeftArrow",b:"⇐"},{a:"DoubleLeftRightArrow",b:"⇔"},{a:"DoubleLeftTee",b:"⫤"},{a:"DoubleLongLeftArrow",b:"⟸"},{a:"DoubleLongLeftRightArrow",b:"⟺"},{a:"DoubleLongRightArrow",b:"⟹"},{a:"DoubleRightArrow",b:"⇒"},{a:"DoubleRightTee",b:"⊨"},{a:"DoubleUpArrow",b:"⇑"},{a:"DoubleUpDownArrow",b:"⇕"},{a:"DoubleVerticalBar",b:"∥"},{a:"DownArrowBar",b:"⤓"},{a:"downarrow",b:"↓"},{a:"DownArrow",b:"↓"},{a:"Downarrow",b:"⇓"},{a:"DownArrowUpArrow",b:"⇵"},{a:"DownBreve",b:"̑"},{a:"downdownarrows",b:"⇊"},{a:"downharpoonleft",b:"⇃"},{a:"downharpoonright",b:"⇂"},{a:"DownLeftRightVector",b:"⥐"},{a:"DownLeftTeeVector",b:"⥞"},{a:"DownLeftVectorBar",b:"⥖"},{a:"DownLeftVector",b:"↽"},{a:"DownRightTeeVector",b:"⥟"},{a:"DownRightVectorBar",b:"⥗"},{a:"DownRightVector",b:"⇁"},{a:"DownTeeArrow",b:"↧"},{a:"DownTee",b:"⊤"},{a:"drbkarow",b:"⤐"},{a:"drcorn",b:"⌟"},{a:"drcrop",b:"⌌"},{a:"Dscr",b:"𝒟"},{a:"dscr",b:"𝒹"},{a:"DScy",b:"Ѕ"},{a:"dscy",b:"ѕ"},{a:"dsol",b:"⧶"},{a:"Dstrok",b:"Đ"},{a:"dstrok",b:"đ"},{a:"dtdot",b:"⋱"},{a:"dtri",b:"▿"},{a:"dtrif",b:"▾"},{a:"duarr",b:"⇵"},{a:"duhar",b:"⥯"},{a:"dwangle",b:"⦦"},{a:"DZcy",b:"Џ"},{a:"dzcy",b:"џ"},{a:"dzigrarr",b:"⟿"},{a:"Eacute",b:"É"},{a:"eacute",b:"é"},{a:"easter",b:"⩮"},{a:"Ecaron",b:"Ě"},{a:"ecaron",b:"ě"},{a:"Ecirc",b:"Ê"},{a:"ecirc",b:"ê"},{a:"ecir",b:"≖"},{a:"ecolon",b:"≕"},{a:"Ecy",b:"Э"},{a:"ecy",b:"э"},{a:"eDDot",b:"⩷"},{a:"Edot",b:"Ė"},{a:"edot",b:"ė"},{a:"eDot",b:"≑"},{a:"ee",b:"ⅇ"},{a:"efDot",b:"≒"},{a:"Efr",b:"𝔈"},{a:"efr",b:"𝔢"},{a:"eg",b:"⪚"},{a:"Egrave",b:"È"},{a:"egrave",b:"è"},{a:"egs",b:"⪖"},{a:"egsdot",b:"⪘"},{a:"el",b:"⪙"},{a:"Element",b:"∈"},{a:"elinters",b:"⏧"},{a:"ell",b:"ℓ"},{a:"els",b:"⪕"},{a:"elsdot",b:"⪗"},{a:"Emacr",b:"Ē"},{a:"emacr",b:"ē"},{a:"empty",b:"∅"},{a:"emptyset",b:"∅"},{a:"EmptySmallSquare",b:"◻"},{a:"emptyv",b:"∅"},{a:"EmptyVerySmallSquare",b:"▫"},{a:"emsp13",b:" "},{a:"emsp14",b:" "},{a:"emsp",b:" "},{a:"ENG",b:"Ŋ"},{a:"eng",b:"ŋ"},{a:"ensp",b:" "},{a:"Eogon",b:"Ę"},{a:"eogon",b:"ę"},{a:"Eopf",b:"𝔼"},{a:"eopf",b:"𝕖"},{a:"epar",b:"⋕"},{a:"eparsl",b:"⧣"},{a:"eplus",b:"⩱"},{a:"epsi",b:"ε"},{a:"Epsilon",b:"Ε"},{a:"epsilon",b:"ε"},{a:"epsiv",b:"ϵ"},{a:"eqcirc",b:"≖"},{a:"eqcolon",b:"≕"},{a:"eqsim",b:"≂"},{a:"eqslantgtr",b:"⪖"},{a:"eqslantless",b:"⪕"},{a:"Equal",b:"⩵"},{a:"equals",b:"="},{a:"EqualTilde",b:"≂"},{a:"equest",b:"≟"},{a:"Equilibrium",b:"⇌"},{a:"equiv",b:"≡"},{a:"equivDD",b:"⩸"},{a:"eqvparsl",b:"⧥"},{a:"erarr",b:"⥱"},{a:"erDot",b:"≓"},{a:"escr",b:"ℯ"},{a:"Escr",b:"ℰ"},{a:"esdot",b:"≐"},{a:"Esim",b:"⩳"},{a:"esim",b:"≂"},{a:"Eta",b:"Η"},{a:"eta",b:"η"},{a:"ETH",b:"Ð"},{a:"eth",b:"ð"},{a:"Euml",b:"Ë"},{a:"euml",b:"ë"},{a:"euro",b:"€"},{a:"excl",b:"!"},{a:"exist",b:"∃"},{a:"Exists",b:"∃"},{a:"expectation",b:"ℰ"},{a:"exponentiale",b:"ⅇ"},{a:"ExponentialE",b:"ⅇ"},{a:"fallingdotseq",b:"≒"},{a:"Fcy",b:"Ф"},{a:"fcy",b:"ф"},{a:"female",b:"♀"},{a:"ffilig",b:"ﬃ"},{a:"fflig",b:"ﬀ"},{a:"ffllig",b:"ﬄ"},{a:"Ffr",b:"𝔉"},{a:"ffr",b:"𝔣"},{a:"filig",b:"ﬁ"},{a:"FilledSmallSquare",b:"◼"},{a:"FilledVerySmallSquare",b:"▪"},{a:"fjlig",b:"fj"},{a:"flat",b:"♭"},{a:"fllig",b:"ﬂ"},{a:"fltns",b:"▱"},{a:"fnof",b:"ƒ"},{a:"Fopf",b:"𝔽"},{a:"fopf",b:"𝕗"},{a:"forall",b:"∀"},{a:"ForAll",b:"∀"},{a:"fork",b:"⋔"},{a:"forkv",b:"⫙"},{a:"Fouriertrf",b:"ℱ"},{a:"fpartint",b:"⨍"},{a:"frac12",b:"½"},{a:"frac13",b:"⅓"},{a:"frac14",b:"¼"},{a:"frac15",b:"⅕"},{a:"frac16",b:"⅙"},{a:"frac18",b:"⅛"},{a:"frac23",b:"⅔"},{a:"frac25",b:"⅖"},{a:"frac34",b:"¾"},{a:"frac35",b:"⅗"},{a:"frac38",b:"⅜"},{a:"frac45",b:"⅘"},{a:"frac56",b:"⅚"},{a:"frac58",b:"⅝"},{a:"frac78",b:"⅞"},{a:"frasl",b:"⁄"},{a:"frown",b:"⌢"},{a:"fscr",b:"𝒻"},{a:"Fscr",b:"ℱ"},{a:"gacute",b:"ǵ"},{a:"Gamma",b:"Γ"},{a:"gamma",b:"γ"},{a:"Gammad",b:"Ϝ"},{a:"gammad",b:"ϝ"},{a:"gap",b:"⪆"},{a:"Gbreve",b:"Ğ"},{a:"gbreve",b:"ğ"},{a:"Gcedil",b:"Ģ"},{a:"Gcirc",b:"Ĝ"},{a:"gcirc",b:"ĝ"},{a:"Gcy",b:"Г"},{a:"gcy",b:"г"},{a:"Gdot",b:"Ġ"},{a:"gdot",b:"ġ"},{a:"ge",b:"≥"},{a:"gE",b:"≧"},{a:"gEl",b:"⪌"},{a:"gel",b:"⋛"},{a:"geq",b:"≥"},{a:"geqq",b:"≧"},{a:"geqslant",b:"⩾"},{a:"gescc",b:"⪩"},{a:"ges",b:"⩾"},{a:"gesdot",b:"⪀"},{a:"gesdoto",b:"⪂"},{a:"gesdotol",b:"⪄"},{a:"gesl",b:"⋛︀"},{a:"gesles",b:"⪔"},{a:"Gfr",b:"𝔊"},{a:"gfr",b:"𝔤"},{a:"gg",b:"≫"},{a:"Gg",b:"⋙"},{a:"ggg",b:"⋙"},{a:"gimel",b:"ℷ"},{a:"GJcy",b:"Ѓ"},{a:"gjcy",b:"ѓ"},{a:"gla",b:"⪥"},{a:"gl",b:"≷"},{a:"glE",b:"⪒"},{a:"glj",b:"⪤"},{a:"gnap",b:"⪊"},{a:"gnapprox",b:"⪊"},{a:"gne",b:"⪈"},{a:"gnE",b:"≩"},{a:"gneq",b:"⪈"},{a:"gneqq",b:"≩"},{a:"gnsim",b:"⋧"},{a:"Gopf",b:"𝔾"},{a:"gopf",b:"𝕘"},{a:"grave",b:"`"},{a:"GreaterEqual",b:"≥"},{a:"GreaterEqualLess",b:"⋛"},{a:"GreaterFullEqual",b:"≧"},{a:"GreaterGreater",b:"⪢"},{a:"GreaterLess",b:"≷"},{a:"GreaterSlantEqual",b:"⩾"},{a:"GreaterTilde",b:"≳"},{a:"Gscr",b:"𝒢"},{a:"gscr",b:"ℊ"},{a:"gsim",b:"≳"},{a:"gsime",b:"⪎"},{a:"gsiml",b:"⪐"},{a:"gtcc",b:"⪧"},{a:"gtcir",b:"⩺"},{a:"gt",b:">"},{a:"GT",b:">"},{a:"Gt",b:"≫"},{a:"gtdot",b:"⋗"},{a:"gtlPar",b:"⦕"},{a:"gtquest",b:"⩼"},{a:"gtrapprox",b:"⪆"},{a:"gtrarr",b:"⥸"},{a:"gtrdot",b:"⋗"},{a:"gtreqless",b:"⋛"},{a:"gtreqqless",b:"⪌"},{a:"gtrless",b:"≷"},{a:"gtrsim",b:"≳"},{a:"gvertneqq",b:"≩︀"},{a:"gvnE",b:"≩︀"},{a:"Hacek",b:"ˇ"},{a:"hairsp",b:" "},{a:"half",b:"½"},{a:"hamilt",b:"ℋ"},{a:"HARDcy",b:"Ъ"},{a:"hardcy",b:"ъ"},{a:"harrcir",b:"⥈"},{a:"harr",b:"↔"},{a:"hArr",b:"⇔"},{a:"harrw",b:"↭"},{a:"Hat",b:"^"},{a:"hbar",b:"ℏ"},{a:"Hcirc",b:"Ĥ"},{a:"hcirc",b:"ĥ"},{a:"hearts",b:"♥"},{a:"heartsuit",b:"♥"},{a:"hellip",b:"…"},{a:"hercon",b:"⊹"},{a:"hfr",b:"𝔥"},{a:"Hfr",b:"ℌ"},{a:"HilbertSpace",b:"ℋ"},{a:"hksearow",b:"⤥"},{a:"hkswarow",b:"⤦"},{a:"hoarr",b:"⇿"},{a:"homtht",b:"∻"},{a:"hookleftarrow",b:"↩"},{a:"hookrightarrow",b:"↪"},{a:"hopf",b:"𝕙"},{a:"Hopf",b:"ℍ"},{a:"horbar",b:"―"},{a:"HorizontalLine",b:"─"},{a:"hscr",b:"𝒽"},{a:"Hscr",b:"ℋ"},{a:"hslash",b:"ℏ"},{a:"Hstrok",b:"Ħ"},{a:"hstrok",b:"ħ"},{a:"HumpDownHump",b:"≎"},{a:"HumpEqual",b:"≏"},{a:"hybull",b:"⁃"},{a:"hyphen",b:"‐"},{a:"Iacute",b:"Í"},{a:"iacute",b:"í"},{a:"ic",b:"⁣"},{a:"Icirc",b:"Î"},{a:"icirc",b:"î"},{a:"Icy",b:"И"},{a:"icy",b:"и"},{a:"Idot",b:"İ"},{a:"IEcy",b:"Е"},{a:"iecy",b:"е"},{a:"iexcl",b:"¡"},{a:"iff",b:"⇔"},{a:"ifr",b:"𝔦"},{a:"Ifr",b:"ℑ"},{a:"Igrave",b:"Ì"},{a:"igrave",b:"ì"},{a:"ii",b:"ⅈ"},{a:"iiiint",b:"⨌"},{a:"iiint",b:"∭"},{a:"iinfin",b:"⧜"},{a:"iiota",b:"℩"},{a:"IJlig",b:"Ĳ"},{a:"ijlig",b:"ĳ"},{a:"Imacr",b:"Ī"},{a:"imacr",b:"ī"},{a:"image",b:"ℑ"},{a:"ImaginaryI",b:"ⅈ"},{a:"imagline",b:"ℐ"},{a:"imagpart",b:"ℑ"},{a:"imath",b:"ı"},{a:"Im",b:"ℑ"},{a:"imof",b:"⊷"},{a:"imped",b:"Ƶ"},{a:"Implies",b:"⇒"},{a:"incare",b:"℅"},{a:"in",b:"∈"},{a:"infin",b:"∞"},{a:"infintie",b:"⧝"},{a:"inodot",b:"ı"},{a:"intcal",b:"⊺"},{a:"int",b:"∫"},{a:"Int",b:"∬"},{a:"integers",b:"ℤ"},{a:"Integral",b:"∫"},{a:"intercal",b:"⊺"},{a:"Intersection",b:"⋂"},{a:"intlarhk",b:"⨗"},{a:"intprod",b:"⨼"},{a:"InvisibleComma",b:"⁣"},{a:"InvisibleTimes",b:"⁢"},{a:"IOcy",b:"Ё"},{a:"iocy",b:"ё"},{a:"Iogon",b:"Į"},{a:"iogon",b:"į"},{a:"Iopf",b:"𝕀"},{a:"iopf",b:"𝕚"},{a:"Iota",b:"Ι"},{a:"iota",b:"ι"},{a:"iprod",b:"⨼"},{a:"iquest",b:"¿"},{a:"iscr",b:"𝒾"},{a:"Iscr",b:"ℐ"},{a:"isin",b:"∈"},{a:"isindot",b:"⋵"},{a:"isinE",b:"⋹"},{a:"isins",b:"⋴"},{a:"isinsv",b:"⋳"},{a:"isinv",b:"∈"},{a:"it",b:"⁢"},{a:"Itilde",b:"Ĩ"},{a:"itilde",b:"ĩ"},{a:"Iukcy",b:"І"},{a:"iukcy",b:"і"},{a:"Iuml",b:"Ï"},{a:"iuml",b:"ï"},{a:"Jcirc",b:"Ĵ"},{a:"jcirc",b:"ĵ"},{a:"Jcy",b:"Й"},{a:"jcy",b:"й"},{a:"Jfr",b:"𝔍"},{a:"jfr",b:"𝔧"},{a:"jmath",b:"ȷ"},{a:"Jopf",b:"𝕁"},{a:"jopf",b:"𝕛"},{a:"Jscr",b:"𝒥"},{a:"jscr",b:"𝒿"},{a:"Jsercy",b:"Ј"},{a:"jsercy",b:"ј"},{a:"Jukcy",b:"Є"},{a:"jukcy",b:"є"},{a:"Kappa",b:"Κ"},{a:"kappa",b:"κ"},{a:"kappav",b:"ϰ"},{a:"Kcedil",b:"Ķ"},{a:"kcedil",b:"ķ"},{a:"Kcy",b:"К"},{a:"kcy",b:"к"},{a:"Kfr",b:"𝔎"},{a:"kfr",b:"𝔨"},{a:"kgreen",b:"ĸ"},{a:"KHcy",b:"Х"},{a:"khcy",b:"х"},{a:"KJcy",b:"Ќ"},{a:"kjcy",b:"ќ"},{a:"Kopf",b:"𝕂"},{a:"kopf",b:"𝕜"},{a:"Kscr",b:"𝒦"},{a:"kscr",b:"𝓀"},{a:"lAarr",b:"⇚"},{a:"Lacute",b:"Ĺ"},{a:"lacute",b:"ĺ"},{a:"laemptyv",b:"⦴"},{a:"lagran",b:"ℒ"},{a:"Lambda",b:"Λ"},{a:"lambda",b:"λ"},{a:"lang",b:"⟨"},{a:"Lang",b:"⟪"},{a:"langd",b:"⦑"},{a:"langle",b:"⟨"},{a:"lap",b:"⪅"},{a:"Laplacetrf",b:"ℒ"},{a:"laquo",b:"«"},{a:"larrb",b:"⇤"},{a:"larrbfs",b:"⤟"},{a:"larr",b:"←"},{a:"Larr",b:"↞"},{a:"lArr",b:"⇐"},{a:"larrfs",b:"⤝"},{a:"larrhk",b:"↩"},{a:"larrlp",b:"↫"},{a:"larrpl",b:"⤹"},{a:"larrsim",b:"⥳"},{a:"larrtl",b:"↢"},{a:"latail",b:"⤙"},{a:"lAtail",b:"⤛"},{a:"lat",b:"⪫"},{a:"late",b:"⪭"},{a:"lates",b:"⪭︀"},{a:"lbarr",b:"⤌"},{a:"lBarr",b:"⤎"},{a:"lbbrk",b:"❲"},{a:"lbrace",b:"{"},{a:"lbrack",b:"["},{a:"lbrke",b:"⦋"},{a:"lbrksld",b:"⦏"},{a:"lbrkslu",b:"⦍"},{a:"Lcaron",b:"Ľ"},{a:"lcaron",b:"ľ"},{a:"Lcedil",b:"Ļ"},{a:"lcedil",b:"ļ"},{a:"lceil",b:"⌈"},{a:"lcub",b:"{"},{a:"Lcy",b:"Л"},{a:"lcy",b:"л"},{a:"ldca",b:"⤶"},{a:"ldquo",b:"“"},{a:"ldquor",b:"„"},{a:"ldrdhar",b:"⥧"},{a:"ldrushar",b:"⥋"},{a:"ldsh",b:"↲"},{a:"le",b:"≤"},{a:"lE",b:"≦"},{a:"LeftAngleBracket",b:"⟨"},{a:"LeftArrowBar",b:"⇤"},{a:"leftarrow",b:"←"},{a:"LeftArrow",b:"←"},{a:"Leftarrow",b:"⇐"},{a:"LeftArrowRightArrow",b:"⇆"},{a:"leftarrowtail",b:"↢"},{a:"LeftCeiling",b:"⌈"},{a:"LeftDoubleBracket",b:"⟦"},{a:"LeftDownTeeVector",b:"⥡"},{a:"LeftDownVectorBar",b:"⥙"},{a:"LeftDownVector",b:"⇃"},{a:"LeftFloor",b:"⌊"},{a:"leftharpoondown",b:"↽"},{a:"leftharpoonup",b:"↼"},{a:"leftleftarrows",b:"⇇"},{a:"leftrightarrow",b:"↔"},{a:"LeftRightArrow",b:"↔"},{a:"Leftrightarrow",b:"⇔"},{a:"leftrightarrows",b:"⇆"},{a:"leftrightharpoons",b:"⇋"},{a:"leftrightsquigarrow",b:"↭"},{a:"LeftRightVector",b:"⥎"},{a:"LeftTeeArrow",b:"↤"},{a:"LeftTee",b:"⊣"},{a:"LeftTeeVector",b:"⥚"},{a:"leftthreetimes",b:"⋋"},{a:"LeftTriangleBar",b:"⧏"},{a:"LeftTriangle",b:"⊲"},{a:"LeftTriangleEqual",b:"⊴"},{a:"LeftUpDownVector",b:"⥑"},{a:"LeftUpTeeVector",b:"⥠"},{a:"LeftUpVectorBar",b:"⥘"},{a:"LeftUpVector",b:"↿"},{a:"LeftVectorBar",b:"⥒"},{a:"LeftVector",b:"↼"},{a:"lEg",b:"⪋"},{a:"leg",b:"⋚"},{a:"leq",b:"≤"},{a:"leqq",b:"≦"},{a:"leqslant",b:"⩽"},{a:"lescc",b:"⪨"},{a:"les",b:"⩽"},{a:"lesdot",b:"⩿"},{a:"lesdoto",b:"⪁"},{a:"lesdotor",b:"⪃"},{a:"lesg",b:"⋚︀"},{a:"lesges",b:"⪓"},{a:"lessapprox",b:"⪅"},{a:"lessdot",b:"⋖"},{a:"lesseqgtr",b:"⋚"},{a:"lesseqqgtr",b:"⪋"},{a:"LessEqualGreater",b:"⋚"},{a:"LessFullEqual",b:"≦"},{a:"LessGreater",b:"≶"},{a:"lessgtr",b:"≶"},{a:"LessLess",b:"⪡"},{a:"lesssim",b:"≲"},{a:"LessSlantEqual",b:"⩽"},{a:"LessTilde",b:"≲"},{a:"lfisht",b:"⥼"},{a:"lfloor",b:"⌊"},{a:"Lfr",b:"𝔏"},{a:"lfr",b:"𝔩"},{a:"lg",b:"≶"},{a:"lgE",b:"⪑"},{a:"lHar",b:"⥢"},{a:"lhard",b:"↽"},{a:"lharu",b:"↼"},{a:"lharul",b:"⥪"},{a:"lhblk",b:"▄"},{a:"LJcy",b:"Љ"},{a:"ljcy",b:"љ"},{a:"llarr",b:"⇇"},{a:"ll",b:"≪"},{a:"Ll",b:"⋘"},{a:"llcorner",b:"⌞"},{a:"Lleftarrow",b:"⇚"},{a:"llhard",b:"⥫"},{a:"lltri",b:"◺"},{a:"Lmidot",b:"Ŀ"},{a:"lmidot",b:"ŀ"},{a:"lmoustache",b:"⎰"},{a:"lmoust",b:"⎰"},{a:"lnap",b:"⪉"},{a:"lnapprox",b:"⪉"},{a:"lne",b:"⪇"},{a:"lnE",b:"≨"},{a:"lneq",b:"⪇"},{a:"lneqq",b:"≨"},{a:"lnsim",b:"⋦"},{a:"loang",b:"⟬"},{a:"loarr",b:"⇽"},{a:"lobrk",b:"⟦"},{a:"longleftarrow",b:"⟵"},{a:"LongLeftArrow",b:"⟵"},{a:"Longleftarrow",b:"⟸"},{a:"longleftrightarrow",b:"⟷"},{a:"LongLeftRightArrow",b:"⟷"},{a:"Longleftrightarrow",b:"⟺"},{a:"longmapsto",b:"⟼"},{a:"longrightarrow",b:"⟶"},{a:"LongRightArrow",b:"⟶"},{a:"Longrightarrow",b:"⟹"},{a:"looparrowleft",b:"↫"},{a:"looparrowright",b:"↬"},{a:"lopar",b:"⦅"},{a:"Lopf",b:"𝕃"},{a:"lopf",b:"𝕝"},{a:"loplus",b:"⨭"},{a:"lotimes",b:"⨴"},{a:"lowast",b:"∗"},{a:"lowbar",b:"_"},{a:"LowerLeftArrow",b:"↙"},{a:"LowerRightArrow",b:"↘"},{a:"loz",b:"◊"},{a:"lozenge",b:"◊"},{a:"lozf",b:"⧫"},{a:"lpar",b:"("},{a:"lparlt",b:"⦓"},{a:"lrarr",b:"⇆"},{a:"lrcorner",b:"⌟"},{a:"lrhar",b:"⇋"},{a:"lrhard",b:"⥭"},{a:"lrm",b:"‎"},{a:"lrtri",b:"⊿"},{a:"lsaquo",b:"‹"},{a:"lscr",b:"𝓁"},{a:"Lscr",b:"ℒ"},{a:"lsh",b:"↰"},{a:"Lsh",b:"↰"},{a:"lsim",b:"≲"},{a:"lsime",b:"⪍"},{a:"lsimg",b:"⪏"},{a:"lsqb",b:"["},{a:"lsquo",b:"‘"},{a:"lsquor",b:"‚"},{a:"Lstrok",b:"Ł"},{a:"lstrok",b:"ł"},{a:"ltcc",b:"⪦"},{a:"ltcir",b:"⩹"},{a:"lt",b:"<"},{a:"LT",b:"<"},{a:"Lt",b:"≪"},{a:"ltdot",b:"⋖"},{a:"lthree",b:"⋋"},{a:"ltimes",b:"⋉"},{a:"ltlarr",b:"⥶"},{a:"ltquest",b:"⩻"},{a:"ltri",b:"◃"},{a:"ltrie",b:"⊴"},{a:"ltrif",b:"◂"},{a:"ltrPar",b:"⦖"},{a:"lurdshar",b:"⥊"},{a:"luruhar",b:"⥦"},{a:"lvertneqq",b:"≨︀"},{a:"lvnE",b:"≨︀"},{a:"macr",b:"¯"},{a:"male",b:"♂"},{a:"malt",b:"✠"},{a:"maltese",b:"✠"},{a:"Map",b:"⤅"},{a:"map",b:"↦"},{a:"mapsto",b:"↦"},{a:"mapstodown",b:"↧"},{a:"mapstoleft",b:"↤"},{a:"mapstoup",b:"↥"},{a:"marker",b:"▮"},{a:"mcomma",b:"⨩"},{a:"Mcy",b:"М"},{a:"mcy",b:"м"},{a:"mdash",b:"—"},{a:"mDDot",b:"∺"},{a:"measuredangle",b:"∡"},{a:"MediumSpace",b:" "},{a:"Mellintrf",b:"ℳ"},{a:"Mfr",b:"𝔐"},{a:"mfr",b:"𝔪"},{a:"mho",b:"℧"},{a:"micro",b:"µ"},{a:"midast",b:"*"},{a:"midcir",b:"⫰"},{a:"mid",b:"∣"},{a:"middot",b:"·"},{a:"minusb",b:"⊟"},{a:"minus",b:"−"},{a:"minusd",b:"∸"},{a:"minusdu",b:"⨪"},{a:"MinusPlus",b:"∓"},{a:"mlcp",b:"⫛"},{a:"mldr",b:"…"},{a:"mnplus",b:"∓"},{a:"models",b:"⊧"},{a:"Mopf",b:"𝕄"},{a:"mopf",b:"𝕞"},{a:"mp",b:"∓"},{a:"mscr",b:"𝓂"},{a:"Mscr",b:"ℳ"},{a:"mstpos",b:"∾"},{a:"Mu",b:"Μ"},{a:"mu",b:"μ"},{a:"multimap",b:"⊸"},{a:"mumap",b:"⊸"},{a:"nabla",b:"∇"},{a:"Nacute",b:"Ń"},{a:"nacute",b:"ń"},{a:"nang",b:"∠⃒"},{a:"nap",b:"≉"},{a:"napE",b:"⩰̸"},{a:"napid",b:"≋̸"},{a:"napos",b:"ŉ"},{a:"napprox",b:"≉"},{a:"natural",b:"♮"},{a:"naturals",b:"ℕ"},{a:"natur",b:"♮"},{a:"nbsp",b:" "},{a:"nbump",b:"≎̸"},{a:"nbumpe",b:"≏̸"},{a:"ncap",b:"⩃"},{a:"Ncaron",b:"Ň"},{a:"ncaron",b:"ň"},{a:"Ncedil",b:"Ņ"},{a:"ncedil",b:"ņ"},{a:"ncong",b:"≇"},{a:"ncongdot",b:"⩭̸"},{a:"ncup",b:"⩂"},{a:"Ncy",b:"Н"},{a:"ncy",b:"н"},{a:"ndash",b:"–"},{a:"nearhk",b:"⤤"},{a:"nearr",b:"↗"},{a:"neArr",b:"⇗"},{a:"nearrow",b:"↗"},{a:"ne",b:"≠"},{a:"nedot",b:"≐̸"},{a:"NegativeMediumSpace",b:"​"},{a:"NegativeThickSpace",b:"​"},{a:"NegativeThinSpace",b:"​"},{a:"NegativeVeryThinSpace",b:"​"},{a:"nequiv",b:"≢"},{a:"nesear",b:"⤨"},{a:"nesim",b:"≂̸"},{a:"NestedGreaterGreater",b:"≫"},{a:"NestedLessLess",b:"≪"},{a:"NewLine",b:"\n"},{a:"nexist",b:"∄"},{a:"nexists",b:"∄"},{a:"Nfr",b:"𝔑"},{a:"nfr",b:"𝔫"},{a:"ngE",b:"≧̸"},{a:"nge",b:"≱"},{a:"ngeq",b:"≱"},{a:"ngeqq",b:"≧̸"},{a:"ngeqslant",b:"⩾̸"},{a:"nges",b:"⩾̸"},{a:"nGg",b:"⋙̸"},{a:"ngsim",b:"≵"},{a:"nGt",b:"≫⃒"},{a:"ngt",b:"≯"},{a:"ngtr",b:"≯"},{a:"nGtv",b:"≫̸"},{a:"nharr",b:"↮"},{a:"nhArr",b:"⇎"},{a:"nhpar",b:"⫲"},{a:"ni",b:"∋"},{a:"nis",b:"⋼"},{a:"nisd",b:"⋺"},{a:"niv",b:"∋"},{a:"NJcy",b:"Њ"},{a:"njcy",b:"њ"},{a:"nlarr",b:"↚"},{a:"nlArr",b:"⇍"},{a:"nldr",b:"‥"},{a:"nlE",b:"≦̸"},{a:"nle",b:"≰"},{a:"nleftarrow",b:"↚"},{a:"nLeftarrow",b:"⇍"},{a:"nleftrightarrow",b:"↮"},{a:"nLeftrightarrow",b:"⇎"},{a:"nleq",b:"≰"},{a:"nleqq",b:"≦̸"},{a:"nleqslant",b:"⩽̸"},{a:"nles",b:"⩽̸"},{a:"nless",b:"≮"},{a:"nLl",b:"⋘̸"},{a:"nlsim",b:"≴"},{a:"nLt",b:"≪⃒"},{a:"nlt",b:"≮"},{a:"nltri",b:"⋪"},{a:"nltrie",b:"⋬"},{a:"nLtv",b:"≪̸"},{a:"nmid",b:"∤"},{a:"NoBreak",b:"⁠"},{a:"NonBreakingSpace",b:" "},{a:"nopf",b:"𝕟"},{a:"Nopf",b:"ℕ"},{a:"Not",b:"⫬"},{a:"not",b:"¬"},{a:"NotCongruent",b:"≢"},{a:"NotCupCap",b:"≭"},{a:"NotDoubleVerticalBar",b:"∦"},{a:"NotElement",b:"∉"},{a:"NotEqual",b:"≠"},{a:"NotEqualTilde",b:"≂̸"},{a:"NotExists",b:"∄"},{a:"NotGreater",b:"≯"},{a:"NotGreaterEqual",b:"≱"},{a:"NotGreaterFullEqual",b:"≧̸"},{a:"NotGreaterGreater",b:"≫̸"},{a:"NotGreaterLess",b:"≹"},{a:"NotGreaterSlantEqual",b:"⩾̸"},{a:"NotGreaterTilde",b:"≵"},{a:"NotHumpDownHump",b:"≎̸"},{a:"NotHumpEqual",b:"≏̸"},{a:"notin",b:"∉"},{a:"notindot",b:"⋵̸"},{a:"notinE",b:"⋹̸"},{a:"notinva",b:"∉"},{a:"notinvb",b:"⋷"},{a:"notinvc",b:"⋶"},{a:"NotLeftTriangleBar",b:"⧏̸"},{a:"NotLeftTriangle",b:"⋪"},{a:"NotLeftTriangleEqual",b:"⋬"},{a:"NotLess",b:"≮"},{a:"NotLessEqual",b:"≰"},{a:"NotLessGreater",b:"≸"},{a:"NotLessLess",b:"≪̸"},{a:"NotLessSlantEqual",b:"⩽̸"},{a:"NotLessTilde",b:"≴"},{a:"NotNestedGreaterGreater",b:"⪢̸"},{a:"NotNestedLessLess",b:"⪡̸"},{a:"notni",b:"∌"},{a:"notniva",b:"∌"},{a:"notnivb",b:"⋾"},{a:"notnivc",b:"⋽"},{a:"NotPrecedes",b:"⊀"},{a:"NotPrecedesEqual",b:"⪯̸"},{a:"NotPrecedesSlantEqual",b:"⋠"},{a:"NotReverseElement",b:"∌"},{a:"NotRightTriangleBar",b:"⧐̸"},{a:"NotRightTriangle",b:"⋫"},{a:"NotRightTriangleEqual",b:"⋭"},{a:"NotSquareSubset",b:"⊏̸"},{a:"NotSquareSubsetEqual",b:"⋢"},{a:"NotSquareSuperset",b:"⊐̸"},{a:"NotSquareSupersetEqual",b:"⋣"},{a:"NotSubset",b:"⊂⃒"},{a:"NotSubsetEqual",b:"⊈"},{a:"NotSucceeds",b:"⊁"},{a:"NotSucceedsEqual",b:"⪰̸"},{a:"NotSucceedsSlantEqual",b:"⋡"},{a:"NotSucceedsTilde",b:"≿̸"},{a:"NotSuperset",b:"⊃⃒"},{a:"NotSupersetEqual",b:"⊉"},{a:"NotTilde",b:"≁"},{a:"NotTildeEqual",b:"≄"},{a:"NotTildeFullEqual",b:"≇"},{a:"NotTildeTilde",b:"≉"},{a:"NotVerticalBar",b:"∤"},{a:"nparallel",b:"∦"},{a:"npar",b:"∦"},{a:"nparsl",b:"⫽⃥"},{a:"npart",b:"∂̸"},{a:"npolint",b:"⨔"},{a:"npr",b:"⊀"},{a:"nprcue",b:"⋠"},{a:"nprec",b:"⊀"},{a:"npreceq",b:"⪯̸"},{a:"npre",b:"⪯̸"},{a:"nrarrc",b:"⤳̸"},{a:"nrarr",b:"↛"},{a:"nrArr",b:"⇏"},{a:"nrarrw",b:"↝̸"},{a:"nrightarrow",b:"↛"},{a:"nRightarrow",b:"⇏"},{a:"nrtri",b:"⋫"},{a:"nrtrie",b:"⋭"},{a:"nsc",b:"⊁"},{a:"nsccue",b:"⋡"},{a:"nsce",b:"⪰̸"},{a:"Nscr",b:"𝒩"},{a:"nscr",b:"𝓃"},{a:"nshortmid",b:"∤"},{a:"nshortparallel",b:"∦"},{a:"nsim",b:"≁"},{a:"nsime",b:"≄"},{a:"nsimeq",b:"≄"},{a:"nsmid",b:"∤"},{a:"nspar",b:"∦"},{a:"nsqsube",b:"⋢"},{a:"nsqsupe",b:"⋣"},{a:"nsub",b:"⊄"},{a:"nsubE",b:"⫅̸"},{a:"nsube",b:"⊈"},{a:"nsubset",b:"⊂⃒"},{a:"nsubseteq",b:"⊈"},{a:"nsubseteqq",b:"⫅̸"},{a:"nsucc",b:"⊁"},{a:"nsucceq",b:"⪰̸"},{a:"nsup",b:"⊅"},{a:"nsupE",b:"⫆̸"},{a:"nsupe",b:"⊉"},{a:"nsupset",b:"⊃⃒"},{a:"nsupseteq",b:"⊉"},{a:"nsupseteqq",b:"⫆̸"},{a:"ntgl",b:"≹"},{a:"Ntilde",b:"Ñ"},{a:"ntilde",b:"ñ"},{a:"ntlg",b:"≸"},{a:"ntriangleleft",b:"⋪"},{a:"ntrianglelefteq",b:"⋬"},{a:"ntriangleright",b:"⋫"},{a:"ntrianglerighteq",b:"⋭"},{a:"Nu",b:"Ν"},{a:"nu",b:"ν"},{a:"num",b:"#"},{a:"numero",b:"№"},{a:"numsp",b:" "},{a:"nvap",b:"≍⃒"},{a:"nvdash",b:"⊬"},{a:"nvDash",b:"⊭"},{a:"nVdash",b:"⊮"},{a:"nVDash",b:"⊯"},{a:"nvge",b:"≥⃒"},{a:"nvgt",b:">⃒"},{a:"nvHarr",b:"⤄"},{a:"nvinfin",b:"⧞"},{a:"nvlArr",b:"⤂"},{a:"nvle",b:"≤⃒"},{a:"nvlt",b:"<⃒"},{a:"nvltrie",b:"⊴⃒"},{a:"nvrArr",b:"⤃"},{a:"nvrtrie",b:"⊵⃒"},{a:"nvsim",b:"∼⃒"},{a:"nwarhk",b:"⤣"},{a:"nwarr",b:"↖"},{a:"nwArr",b:"⇖"},{a:"nwarrow",b:"↖"},{a:"nwnear",b:"⤧"},{a:"Oacute",b:"Ó"},{a:"oacute",b:"ó"},{a:"oast",b:"⊛"},{a:"Ocirc",b:"Ô"},{a:"ocirc",b:"ô"},{a:"ocir",b:"⊚"},{a:"Ocy",b:"О"},{a:"ocy",b:"о"},{a:"odash",b:"⊝"},{a:"Odblac",b:"Ő"},{a:"odblac",b:"ő"},{a:"odiv",b:"⨸"},{a:"odot",b:"⊙"},{a:"odsold",b:"⦼"},{a:"OElig",b:"Œ"},{a:"oelig",b:"œ"},{a:"ofcir",b:"⦿"},{a:"Ofr",b:"𝔒"},{a:"ofr",b:"𝔬"},{a:"ogon",b:"˛"},{a:"Ograve",b:"Ò"},{a:"ograve",b:"ò"},{a:"ogt",b:"⧁"},{a:"ohbar",b:"⦵"},{a:"ohm",b:"Ω"},{a:"oint",b:"∮"},{a:"olarr",b:"↺"},{a:"olcir",b:"⦾"},{a:"olcross",b:"⦻"},{a:"oline",b:"‾"},{a:"olt",b:"⧀"},{a:"Omacr",b:"Ō"},{a:"omacr",b:"ō"},{a:"Omega",b:"Ω"},{a:"omega",b:"ω"},{a:"Omicron",b:"Ο"},{a:"omicron",b:"ο"},{a:"omid",b:"⦶"},{a:"ominus",b:"⊖"},{a:"Oopf",b:"𝕆"},{a:"oopf",b:"𝕠"},{a:"opar",b:"⦷"},{a:"OpenCurlyDoubleQuote",b:"“"},{a:"OpenCurlyQuote",b:"‘"},{a:"operp",b:"⦹"},{a:"oplus",b:"⊕"},{a:"orarr",b:"↻"},{a:"Or",b:"⩔"},{a:"or",b:"∨"},{a:"ord",b:"⩝"},{a:"order",b:"ℴ"},{a:"orderof",b:"ℴ"},{a:"ordf",b:"ª"},{a:"ordm",b:"º"},{a:"origof",b:"⊶"},{a:"oror",b:"⩖"},{a:"orslope",b:"⩗"},{a:"orv",b:"⩛"},{a:"oS",b:"Ⓢ"},{a:"Oscr",b:"𝒪"},{a:"oscr",b:"ℴ"},{a:"Oslash",b:"Ø"},{a:"oslash",b:"ø"},{a:"osol",b:"⊘"},{a:"Otilde",b:"Õ"},{a:"otilde",b:"õ"},{a:"otimesas",b:"⨶"},{a:"Otimes",b:"⨷"},{a:"otimes",b:"⊗"},{a:"Ouml",b:"Ö"},{a:"ouml",b:"ö"},{a:"ovbar",b:"⌽"},{a:"OverBar",b:"‾"},{a:"OverBrace",b:"⏞"},{a:"OverBracket",b:"⎴"},{a:"OverParenthesis",b:"⏜"},{a:"para",b:"¶"},{a:"parallel",b:"∥"},{a:"par",b:"∥"},{a:"parsim",b:"⫳"},{a:"parsl",b:"⫽"},{a:"part",b:"∂"},{a:"PartialD",b:"∂"},{a:"Pcy",b:"П"},{a:"pcy",b:"п"},{a:"percnt",b:"%"},{a:"period",b:"."},{a:"permil",b:"‰"},{a:"perp",b:"⊥"},{a:"pertenk",b:"‱"},{a:"Pfr",b:"𝔓"},{a:"pfr",b:"𝔭"},{a:"Phi",b:"Φ"},{a:"phi",b:"φ"},{a:"phiv",b:"ϕ"},{a:"phmmat",b:"ℳ"},{a:"phone",b:"☎"},{a:"Pi",b:"Π"},{a:"pi",b:"π"},{a:"pitchfork",b:"⋔"},{a:"piv",b:"ϖ"},{a:"planck",b:"ℏ"},{a:"planckh",b:"ℎ"},{a:"plankv",b:"ℏ"},{a:"plusacir",b:"⨣"},{a:"plusb",b:"⊞"},{a:"pluscir",b:"⨢"},{a:"plus",b:"+"},{a:"plusdo",b:"∔"},{a:"plusdu",b:"⨥"},{a:"pluse",b:"⩲"},{a:"PlusMinus",b:"±"},{a:"plusmn",b:"±"},{a:"plussim",b:"⨦"},{a:"plustwo",b:"⨧"},{a:"pm",b:"±"},{a:"Poincareplane",b:"ℌ"},{a:"pointint",b:"⨕"},{a:"popf",b:"𝕡"},{a:"Popf",b:"ℙ"},{a:"pound",b:"£"},{a:"prap",b:"⪷"},{a:"Pr",b:"⪻"},{a:"pr",b:"≺"},{a:"prcue",b:"≼"},{a:"precapprox",b:"⪷"},{a:"prec",b:"≺"},{a:"preccurlyeq",b:"≼"},{a:"Precedes",b:"≺"},{a:"PrecedesEqual",b:"⪯"},{a:"PrecedesSlantEqual",b:"≼"},{a:"PrecedesTilde",b:"≾"},{a:"preceq",b:"⪯"},{a:"precnapprox",b:"⪹"},{a:"precneqq",b:"⪵"},{a:"precnsim",b:"⋨"},{a:"pre",b:"⪯"},{a:"prE",b:"⪳"},{a:"precsim",b:"≾"},{a:"prime",b:"′"},{a:"Prime",b:"″"},{a:"primes",b:"ℙ"},{a:"prnap",b:"⪹"},{a:"prnE",b:"⪵"},{a:"prnsim",b:"⋨"},{a:"prod",b:"∏"},{a:"Product",b:"∏"},{a:"profalar",b:"⌮"},{a:"profline",b:"⌒"},{a:"profsurf",b:"⌓"},{a:"prop",b:"∝"},{a:"Proportional",b:"∝"},{a:"Proportion",b:"∷"},{a:"propto",b:"∝"},{a:"prsim",b:"≾"},{a:"prurel",b:"⊰"},{a:"Pscr",b:"𝒫"},{a:"pscr",b:"𝓅"},{a:"Psi",b:"Ψ"},{a:"psi",b:"ψ"},{a:"puncsp",b:" "},{a:"Qfr",b:"𝔔"},{a:"qfr",b:"𝔮"},{a:"qint",b:"⨌"},{a:"qopf",b:"𝕢"},{a:"Qopf",b:"ℚ"},{a:"qprime",b:"⁗"},{a:"Qscr",b:"𝒬"},{a:"qscr",b:"𝓆"},{a:"quaternions",b:"ℍ"},{a:"quatint",b:"⨖"},{a:"quest",b:"?"},{a:"questeq",b:"≟"},{a:"quot",b:'"'},{a:"QUOT",b:'"'},{a:"rAarr",b:"⇛"},{a:"race",b:"∽̱"},{a:"Racute",b:"Ŕ"},{a:"racute",b:"ŕ"},{a:"radic",b:"√"},{a:"raemptyv",b:"⦳"},{a:"rang",b:"⟩"},{a:"Rang",b:"⟫"},{a:"rangd",b:"⦒"},{a:"range",b:"⦥"},{a:"rangle",b:"⟩"},{a:"raquo",b:"»"},{a:"rarrap",b:"⥵"},{a:"rarrb",b:"⇥"},{a:"rarrbfs",b:"⤠"},{a:"rarrc",b:"⤳"},{a:"rarr",b:"→"},{a:"Rarr",b:"↠"},{a:"rArr",b:"⇒"},{a:"rarrfs",b:"⤞"},{a:"rarrhk",b:"↪"},{a:"rarrlp",b:"↬"},{a:"rarrpl",b:"⥅"},{a:"rarrsim",b:"⥴"},{a:"Rarrtl",b:"⤖"},{a:"rarrtl",b:"↣"},{a:"rarrw",b:"↝"},{a:"ratail",b:"⤚"},{a:"rAtail",b:"⤜"},{a:"ratio",b:"∶"},{a:"rationals",b:"ℚ"},{a:"rbarr",b:"⤍"},{a:"rBarr",b:"⤏"},{a:"RBarr",b:"⤐"},{a:"rbbrk",b:"❳"},{a:"rbrace",b:"}"},{a:"rbrack",b:"]"},{a:"rbrke",b:"⦌"},{a:"rbrksld",b:"⦎"},{a:"rbrkslu",b:"⦐"},{a:"Rcaron",b:"Ř"},{a:"rcaron",b:"ř"},{a:"Rcedil",b:"Ŗ"},{a:"rcedil",b:"ŗ"},{a:"rceil",b:"⌉"},{a:"rcub",b:"}"},{a:"Rcy",b:"Р"},{a:"rcy",b:"р"},{a:"rdca",b:"⤷"},{a:"rdldhar",b:"⥩"},{a:"rdquo",b:"”"},{a:"rdquor",b:"”"},{a:"rdsh",b:"↳"},{a:"real",b:"ℜ"},{a:"realine",b:"ℛ"},{a:"realpart",b:"ℜ"},{a:"reals",b:"ℝ"},{a:"Re",b:"ℜ"},{a:"rect",b:"▭"},{a:"reg",b:"®"},{a:"REG",b:"®"},{a:"ReverseElement",b:"∋"},{a:"ReverseEquilibrium",b:"⇋"},{a:"ReverseUpEquilibrium",b:"⥯"},{a:"rfisht",b:"⥽"},{a:"rfloor",b:"⌋"},{a:"rfr",b:"𝔯"},{a:"Rfr",b:"ℜ"},{a:"rHar",b:"⥤"},{a:"rhard",b:"⇁"},{a:"rharu",b:"⇀"},{a:"rharul",b:"⥬"},{a:"Rho",b:"Ρ"},{a:"rho",b:"ρ"},{a:"rhov",b:"ϱ"},{a:"RightAngleBracket",b:"⟩"},{a:"RightArrowBar",b:"⇥"},{a:"rightarrow",b:"→"},{a:"RightArrow",b:"→"},{a:"Rightarrow",b:"⇒"},{a:"RightArrowLeftArrow",b:"⇄"},{a:"rightarrowtail",b:"↣"},{a:"RightCeiling",b:"⌉"},{a:"RightDoubleBracket",b:"⟧"},{a:"RightDownTeeVector",b:"⥝"},{a:"RightDownVectorBar",b:"⥕"},{a:"RightDownVector",b:"⇂"},{a:"RightFloor",b:"⌋"},{a:"rightharpoondown",b:"⇁"},{a:"rightharpoonup",b:"⇀"},{a:"rightleftarrows",b:"⇄"},{a:"rightleftharpoons",b:"⇌"},{a:"rightrightarrows",b:"⇉"},{a:"rightsquigarrow",b:"↝"},{a:"RightTeeArrow",b:"↦"},{a:"RightTee",b:"⊢"},{a:"RightTeeVector",b:"⥛"},{a:"rightthreetimes",b:"⋌"},{a:"RightTriangleBar",b:"⧐"},{a:"RightTriangle",b:"⊳"},{a:"RightTriangleEqual",b:"⊵"},{a:"RightUpDownVector",b:"⥏"},{a:"RightUpTeeVector",b:"⥜"},{a:"RightUpVectorBar",b:"⥔"},{a:"RightUpVector",b:"↾"},{a:"RightVectorBar",b:"⥓"},{a:"RightVector",b:"⇀"},{a:"ring",b:"˚"},{a:"risingdotseq",b:"≓"},{a:"rlarr",b:"⇄"},{a:"rlhar",b:"⇌"},{a:"rlm",b:"‏"},{a:"rmoustache",b:"⎱"},{a:"rmoust",b:"⎱"},{a:"rnmid",b:"⫮"},{a:"roang",b:"⟭"},{a:"roarr",b:"⇾"},{a:"robrk",b:"⟧"},{a:"ropar",b:"⦆"},{a:"ropf",b:"𝕣"},{a:"Ropf",b:"ℝ"},{a:"roplus",b:"⨮"},{a:"rotimes",b:"⨵"},{a:"RoundImplies",b:"⥰"},{a:"rpar",b:")"},{a:"rpargt",b:"⦔"},{a:"rppolint",b:"⨒"},{a:"rrarr",b:"⇉"},{a:"Rrightarrow",b:"⇛"},{a:"rsaquo",b:"›"},{a:"rscr",b:"𝓇"},{a:"Rscr",b:"ℛ"},{a:"rsh",b:"↱"},{a:"Rsh",b:"↱"},{a:"rsqb",b:"]"},{a:"rsquo",b:"’"},{a:"rsquor",b:"’"},{a:"rthree",b:"⋌"},{a:"rtimes",b:"⋊"},{a:"rtri",b:"▹"},{a:"rtrie",b:"⊵"},{a:"rtrif",b:"▸"},{a:"rtriltri",b:"⧎"},{a:"RuleDelayed",b:"⧴"},{a:"ruluhar",b:"⥨"},{a:"rx",b:"℞"},{a:"Sacute",b:"Ś"},{a:"sacute",b:"ś"},{a:"sbquo",b:"‚"},{a:"scap",b:"⪸"},{a:"Scaron",b:"Š"},{a:"scaron",b:"š"},{a:"Sc",b:"⪼"},{a:"sc",b:"≻"},{a:"sccue",b:"≽"},{a:"sce",b:"⪰"},{a:"scE",b:"⪴"},{a:"Scedil",b:"Ş"},{a:"scedil",b:"ş"},{a:"Scirc",b:"Ŝ"},{a:"scirc",b:"ŝ"},{a:"scnap",b:"⪺"},{a:"scnE",b:"⪶"},{a:"scnsim",b:"⋩"},{a:"scpolint",b:"⨓"},{a:"scsim",b:"≿"},{a:"Scy",b:"С"},{a:"scy",b:"с"},{a:"sdotb",b:"⊡"},{a:"sdot",b:"⋅"},{a:"sdote",b:"⩦"},{a:"searhk",b:"⤥"},{a:"searr",b:"↘"},{a:"seArr",b:"⇘"},{a:"searrow",b:"↘"},{a:"sect",b:"§"},{a:"semi",b:";"},{a:"seswar",b:"⤩"},{a:"setminus",b:"∖"},{a:"setmn",b:"∖"},{a:"sext",b:"✶"},{a:"Sfr",b:"𝔖"},{a:"sfr",b:"𝔰"},{a:"sfrown",b:"⌢"},{a:"sharp",b:"♯"},{a:"SHCHcy",b:"Щ"},{a:"shchcy",b:"щ"},{a:"SHcy",b:"Ш"},{a:"shcy",b:"ш"},{a:"ShortDownArrow",b:"↓"},{a:"ShortLeftArrow",b:"←"},{a:"shortmid",b:"∣"},{a:"shortparallel",b:"∥"},{a:"ShortRightArrow",b:"→"},{a:"ShortUpArrow",b:"↑"},{a:"shy",b:"­"},{a:"Sigma",b:"Σ"},{a:"sigma",b:"σ"},{a:"sigmaf",b:"ς"},{a:"sigmav",b:"ς"},{a:"sim",b:"∼"},{a:"simdot",b:"⩪"},{a:"sime",b:"≃"},{a:"simeq",b:"≃"},{a:"simg",b:"⪞"},{a:"simgE",b:"⪠"},{a:"siml",b:"⪝"},{a:"simlE",b:"⪟"},{a:"simne",b:"≆"},{a:"simplus",b:"⨤"},{a:"simrarr",b:"⥲"},{a:"slarr",b:"←"},{a:"SmallCircle",b:"∘"},{a:"smallsetminus",b:"∖"},{a:"smashp",b:"⨳"},{a:"smeparsl",b:"⧤"},{a:"smid",b:"∣"},{a:"smile",b:"⌣"},{a:"smt",b:"⪪"},{a:"smte",b:"⪬"},{a:"smtes",b:"⪬︀"},{a:"SOFTcy",b:"Ь"},{a:"softcy",b:"ь"},{a:"solbar",b:"⌿"},{a:"solb",b:"⧄"},{a:"sol",b:"/"},{a:"Sopf",b:"𝕊"},{a:"sopf",b:"𝕤"},{a:"spades",b:"♠"},{a:"spadesuit",b:"♠"},{a:"spar",b:"∥"},{a:"sqcap",b:"⊓"},{a:"sqcaps",b:"⊓︀"},{a:"sqcup",b:"⊔"},{a:"sqcups",b:"⊔︀"},{a:"Sqrt",b:"√"},{a:"sqsub",b:"⊏"},{a:"sqsube",b:"⊑"},{a:"sqsubset",b:"⊏"},{a:"sqsubseteq",b:"⊑"},{a:"sqsup",b:"⊐"},{a:"sqsupe",b:"⊒"},{a:"sqsupset",b:"⊐"},{a:"sqsupseteq",b:"⊒"},{a:"square",b:"□"},{a:"Square",b:"□"},{a:"SquareIntersection",b:"⊓"},{a:"SquareSubset",b:"⊏"},{a:"SquareSubsetEqual",b:"⊑"},{a:"SquareSuperset",b:"⊐"},{a:"SquareSupersetEqual",b:"⊒"},{a:"SquareUnion",b:"⊔"},{a:"squarf",b:"▪"},{a:"squ",b:"□"},{a:"squf",b:"▪"},{a:"srarr",b:"→"},{a:"Sscr",b:"𝒮"},{a:"sscr",b:"𝓈"},{a:"ssetmn",b:"∖"},{a:"ssmile",b:"⌣"},{a:"sstarf",b:"⋆"},{a:"Star",b:"⋆"},{a:"star",b:"☆"},{a:"starf",b:"★"},{a:"straightepsilon",b:"ϵ"},{a:"straightphi",b:"ϕ"},{a:"strns",b:"¯"},{a:"sub",b:"⊂"},{a:"Sub",b:"⋐"},{a:"subdot",b:"⪽"},{a:"subE",b:"⫅"},{a:"sube",b:"⊆"},{a:"subedot",b:"⫃"},{a:"submult",b:"⫁"},{a:"subnE",b:"⫋"},{a:"subne",b:"⊊"},{a:"subplus",b:"⪿"},{a:"subrarr",b:"⥹"},{a:"subset",b:"⊂"},{a:"Subset",b:"⋐"},{a:"subseteq",b:"⊆"},{a:"subseteqq",b:"⫅"},{a:"SubsetEqual",b:"⊆"},{a:"subsetneq",b:"⊊"},{a:"subsetneqq",b:"⫋"},{a:"subsim",b:"⫇"},{a:"subsub",b:"⫕"},{a:"subsup",b:"⫓"},{a:"succapprox",b:"⪸"},{a:"succ",b:"≻"},{a:"succcurlyeq",b:"≽"},{a:"Succeeds",b:"≻"},{a:"SucceedsEqual",b:"⪰"},{a:"SucceedsSlantEqual",b:"≽"},{a:"SucceedsTilde",b:"≿"},{a:"succeq",b:"⪰"},{a:"succnapprox",b:"⪺"},{a:"succneqq",b:"⪶"},{a:"succnsim",b:"⋩"},{a:"succsim",b:"≿"},{a:"SuchThat",b:"∋"},{a:"sum",b:"∑"},{a:"Sum",b:"∑"},{a:"sung",b:"♪"},{a:"sup1",b:"¹"},{a:"sup2",b:"²"},{a:"sup3",b:"³"},{a:"sup",b:"⊃"},{a:"Sup",b:"⋑"},{a:"supdot",b:"⪾"},{a:"supdsub",b:"⫘"},{a:"supE",b:"⫆"},{a:"supe",b:"⊇"},{a:"supedot",b:"⫄"},{a:"Superset",b:"⊃"},{a:"SupersetEqual",b:"⊇"},{a:"suphsol",b:"⟉"},{a:"suphsub",b:"⫗"},{a:"suplarr",b:"⥻"},{a:"supmult",b:"⫂"},{a:"supnE",b:"⫌"},{a:"supne",b:"⊋"},{a:"supplus",b:"⫀"},{a:"supset",b:"⊃"},{a:"Supset",b:"⋑"},{a:"supseteq",b:"⊇"},{a:"supseteqq",b:"⫆"},{a:"supsetneq",b:"⊋"},{a:"supsetneqq",b:"⫌"},{a:"supsim",b:"⫈"},{a:"supsub",b:"⫔"},{a:"supsup",b:"⫖"},{a:"swarhk",b:"⤦"},{a:"swarr",b:"↙"},{a:"swArr",b:"⇙"},{a:"swarrow",b:"↙"},{a:"swnwar",b:"⤪"},{a:"szlig",b:"ß"},{a:"Tab",b:"\t"},{a:"target",b:"⌖"},{a:"Tau",b:"Τ"},{a:"tau",b:"τ"},{a:"tbrk",b:"⎴"},{a:"Tcaron",b:"Ť"},{a:"tcaron",b:"ť"},{a:"Tcedil",b:"Ţ"},{a:"tcedil",b:"ţ"},{a:"Tcy",b:"Т"},{a:"tcy",b:"т"},{a:"tdot",b:"⃛"},{a:"telrec",b:"⌕"},{a:"Tfr",b:"𝔗"},{a:"tfr",b:"𝔱"},{a:"there4",b:"∴"},{a:"therefore",b:"∴"},{a:"Therefore",b:"∴"},{a:"Theta",b:"Θ"},{a:"theta",b:"θ"},{a:"thetasym",b:"ϑ"},{a:"thetav",b:"ϑ"},{a:"thickapprox",b:"≈"},{a:"thicksim",b:"∼"},{a:"ThickSpace",b:"  "},{a:"ThinSpace",b:" "},{a:"thinsp",b:" "},{a:"thkap",b:"≈"},{a:"thksim",b:"∼"},{a:"THORN",b:"Þ"},{a:"thorn",b:"þ"},{a:"tilde",b:"˜"},{a:"Tilde",b:"∼"},{a:"TildeEqual",b:"≃"},{a:"TildeFullEqual",b:"≅"},{a:"TildeTilde",b:"≈"},{a:"timesbar",b:"⨱"},{a:"timesb",b:"⊠"},{a:"times",b:"×"},{a:"timesd",b:"⨰"},{a:"tint",b:"∭"},{a:"toea",b:"⤨"},{a:"topbot",b:"⌶"},{a:"topcir",b:"⫱"},{a:"top",b:"⊤"},{a:"Topf",b:"𝕋"},{a:"topf",b:"𝕥"},{a:"topfork",b:"⫚"},{a:"tosa",b:"⤩"},{a:"tprime",b:"‴"},{a:"trade",b:"™"},{a:"TRADE",b:"™"},{a:"triangle",b:"▵"},{a:"triangledown",b:"▿"},{a:"triangleleft",b:"◃"},{a:"trianglelefteq",b:"⊴"},{a:"triangleq",b:"≜"},{a:"triangleright",b:"▹"},{a:"trianglerighteq",b:"⊵"},{a:"tridot",b:"◬"},{a:"trie",b:"≜"},{a:"triminus",b:"⨺"},{a:"TripleDot",b:"⃛"},{a:"triplus",b:"⨹"},{a:"trisb",b:"⧍"},{a:"tritime",b:"⨻"},{a:"trpezium",b:"⏢"},{a:"Tscr",b:"𝒯"},{a:"tscr",b:"𝓉"},{a:"TScy",b:"Ц"},{a:"tscy",b:"ц"},{a:"TSHcy",b:"Ћ"},{a:"tshcy",b:"ћ"},{a:"Tstrok",b:"Ŧ"},{a:"tstrok",b:"ŧ"},{a:"twixt",b:"≬"},{a:"twoheadleftarrow",b:"↞"},{a:"twoheadrightarrow",b:"↠"},{a:"Uacute",b:"Ú"},{a:"uacute",b:"ú"},{a:"uarr",b:"↑"},{a:"Uarr",b:"↟"},{a:"uArr",b:"⇑"},{a:"Uarrocir",b:"⥉"},{a:"Ubrcy",b:"Ў"},{a:"ubrcy",b:"ў"},{a:"Ubreve",b:"Ŭ"},{a:"ubreve",b:"ŭ"},{a:"Ucirc",b:"Û"},{a:"ucirc",b:"û"},{a:"Ucy",b:"У"},{a:"ucy",b:"у"},{a:"udarr",b:"⇅"},{a:"Udblac",b:"Ű"},{a:"udblac",b:"ű"},{a:"udhar",b:"⥮"},{a:"ufisht",b:"⥾"},{a:"Ufr",b:"𝔘"},{a:"ufr",b:"𝔲"},{a:"Ugrave",b:"Ù"},{a:"ugrave",b:"ù"},{a:"uHar",b:"⥣"},{a:"uharl",b:"↿"},{a:"uharr",b:"↾"},{a:"uhblk",b:"▀"},{a:"ulcorn",b:"⌜"},{a:"ulcorner",b:"⌜"},{a:"ulcrop",b:"⌏"},{a:"ultri",b:"◸"},{a:"Umacr",b:"Ū"},{a:"umacr",b:"ū"},{a:"uml",b:"¨"},{a:"UnderBar",b:"_"},{a:"UnderBrace",b:"⏟"},{a:"UnderBracket",b:"⎵"},{a:"UnderParenthesis",b:"⏝"},{a:"Union",b:"⋃"},{a:"UnionPlus",b:"⊎"},{a:"Uogon",b:"Ų"},{a:"uogon",b:"ų"},{a:"Uopf",b:"𝕌"},{a:"uopf",b:"𝕦"},{a:"UpArrowBar",b:"⤒"},{a:"uparrow",b:"↑"},{a:"UpArrow",b:"↑"},{a:"Uparrow",b:"⇑"},{a:"UpArrowDownArrow",b:"⇅"},{a:"updownarrow",b:"↕"},{a:"UpDownArrow",b:"↕"},{a:"Updownarrow",b:"⇕"},{a:"UpEquilibrium",b:"⥮"},{a:"upharpoonleft",b:"↿"},{a:"upharpoonright",b:"↾"},{a:"uplus",b:"⊎"},{a:"UpperLeftArrow",b:"↖"},{a:"UpperRightArrow",b:"↗"},{a:"upsi",b:"υ"},{a:"Upsi",b:"ϒ"},{a:"upsih",b:"ϒ"},{a:"Upsilon",b:"Υ"},{a:"upsilon",b:"υ"},{a:"UpTeeArrow",b:"↥"},{a:"UpTee",b:"⊥"},{a:"upuparrows",b:"⇈"},{a:"urcorn",b:"⌝"},{a:"urcorner",b:"⌝"},{a:"urcrop",b:"⌎"},{a:"Uring",b:"Ů"},{a:"uring",b:"ů"},{a:"urtri",b:"◹"},{a:"Uscr",b:"𝒰"},{a:"uscr",b:"𝓊"},{a:"utdot",b:"⋰"},{a:"Utilde",b:"Ũ"},{a:"utilde",b:"ũ"},{a:"utri",b:"▵"},{a:"utrif",b:"▴"},{a:"uuarr",b:"⇈"},{a:"Uuml",b:"Ü"},{a:"uuml",b:"ü"},{a:"uwangle",b:"⦧"},{a:"vangrt",b:"⦜"},{a:"varepsilon",b:"ϵ"},{a:"varkappa",b:"ϰ"},{a:"varnothing",b:"∅"},{a:"varphi",b:"ϕ"},{a:"varpi",b:"ϖ"},{a:"varpropto",b:"∝"},{a:"varr",b:"↕"},{a:"vArr",b:"⇕"},{a:"varrho",b:"ϱ"},{a:"varsigma",b:"ς"},{a:"varsubsetneq",b:"⊊︀"},{a:"varsubsetneqq",b:"⫋︀"},{a:"varsupsetneq",b:"⊋︀"},{a:"varsupsetneqq",b:"⫌︀"},{a:"vartheta",b:"ϑ"},{a:"vartriangleleft",b:"⊲"},{a:"vartriangleright",b:"⊳"},{a:"vBar",b:"⫨"},{a:"Vbar",b:"⫫"},{a:"vBarv",b:"⫩"},{a:"Vcy",b:"В"},{a:"vcy",b:"в"},{a:"vdash",b:"⊢"},{a:"vDash",b:"⊨"},{a:"Vdash",b:"⊩"},{a:"VDash",b:"⊫"},{a:"Vdashl",b:"⫦"},{a:"veebar",b:"⊻"},{a:"vee",b:"∨"},{a:"Vee",b:"⋁"},{a:"veeeq",b:"≚"},{a:"vellip",b:"⋮"},{a:"verbar",b:"|"},{a:"Verbar",b:"‖"},{a:"vert",b:"|"},{a:"Vert",b:"‖"},{a:"VerticalBar",b:"∣"},{a:"VerticalLine",b:"|"},{a:"VerticalSeparator",b:"❘"},{a:"VerticalTilde",b:"≀"},{a:"VeryThinSpace",b:" "},{a:"Vfr",b:"𝔙"},{a:"vfr",b:"𝔳"},{a:"vltri",b:"⊲"},{a:"vnsub",b:"⊂⃒"},{a:"vnsup",b:"⊃⃒"},{a:"Vopf",b:"𝕍"},{a:"vopf",b:"𝕧"},{a:"vprop",b:"∝"},{a:"vrtri",b:"⊳"},{a:"Vscr",b:"𝒱"},{a:"vscr",b:"𝓋"},{a:"vsubnE",b:"⫋︀"},{a:"vsubne",b:"⊊︀"},{a:"vsupnE",b:"⫌︀"},{a:"vsupne",b:"⊋︀"},{a:"Vvdash",b:"⊪"},{a:"vzigzag",b:"⦚"},{a:"Wcirc",b:"Ŵ"},{a:"wcirc",b:"ŵ"},{a:"wedbar",b:"⩟"},{a:"wedge",b:"∧"},{a:"Wedge",b:"⋀"},{a:"wedgeq",b:"≙"},{a:"weierp",b:"℘"},{a:"Wfr",b:"𝔚"},{a:"wfr",b:"𝔴"},{a:"Wopf",b:"𝕎"},{a:"wopf",b:"𝕨"},{a:"wp",b:"℘"},{a:"wr",b:"≀"},{a:"wreath",b:"≀"},{a:"Wscr",b:"𝒲"},{a:"wscr",b:"𝓌"},{a:"xcap",b:"⋂"},{a:"xcirc",b:"◯"},{a:"xcup",b:"⋃"},{a:"xdtri",b:"▽"},{a:"Xfr",b:"𝔛"},{a:"xfr",b:"𝔵"},{a:"xharr",b:"⟷"},{a:"xhArr",b:"⟺"},{a:"Xi",b:"Ξ"},{a:"xi",b:"ξ"},{a:"xlarr",b:"⟵"},{a:"xlArr",b:"⟸"},{a:"xmap",b:"⟼"},{a:"xnis",b:"⋻"},{a:"xodot",b:"⨀"},{a:"Xopf",b:"𝕏"},{a:"xopf",b:"𝕩"},{a:"xoplus",b:"⨁"},{a:"xotime",b:"⨂"},{a:"xrarr",b:"⟶"},{a:"xrArr",b:"⟹"},{a:"Xscr",b:"𝒳"},{a:"xscr",b:"𝓍"},{a:"xsqcup",b:"⨆"},{a:"xuplus",b:"⨄"},{a:"xutri",b:"△"},{a:"xvee",b:"⋁"},{a:"xwedge",b:"⋀"},{a:"Yacute",b:"Ý"},{a:"yacute",b:"ý"},{a:"YAcy",b:"Я"},{a:"yacy",b:"я"},{a:"Ycirc",b:"Ŷ"},{a:"ycirc",b:"ŷ"},{a:"Ycy",b:"Ы"},{a:"ycy",b:"ы"},{a:"yen",b:"¥"},{a:"Yfr",b:"𝔜"},{a:"yfr",b:"𝔶"},{a:"YIcy",b:"Ї"},{a:"yicy",b:"ї"},{a:"Yopf",b:"𝕐"},{a:"yopf",b:"𝕪"},{a:"Yscr",b:"𝒴"},{a:"yscr",b:"𝓎"},{a:"YUcy",b:"Ю"},{a:"yucy",b:"ю"},{a:"yuml",b:"ÿ"},{a:"Yuml",b:"Ÿ"},{a:"Zacute",b:"Ź"},{a:"zacute",b:"ź"},{a:"Zcaron",b:"Ž"},{a:"zcaron",b:"ž"},{a:"Zcy",b:"З"},{a:"zcy",b:"з"},{a:"Zdot",b:"Ż"},{a:"zdot",b:"ż"},{a:"zeetrf",b:"ℨ"},{a:"ZeroWidthSpace",b:"​"},{a:"Zeta",b:"Ζ"},{a:"zeta",b:"ζ"},{a:"zfr",b:"𝔷"},{a:"Zfr",b:"ℨ"},{a:"ZHcy",b:"Ж"},{a:"zhcy",b:"ж"},{a:"zigrarr",b:"⇝"},{a:"zopf",b:"𝕫"},{a:"Zopf",b:"ℤ"},{a:"Zscr",b:"𝒵"},{a:"zscr",b:"𝓏"},{a:"zwj",b:"‍"},{a:"zwnj",b:"‌"}]),A3($elm$core$List$foldl,F2(function(_v0,dict){return A3($elm$core$Dict$insert,_v0.a,_v0.b,dict)}),$elm$core$Dict$empty,$hecrj$html_parser$Html$Parser$namedCharacterReference)),$elm$core$Maybe$withDefault=F2(function(_default,maybe){return maybe.$?_default:maybe.a}),$hecrj$html_parser$Html$Parser$namedCharacterReference=A2($elm$parser$Parser$map,function(reference){return A2($elm$core$Maybe$withDefault,"&"+reference+";",A2($elm$core$Dict$get,reference,$hecrj$html_parser$Html$Parser$NamedCharacterReferences$dict))},$elm$parser$Parser$getChompedString($hecrj$html_parser$Html$Parser$chompOneOrMore($elm$core$Char$isAlpha))),$elm$core$String$cons=_String_cons,$elm$core$Basics$pow=$hecrj$html_parser$Html$Parser$hexadecimal,$rtfeldman$elm_hex$Hex$fromStringHelp=F3(function(position,chars,accumulated){for(;;){if(!chars.b)return $elm$core$Result$Ok(accumulated);var _char=chars.a,rest=chars.b;switch(_char){case"0":position=$temp$position=position-1,chars=$temp$chars=rest,accumulated=$temp$accumulated=accumulated;continue;case"1":var $temp$position=position-1,$temp$chars=rest,$temp$accumulated=accumulated+A2($elm$core$Basics$pow,16,position);position=$temp$position,chars=$temp$chars,accumulated=$temp$accumulated;continue;case"2":$temp$position=position-1,$temp$chars=rest,$temp$accumulated=accumulated+2*A2($elm$core$Basics$pow,16,position);position=$temp$position,chars=$temp$chars,accumulated=$temp$accumulated;continue;case"3":$temp$position=position-1,$temp$chars=rest,$temp$accumulated=accumulated+3*A2($elm$core$Basics$pow,16,position);position=$temp$position,chars=$temp$chars,accumulated=$temp$accumulated;continue;case"4":$temp$position=position-1,$temp$chars=rest,$temp$accumulated=accumulated+4*A2($elm$core$Basics$pow,16,position);position=$temp$position,chars=$temp$chars,accumulated=$temp$accumulated;continue;case"5":$temp$position=position-1,$temp$chars=rest,$temp$accumulated=accumulated+5*A2($elm$core$Basics$pow,16,position);position=$temp$position,chars=$temp$chars,accumulated=$temp$accumulated;continue;case"6":$temp$position=position-1,$temp$chars=rest,$temp$accumulated=accumulated+6*A2($elm$core$Basics$pow,16,position);position=$temp$position,chars=$temp$chars,accumulated=$temp$accumulated;continue;case"7":$temp$position=position-1,$temp$chars=rest,$temp$accumulated=accumulated+7*A2($elm$core$Basics$pow,16,position);position=$temp$position,chars=$temp$chars,accumulated=$temp$accumulated;continue;case"8":$temp$position=position-1,$temp$chars=rest,$temp$accumulated=accumulated+8*A2($elm$core$Basics$pow,16,position);position=$temp$position,chars=$temp$chars,accumulated=$temp$accumulated;continue;case"9":$temp$position=position-1,$temp$chars=rest,$temp$accumulated=accumulated+9*A2($elm$core$Basics$pow,16,position);position=$temp$position,chars=$temp$chars,accumulated=$temp$accumulated;continue;case"a":$temp$position=position-1,$temp$chars=rest,$temp$accumulated=accumulated+10*A2($elm$core$Basics$pow,16,position);position=$temp$position,chars=$temp$chars,accumulated=$temp$accumulated;continue;case"b":$temp$position=position-1,$temp$chars=rest,$temp$accumulated=accumulated+11*A2($elm$core$Basics$pow,16,position);position=$temp$position,chars=$temp$chars,accumulated=$temp$accumulated;continue;case"c":$temp$position=position-1,$temp$chars=rest,$temp$accumulated=accumulated+12*A2($elm$core$Basics$pow,16,position);position=$temp$position,chars=$temp$chars,accumulated=$temp$accumulated;continue;case"d":$temp$position=position-1,$temp$chars=rest,$temp$accumulated=accumulated+13*A2($elm$core$Basics$pow,16,position);position=$temp$position,chars=$temp$chars,accumulated=$temp$accumulated;continue;case"e":$temp$position=position-1,$temp$chars=rest,$temp$accumulated=accumulated+14*A2($elm$core$Basics$pow,16,position);position=$temp$position,chars=$temp$chars,accumulated=$temp$accumulated;continue;case"f":$temp$position=position-1,$temp$chars=rest,$temp$accumulated=accumulated+15*A2($elm$core$Basics$pow,16,position);position=$temp$position,chars=$temp$chars,accumulated=$temp$accumulated;continue;default:return $elm$core$Result$Err($elm$core$String$fromChar(_char)+" is not a valid hexadecimal character.")}}}),$elm$core$Result$map=F2(function(func,ra){return ra.$?$elm$core$Result$Err(ra.a):$elm$core$Result$Ok(func(ra.a))}),$elm$core$Result$mapError=F2(function(f,result){return result.$?$elm$core$Result$Err(f(result.a)):$elm$core$Result$Ok(result.a)}),$elm$core$String$foldr=$hecrj$html_parser$Html$Parser$numericCharacterReference,$hecrj$html_parser$Html$Parser$hexadecimal=A2($elm$parser$Parser$andThen,function(_v0){_v0=$rtfeldman$elm_hex$Hex$fromString($elm$core$String$toLower(_v0));return(_v0.$?$elm$parser$Parser$problem:$elm$parser$Parser$succeed)(_v0.a)},$elm$parser$Parser$getChompedString($hecrj$html_parser$Html$Parser$chompOneOrMore(function(code){code=$elm$core$Char$toCode(code);return 48<=code&&code<=57||65<=code&&code<=70||97<=code&&code<=102}))),$hecrj$html_parser$Html$Parser$numericCharacterReference={$:1},$elm$parser$Parser$Advanced$consumeBase=_Parser_consumeBase,$elm$parser$Parser$Advanced$consumeBase16=_Parser_consumeBase16,$elm$parser$Parser$Advanced$bumpOffset=F2(function(newOffset,s){return{ap:s.ap+(newOffset-s.c),d:s.d,e:s.e,c:newOffset,aY:s.aY,b:s.b}}),$elm$parser$Parser$Advanced$chompBase10=_Parser_chompBase10,$elm$parser$Parser$Advanced$isAsciiCode=_Parser_isAsciiCode,$elm$parser$Parser$Advanced$consumeExp=F2(function(offset,newOffset){if(A3($elm$parser$Parser$Advanced$isAsciiCode,101,offset,newOffset)||A3($elm$parser$Parser$Advanced$isAsciiCode,69,offset,newOffset)){var expOffset=offset+1,expOffset=A3($elm$parser$Parser$Advanced$isAsciiCode,43,expOffset,newOffset)||A3($elm$parser$Parser$Advanced$isAsciiCode,45,expOffset,newOffset)?expOffset+1:expOffset,newOffset=A2($elm$parser$Parser$Advanced$chompBase10,expOffset,newOffset);return _Utils_eq(expOffset,newOffset)?-newOffset:newOffset}return offset}),$elm$parser$Parser$Advanced$consumeDotAndExp=F2(function(offset,src){return A2($elm$parser$Parser$Advanced$consumeExp,A3($elm$parser$Parser$Advanced$isAsciiCode,46,offset,src)?A2($elm$parser$Parser$Advanced$chompBase10,offset+1,src):offset,src)}),$elm$parser$Parser$Advanced$finalizeInt=F5(function(invalid,toValue,startOffset,n,s){var endOffset=n.a,n=n.b;if(1===toValue.$)return A2($elm$parser$Parser$Advanced$Bad,!0,A2($elm$parser$Parser$Advanced$fromState,s,toValue.a));toValue=toValue.a;return _Utils_eq(startOffset,endOffset)?A2($elm$parser$Parser$Advanced$Bad,_Utils_cmp(s.c,startOffset)<0,A2($elm$parser$Parser$Advanced$fromState,s,invalid)):A3($elm$parser$Parser$Advanced$Good,!0,toValue(n),A2($elm$parser$Parser$Advanced$bumpOffset,endOffset,s))}),$elm$core$String$toFloat=function(n){return 0!==n.length&&!/[\sxbo]/.test(n)&&(n=+n)==n?$elm$core$Maybe$Just(n):$elm$core$Maybe$Nothing},$elm$parser$Parser$Advanced$finalizeFloat=F6(function(invalid,expecting,intSettings,_v1,toValue,s){var intOffset=toValue.a,floatOffset=A2($elm$parser$Parser$Advanced$consumeDotAndExp,intOffset,s.b);if(floatOffset<0)return A2($elm$parser$Parser$Advanced$Bad,!0,A4($elm$parser$Parser$Advanced$fromInfo,s.aY,s.ap-(floatOffset+s.c),invalid,s.d));if(_Utils_eq(s.c,floatOffset))return A2($elm$parser$Parser$Advanced$Bad,!1,A2($elm$parser$Parser$Advanced$fromState,s,expecting));if(_Utils_eq(intOffset,floatOffset))return A5($elm$parser$Parser$Advanced$finalizeInt,invalid,intSettings,s.c,toValue,s);if(1===_v1.$)return A2($elm$parser$Parser$Advanced$Bad,!0,A2($elm$parser$Parser$Advanced$fromState,s,invalid));toValue=_v1.a,_v1=$elm$core$String$toFloat(A3($elm$core$String$slice,s.c,floatOffset,s.b));return 1===_v1.$?A2($elm$parser$Parser$Advanced$Bad,!0,A2($elm$parser$Parser$Advanced$fromState,s,invalid)):A3($elm$parser$Parser$Advanced$Good,!0,toValue(_v1.a),A2($elm$parser$Parser$Advanced$bumpOffset,floatOffset,s))}),$hecrj$html_parser$Html$Parser$numericCharacterReference=A2(F2(function(expecting,invalid){return c={an:$elm$core$Result$Err(invalid),au:expecting,av:$elm$core$Result$Err(invalid),az:$elm$core$Result$Err(invalid),aD:$elm$core$Result$Ok($elm$core$Basics$identity),bp:invalid,aH:$elm$core$Result$Err(invalid)},function(s){if(A3($elm$parser$Parser$Advanced$isAsciiCode,48,s.c,s.b)){var zeroOffset=s.c+1,baseOffset=zeroOffset+1;return A3($elm$parser$Parser$Advanced$isAsciiCode,120,zeroOffset,s.b)?A5($elm$parser$Parser$Advanced$finalizeInt,c.bp,c.az,baseOffset,A2($elm$parser$Parser$Advanced$consumeBase16,baseOffset,s.b),s):A3($elm$parser$Parser$Advanced$isAsciiCode,111,zeroOffset,s.b)?A5($elm$parser$Parser$Advanced$finalizeInt,c.bp,c.aH,baseOffset,A3($elm$parser$Parser$Advanced$consumeBase,8,baseOffset,s.b),s):A3($elm$parser$Parser$Advanced$isAsciiCode,98,zeroOffset,s.b)?A5($elm$parser$Parser$Advanced$finalizeInt,c.bp,c.an,baseOffset,A3($elm$parser$Parser$Advanced$consumeBase,2,baseOffset,s.b),s):A6($elm$parser$Parser$Advanced$finalizeFloat,c.bp,c.au,c.aD,c.av,{a:zeroOffset,b:0},s)}return A6($elm$parser$Parser$Advanced$finalizeFloat,c.bp,c.au,c.aD,c.av,A3($elm$parser$Parser$Advanced$consumeBase,10,s.c,s.b),s)};var c}),$hecrj$html_parser$Html$Parser$numericCharacterReference,$hecrj$html_parser$Html$Parser$numericCharacterReference),$hecrj$html_parser$Html$Parser$numericCharacterReference=($hecrj$html_parser$Html$Parser$numericCharacterReference=$elm$parser$Parser$oneOf(_List_fromArray([A2($elm$parser$Parser$keeper,A2($elm$parser$Parser$ignorer,$elm$parser$Parser$succeed($elm$core$Basics$identity),$elm$parser$Parser$chompIf(function(c){return"x"===c||"X"===c})),$hecrj$html_parser$Html$Parser$hexadecimal),A2($elm$parser$Parser$keeper,A2($elm$parser$Parser$ignorer,$elm$parser$Parser$succeed($elm$core$Basics$identity),$elm$parser$Parser$chompWhile($elm$core$Basics$eq("0"))),$hecrj$html_parser$Html$Parser$numericCharacterReference)])),A2($elm$parser$Parser$keeper,A2($elm$parser$Parser$ignorer,$elm$parser$Parser$succeed($elm$core$Basics$identity),$elm$parser$Parser$chompIf($elm$core$Basics$eq("#"))),A2($elm$parser$Parser$map,A2($elm$core$Basics$composeR,$elm$core$Char$fromCode,$elm$core$String$fromChar),$hecrj$html_parser$Html$Parser$numericCharacterReference))),$hecrj$html_parser$Html$Parser$characterReference=A2($elm$parser$Parser$keeper,A2($elm$parser$Parser$ignorer,$elm$parser$Parser$succeed($elm$core$Basics$identity),$elm$parser$Parser$chompIf($elm$core$Basics$eq("&"))),$elm$parser$Parser$oneOf(_List_fromArray([A2($elm$parser$Parser$ignorer,$elm$parser$Parser$backtrackable($hecrj$html_parser$Html$Parser$namedCharacterReference),$elm$http$Http$init),A2($elm$parser$Parser$ignorer,$elm$parser$Parser$backtrackable($hecrj$html_parser$Html$Parser$numericCharacterReference),$elm$http$Http$init),$elm$parser$Parser$succeed("&")]))),$hecrj$html_parser$Html$Parser$oneOrMore=F2(function(type_,parser_){return A2($elm$parser$Parser$loop,_List_Nil,function(list){return $elm$parser$Parser$oneOf(_List_fromArray([A2($elm$parser$Parser$map,function(_new){return $elm$parser$Parser$Loop(A2($elm$core$List$cons,_new,list))},parser_),list.b?$elm$parser$Parser$succeed($elm$parser$Parser$Done($elm$core$List$reverse(list))):$elm$parser$Parser$problem("expecting at least one "+type_)]))})}),$elm$http$Http$init=A2($elm$parser$Parser$map,$elm$core$String$join(""),A2($hecrj$html_parser$Html$Parser$oneOrMore,"attribute value",$elm$parser$Parser$oneOf(_List_fromArray([$elm$parser$Parser$getChompedString($hecrj$html_parser$Html$Parser$chompOneOrMore(function(c){return!$hecrj$html_parser$Html$Parser$isSpaceCharacter(c)&&'"'!==c&&"'"!==c&&"="!==c&&"<"!==c&&">"!==c&&"`"!==c&&"&"!==c})),$hecrj$html_parser$Html$Parser$characterReference])))),$elm$http$Http$init=$elm$parser$Parser$oneOf(_List_fromArray([A2($elm$parser$Parser$keeper,A2($elm$parser$Parser$ignorer,A2($elm$parser$Parser$ignorer,$elm$parser$Parser$succeed($elm$core$Basics$identity),$elm$parser$Parser$chompIf($elm$core$Basics$eq("="))),$elm$parser$Parser$chompWhile($hecrj$html_parser$Html$Parser$isSpaceCharacter)),$elm$parser$Parser$oneOf(_List_fromArray([$elm$http$Http$init,$hecrj$html_parser$Html$Parser$tagAttributeQuotedValue('"'),$hecrj$html_parser$Html$Parser$tagAttributeQuotedValue("'")]))),$elm$parser$Parser$succeed("")])),$elm$http$Http$onEffects=A2($elm$parser$Parser$keeper,A2($elm$parser$Parser$keeper,$elm$parser$Parser$succeed($elm$core$Tuple$pair),A2($elm$parser$Parser$ignorer,$elm$http$Http$onEffects,$elm$parser$Parser$chompWhile($hecrj$html_parser$Html$Parser$isSpaceCharacter))),A2($elm$parser$Parser$ignorer,$elm$http$Http$init,$elm$parser$Parser$chompWhile($hecrj$html_parser$Html$Parser$isSpaceCharacter))),$hecrj$html_parser$Html$Parser$tagAttributes=$hecrj$html_parser$Html$Parser$many($elm$http$Http$onEffects),$hecrj$html_parser$Html$Parser$tagName=A2($elm$parser$Parser$map,$elm$core$String$toLower,$elm$parser$Parser$getChompedString(A2($elm$parser$Parser$ignorer,$elm$parser$Parser$chompIf($elm$core$Char$isAlphaNum),$elm$parser$Parser$chompWhile(function(c){return $elm$core$Char$isAlphaNum(c)||"-"===c})))),$hecrj$html_parser$Html$Parser$text=A2($elm$parser$Parser$map,A2($elm$core$Basics$composeR,$elm$core$String$join(""),$hecrj$html_parser$Html$Parser$Text),A2($hecrj$html_parser$Html$Parser$oneOrMore,"text element",$elm$parser$Parser$oneOf(_List_fromArray([$elm$parser$Parser$getChompedString($hecrj$html_parser$Html$Parser$chompOneOrMore(function(c){return"<"!==c&&"&"!==c})),$hecrj$html_parser$Html$Parser$characterReference]))));function $hecrj$html_parser$Html$Parser$cyclic$node(){return $elm$parser$Parser$oneOf(_List_fromArray([$hecrj$html_parser$Html$Parser$text,$hecrj$html_parser$Html$Parser$comment,$hecrj$html_parser$Html$Parser$cyclic$element()]))}function $hecrj$html_parser$Html$Parser$cyclic$element(){return A2($elm$parser$Parser$andThen,function(attributes){var name=attributes.a,attributes=attributes.b;return $hecrj$html_parser$Html$Parser$isVoidElement(name)?A2($elm$parser$Parser$ignorer,A2($elm$parser$Parser$ignorer,$elm$parser$Parser$succeed(A3($hecrj$html_parser$Html$Parser$Element,name,attributes,_List_Nil)),$elm$parser$Parser$oneOf(_List_fromArray([$elm$parser$Parser$chompIf($elm$core$Basics$eq("/")),$elm$parser$Parser$succeed(0)]))),$elm$parser$Parser$chompIf($elm$core$Basics$eq(">"))):A2($elm$parser$Parser$keeper,A2($elm$parser$Parser$ignorer,$elm$parser$Parser$succeed(A2($hecrj$html_parser$Html$Parser$Element,name,attributes)),$elm$parser$Parser$chompIf($elm$core$Basics$eq(">"))),A2($elm$parser$Parser$ignorer,$hecrj$html_parser$Html$Parser$many($elm$parser$Parser$backtrackable($hecrj$html_parser$Html$Parser$cyclic$node())),$hecrj$html_parser$Html$Parser$closingTag(name)))},A2($elm$parser$Parser$keeper,A2($elm$parser$Parser$keeper,A2($elm$parser$Parser$ignorer,$elm$parser$Parser$succeed($elm$core$Tuple$pair),$elm$parser$Parser$chompIf($elm$core$Basics$eq("<"))),A2($elm$parser$Parser$ignorer,$hecrj$html_parser$Html$Parser$tagName,$elm$parser$Parser$chompWhile($hecrj$html_parser$Html$Parser$isSpaceCharacter))),$hecrj$html_parser$Html$Parser$tagAttributes))}var $hecrj$html_parser$Html$Parser$node=$hecrj$html_parser$Html$Parser$cyclic$node();$hecrj$html_parser$Html$Parser$cyclic$node=function(){return $hecrj$html_parser$Html$Parser$node};var $hecrj$html_parser$Html$Parser$element=$hecrj$html_parser$Html$Parser$cyclic$element();$hecrj$html_parser$Html$Parser$cyclic$element=function(){return $hecrj$html_parser$Html$Parser$element};function $elm$parser$Parser$problemToDeadEnd(p){return A3($elm$parser$Parser$DeadEnd,p.aY,p.ap,p.aO)}function $hecrj$html_parser$Html$Parser$run(str){return $elm$core$String$isEmpty(str)?$elm$core$Result$Ok(_List_Nil):A2($elm$parser$Parser$run,A2($hecrj$html_parser$Html$Parser$oneOrMore,"node",$hecrj$html_parser$Html$Parser$node),str)}function $elm$core$Dict$moveRedLeft(rlR){if(-1!==rlR.$||-1!==rlR.d.$||-1!==rlR.e.$)return rlR;if(-1!==rlR.e.d.$||rlR.e.d.a){var k=rlR.b,v=rlR.c,rlL=rlR.d,lK=rlL.b,lV=rlL.c,lLeft=rlL.d,lRight=rlL.e,_v2=rlR.e,rK=_v2.b,rV=_v2.c,rLeft=_v2.d,rRight=_v2.e;return A5($elm$core$Dict$RBNode_elm_builtin,1,k,v,A5($elm$core$Dict$RBNode_elm_builtin,0,lK,lV,lLeft,lRight),A5($elm$core$Dict$RBNode_elm_builtin,0,rK,rV,rLeft,rRight))}var rLeft,k=rlR.b,v=rlR.c,lK=(rlL=rlR.d).b,lV=rlL.c,lLeft=rlL.d,lRight=rlL.e,rK=(_v2=rlR.e).b,rV=_v2.c,rlL=(rLeft=_v2.d).d,rlR=rLeft.e,rRight=_v2.e;return A5($elm$core$Dict$RBNode_elm_builtin,0,rLeft.b,rLeft.c,A5($elm$core$Dict$RBNode_elm_builtin,1,k,v,A5($elm$core$Dict$RBNode_elm_builtin,0,lK,lV,lLeft,lRight),rlL),A5($elm$core$Dict$RBNode_elm_builtin,1,rK,rV,rlR,rRight))}function $elm$core$Dict$moveRedRight(_v4){if(-1!==_v4.$||-1!==_v4.d.$||-1!==_v4.e.$)return _v4;if(-1!==_v4.d.d.$||_v4.d.d.a){var k=_v4.b,v=_v4.c,rRight=_v4.d,lK=rRight.b,lV=rRight.c,_v2=rRight.d,lRight=rRight.e,_v1=_v4.e,rK=_v1.b,rV=_v1.c,rLeft=_v1.d,rRight=_v1.e;return A5($elm$core$Dict$RBNode_elm_builtin,1,k,v,A5($elm$core$Dict$RBNode_elm_builtin,0,lK,lV,_v2,lRight),A5($elm$core$Dict$RBNode_elm_builtin,0,rK,rV,rLeft,rRight))}var k=_v4.b,v=_v4.c,lK=(_v1=_v4.d).b,lV=_v1.c,lRight=_v1.e,rK=(_v4=_v4.e).b,rV=_v4.c,rLeft=_v4.d,rRight=_v4.e;return A5($elm$core$Dict$RBNode_elm_builtin,0,lK,lV,A5($elm$core$Dict$RBNode_elm_builtin,1,(_v2=_v1.d).b,_v2.c,_v2.d,_v2.e),A5($elm$core$Dict$RBNode_elm_builtin,1,k,v,lRight,A5($elm$core$Dict$RBNode_elm_builtin,0,rK,rV,rLeft,rRight)))}function $elm$core$Dict$removeMin(nRight){if(-1!==nRight.$||-1!==nRight.d.$)return $elm$core$Dict$RBEmpty_elm_builtin;var color=nRight.a,key=nRight.b,value=nRight.c,left=nRight.d,_v4=left.d,right=nRight.e;if(1!==left.a)return A5($elm$core$Dict$RBNode_elm_builtin,color,key,value,$elm$core$Dict$removeMin(left),right);if(-1!==_v4.$||_v4.a){_v4=$elm$core$Dict$moveRedLeft(nRight);if(-1!==_v4.$)return $elm$core$Dict$RBEmpty_elm_builtin;nRight=_v4.e;return A5($elm$core$Dict$balance,_v4.a,_v4.b,_v4.c,$elm$core$Dict$removeMin(_v4.d),nRight)}return A5($elm$core$Dict$RBNode_elm_builtin,color,key,value,$elm$core$Dict$removeMin(left),right)}function $elm$http$Http$BadBody(a){return{$:4,a:a}}var $elm$parser$Parser$DeadEnd=F3(function(row,col,problem){return{ap:col,aO:problem,aY:row}}),$elm$parser$Parser$Advanced$bagToList=F2(function(bag,list){for(;;)switch(bag.$){case 0:return list;case 1:var bag1=bag.a,bag2=bag.b;bag=bag1,list=A2($elm$core$List$cons,bag2,list);continue;default:bag1=bag.a,bag2=bag.b;bag=bag1,list=A2($elm$parser$Parser$Advanced$bagToList,bag2,list);continue}}),$elm$parser$Parser$Advanced$run=F2(function(_v0,_v1){_v1=_v0({ap:1,d:_List_Nil,e:1,c:0,aY:1,b:_v1});return _v1.$?$elm$core$Result$Err(A2($elm$parser$Parser$Advanced$bagToList,_v1.b,_List_Nil)):$elm$core$Result$Ok(_v1.b)}),$elm$parser$Parser$run=F2(function(parser,_v0){_v0=A2($elm$parser$Parser$Advanced$run,parser,_v0);return _v0.$?$elm$core$Result$Err(A2($elm$core$List$map,$elm$parser$Parser$problemToDeadEnd,_v0.a)):$elm$core$Result$Ok(_v0.a)}),$author$project$PageFetch$content=function(res){if(res.$)return $elm$core$Result$Err(res.a);var page=res.a;return $elm$core$Result$Ok(function(){var nodes=$hecrj$html_parser$Html$Parser$run(page.aB);if(nodes.$)return{ac:{$:0,a:"This page isn't well formed. GO BACK"},ad:"No description found",af:$elm$core$Maybe$Nothing,r:page.r};nodes=nodes.a;return{ac:A2($elm$core$Maybe$withDefault,{$:0,a:"Content couldn't be parsed. GO BACK"},$elm$core$List$head(nodes)),ad:A3($elm$core$Basics$composeR,$elm$core$Maybe$andThen($author$project$PageFetch$extractShortDesc),$elm$core$Maybe$withDefault("No description found"),$elm$core$List$head(nodes)),af:A2($elm$core$Maybe$andThen,$author$project$PageFetch$grabImg,$elm$core$List$head(nodes)),r:page.r}}())},$elm$core$Platform$Cmd$map=$elm$http$Http$onSelfMsg,$elm$json$Json$Decode$decodeString=$elm$http$Http$cmdMap,$elm$http$Http$BadStatus_=F2(function(a,b){return{$:3,a:a,b:b}}),$elm$http$Http$BadUrl_=function(a){return{$:0,a:a}},$elm$http$Http$GoodStatus_=F2(function(a,b){return{$:4,a:a,b:b}}),$elm$http$Http$NetworkError_={$:2},$elm$http$Http$Receiving=function(a){return{$:1,a:a}},$elm$http$Http$Sending=function(a){return{$:0,a:a}},$elm$http$Http$Timeout_={$:1},$elm$core$Maybe$isJust=function(maybe){return!maybe.$},$elm$core$Dict$removeHelpPrepEQGT=F7(function(targetKey,dict,color,key,value,left,right){if(-1!==left.$||left.a){for(;;){if(-1!==right.$||1!==right.a)break;if(-1===right.d.$){if(1!==right.d.a)break;return $elm$core$Dict$moveRedRight(dict)}return $elm$core$Dict$moveRedRight(dict)}return dict}return A5($elm$core$Dict$RBNode_elm_builtin,color,left.b,left.c,left.d,A5($elm$core$Dict$RBNode_elm_builtin,0,key,value,left.e,right))}),$elm$core$Dict$removeHelp=F2(function(targetKey,dict){if(-2===dict.$)return $elm$core$Dict$RBEmpty_elm_builtin;var color=dict.a,key=dict.b,value=dict.c,left=dict.d,right=dict.e;if(_Utils_cmp(targetKey,key)<0){if(-1!==left.$||1!==left.a)return A5($elm$core$Dict$RBNode_elm_builtin,color,key,value,A2($elm$core$Dict$removeHelp,targetKey,left),right);var nRight=left.d;if(-1!==nRight.$||nRight.a){var _v7=$elm$core$Dict$moveRedLeft(dict);if(-1!==_v7.$)return $elm$core$Dict$RBEmpty_elm_builtin;nRight=_v7.e;return A5($elm$core$Dict$balance,_v7.a,_v7.b,_v7.c,A2($elm$core$Dict$removeHelp,targetKey,_v7.d),nRight)}return A5($elm$core$Dict$RBNode_elm_builtin,color,key,value,A2($elm$core$Dict$removeHelp,targetKey,left),right)}return A2($elm$core$Dict$removeHelpEQGT,targetKey,A7($elm$core$Dict$removeHelpPrepEQGT,targetKey,dict,color,key,value,left,right))}),$elm$core$Dict$removeHelpEQGT=F2(function(targetKey,_v1){if(-1!==_v1.$)return $elm$core$Dict$RBEmpty_elm_builtin;var color=_v1.a,key=_v1.b,value=_v1.c,left=_v1.d,right=_v1.e;if(_Utils_eq(targetKey,key)){_v1=function(dict){for(;;){if(-1!==dict.$||-1!==dict.d.$)return dict;dict=dict.d}}(right);return-1!==_v1.$?$elm$core$Dict$RBEmpty_elm_builtin:A5($elm$core$Dict$balance,color,_v1.b,_v1.c,left,$elm$core$Dict$removeMin(right))}return A5($elm$core$Dict$balance,color,key,value,left,A2($elm$core$Dict$removeHelp,targetKey,right))}),$elm$core$Dict$remove=F2(function(key,_v0){_v0=A2($elm$core$Dict$removeHelp,key,_v0);if(-1!==_v0.$||_v0.a)return _v0;return A5($elm$core$Dict$RBNode_elm_builtin,1,_v0.b,_v0.c,_v0.d,_v0.e)}),$elm$core$Dict$update=F3(function(targetKey,_v0,dictionary){_v0=_v0(A2($elm$core$Dict$get,targetKey,dictionary));return _v0.$?A2($elm$core$Dict$remove,targetKey,dictionary):A3($elm$core$Dict$insert,targetKey,_v0.a,dictionary)}),$elm$http$Http$expectStringResponse=F2(function(toMsg,toResult){return A3(_Http_expect,"",$elm$core$Basics$identity,A2($elm$core$Basics$composeR,toResult,toMsg))}),$elm$http$Http$NetworkError={$:2},$elm$http$Http$Timeout={$:1},$elm$http$Http$resolve=F2(function(toResult,response){switch(response.$){case 0:return $elm$core$Result$Err({$:0,a:response.a});case 1:return $elm$core$Result$Err($elm$http$Http$Timeout);case 2:return $elm$core$Result$Err($elm$http$Http$NetworkError);case 3:return $elm$core$Result$Err({$:3,a:response.a.bz});default:return A2($elm$core$Result$mapError,$elm$http$Http$BadBody,toResult(response.b))}}),$elm$http$Http$expectJson=F2(function(toMsg,decoder){return A2($elm$http$Http$expectStringResponse,toMsg,$elm$http$Http$resolve(function(string){return A2($elm$core$Result$mapError,$elm$json$Json$Decode$errorToString,A2($elm$json$Json$Decode$decodeString,decoder,string))}))}),$elm$http$Http$emptyBody={$:0},$elm$http$Http$State=F2(function(reqs,subs){return{aU:reqs,a2:subs}}),$elm$http$Http$init=$elm$core$Task$succeed(A2($elm$http$Http$State,$elm$core$Dict$empty,_List_Nil)),$elm$http$Http$updateReqs=F3(function(router,cmds,reqs){for(;;){if(!cmds.b)return $elm$core$Task$succeed(reqs);var _v2=cmds.a,otherCmds=cmds.b;if(_v2.$){var req=_v2.a;return A2($elm$core$Task$andThen,function(pid){var _v4=req.a4;return A3($elm$http$Http$updateReqs,router,otherCmds,1===_v4.$?reqs:A3($elm$core$Dict$insert,_v4.a,pid,reqs))},$elm$core$Process$spawn(A3(_Http_toTask,router,$elm$core$Platform$sendToApp(router),req)))}var tracker=_v2.a,_v2=A2($elm$core$Dict$get,tracker,reqs);if(1!==_v2.$)return A2($elm$core$Task$andThen,function(_v3){return A3($elm$http$Http$updateReqs,router,otherCmds,A2($elm$core$Dict$remove,tracker,reqs))},$elm$core$Process$kill(_v2.a));router=router,cmds=otherCmds,reqs=reqs}}),$elm$http$Http$onEffects=F4(function(router,cmds,subs,state){return A2($elm$core$Task$andThen,function(reqs){return $elm$core$Task$succeed(A2($elm$http$Http$State,reqs,subs))},A3($elm$http$Http$updateReqs,router,cmds,state.aU))}),$elm$core$List$maybeCons=F3(function(f,_v0,xs){_v0=f(_v0);return _v0.$?xs:A2($elm$core$List$cons,_v0.a,xs)}),$elm$core$List$filterMap=F2(function(f,xs){return A3($elm$core$List$foldr,$elm$core$List$maybeCons(f),_List_Nil,xs)}),$elm$http$Http$maybeSend=F4(function(router,desiredTracker,progress,_v0){var toMsg=_v0.b;return _Utils_eq(desiredTracker,_v0.a)?$elm$core$Maybe$Just(A2($elm$core$Platform$sendToApp,router,toMsg(progress))):$elm$core$Maybe$Nothing}),$elm$http$Http$onSelfMsg=F3(function(router,_v0,state){return A2($elm$core$Task$andThen,function(_v1){return $elm$core$Task$succeed(state)},$elm$core$Task$sequence(A2($elm$core$List$filterMap,A3($elm$http$Http$maybeSend,router,_v0.a,_v0.b),state.a2)))}),$elm$http$Http$cmdMap=F2(function(func,cmd){if(cmd.$){var r=cmd.a;return{$:1,a:{bb:r.bb,bd:r.bd,bk:A2(_Http_mapExpect,func,r.bk),ax:r.ax,bq:r.bq,bC:r.bC,a4:r.a4,bE:r.bE}}}return{$:0,a:cmd.a}}),$elm$http$Http$MySub=F2(function(a,b){return{$:0,a:a,b:b}});_Platform_effectManagers.Http={b:$elm$http$Http$init,c:$elm$http$Http$onEffects,d:$elm$http$Http$onSelfMsg,e:$elm$http$Http$cmdMap,f:F2(function(func,_v0){return A2($elm$http$Http$MySub,_v0.a,A2($elm$core$Basics$composeR,_v0.b,func))})};function $elm$http$Http$get(r){return function(r){return $elm$http$Http$command({$:1,a:{bb:!1,bd:r.bd,bk:r.bk,ax:r.ax,bq:r.bq,bC:r.bC,a4:r.a4,bE:r.bE}})}({bd:$elm$http$Http$emptyBody,bk:r.bk,ax:_List_Nil,bq:"GET",bC:$elm$core$Maybe$Nothing,a4:$elm$core$Maybe$Nothing,bE:r.bE})}function $author$project$Main$getDescription(title){return A2($elm$core$Platform$Cmd$map,$author$project$Model$GotDescription(title),$author$project$PageFetch$getPage(title))}function $elm$core$Array$length(_v0){return _v0.a}function $author$project$Main$createGame(model){var toast=$author$project$Main$makeToast("game seed is: "+model.a.B),signalPeers=model.a.f?$author$project$PeerPort$sendData(A2($author$project$PeerPort$seedInfo,model.a.F,model.a.B)):$elm$core$Platform$Cmd$none,titles=A2($author$project$Helpers$getDestinations,model.a.F,(titles=model.a.B,$elm$random$Random$initialSeed(A3($elm$core$String$foldl,F2(function(c,h){return(h<<5)+h+$elm$core$Char$toCode(c)}),5381,titles)))).a;return{a:_Utils_update(model,{y:_List_Nil,S:A2($elm$core$List$map,$author$project$Model$Loading,titles),h:$author$project$Model$Preview}),b:$elm$core$Platform$Cmd$batch(A2($elm$core$List$cons,$author$project$Main$activateTooltips,A2($elm$core$List$cons,$author$project$Main$activateClippy,A2($elm$core$List$cons,$author$project$Main$goBackToTop,A2($elm$core$List$cons,signalPeers,A2($elm$core$List$cons,toast,A2($elm$core$List$map,$author$project$Main$getDescription,titles)))))))}}function $author$project$Model$extractLoadedDestinations(loads){for(;;){if(!loads.b)return _List_Nil;if(1===loads.a.$)return A2($elm$core$List$cons,loads.a.a,$author$project$Model$extractLoadedDestinations(loads.b));loads=loads.b}}function $author$project$Main$reset(model){var signalPeers=model.a.f?$author$project$PeerPort$sendData($elm$json$Json$Encode$object(_List_fromArray([{a:"newGame",b:$elm$json$Json$Encode$string(model.a.j+" wants a new game")}]))):$elm$core$Platform$Cmd$none,_v0=A2($elm$core$Dict$map,F2(function(_v1,p){return _Utils_update($author$project$Model$emptyPeer,{f:p.f,j:p.j,g:p.g})}),model.i),_v0=_Utils_update(model,{y:_List_Nil,R:!1,o:{A:_List_Nil,u:_List_Nil,N:_List_Nil,H:0},S:_List_Nil,i:_v0,X:"",h:$author$project$Model$Preview});return{a:(_v0=$author$project$Main$createGame(_v0)).a,b:$elm$core$Platform$Cmd$batch(_List_fromArray([_v0.b,signalPeers]))}}function $author$project$Main$startGame(model){if((startGameSignal=model.y).b){var start=startGameSignal.a,destinations=startGameSignal.b,startReachSignal=$author$project$PeerPort$sendData(A2($author$project$PeerPort$titleReach,model.a.g,start.r)),startGameSignal=model.a.f?$author$project$PeerPort$sendData(A2($author$project$PeerPort$createMsg,"start",$elm$json$Json$Encode$object(_List_fromArray([{a:"msg",b:$elm$json$Json$Encode$string(model.a.j+" started the game")}])))):$elm$core$Platform$Cmd$none;return{a:_Utils_update(model,{R:!0,o:{A:_List_fromArray([start]),u:_List_fromArray([start]),N:destinations,H:0},h:{$:0,a:start}}),b:$elm$core$Platform$Cmd$batch(_List_fromArray([$author$project$Main$transition,startGameSignal,startReachSignal]))}}return{a:_Utils_update(model,{h:{$:5,a:"Can't start game with 0 destinations"}}),b:$elm$core$Platform$Cmd$none}}function $elm$core$Dict$values(dict){return A3($elm$core$Dict$foldr,F3(function(key,value,valueList){return A2($elm$core$List$cons,value,valueList)}),_List_Nil,dict)}function $author$project$Model$ChangeSeedWhileInPreview(a){return{$:8,a:a}}function $hecrj$html_parser$Html$Parser$Util$toVirtualDomEach(node){switch(node.$){case 1:var children=node.c;return A3($elm$html$Html$node,node.a,A2($elm$core$List$map,$hecrj$html_parser$Html$Parser$Util$toAttribute,node.b),$hecrj$html_parser$Html$Parser$Util$toVirtualDom(children));case 0:return $elm$html$Html$text(node.a);default:return $elm$html$Html$text("")}}function $author$project$Views$toolTipStyles(bodyText){return _List_fromArray([A2($elm$html$Html$Attributes$attribute,"data-bs-toggle","tooltip"),A2($elm$html$Html$Attributes$attribute,"data-bs-placement","bottom"),A2($elm$html$Html$Attributes$attribute,"data-bs-container","body"),$elm$html$Html$Attributes$title(bodyText)])}function $author$project$Views$viewPagePreviews(dests){function viewPagePreview(page){return $author$project$Helpers$singleRow(A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("container")]),A2($elm$core$List$map,$author$project$Helpers$singleRow,function(){if(page.$){var loadedPage=page.a;return _List_fromArray([A2($elm$html$Html$h5,_List_Nil,_List_fromArray([$elm$html$Html$text(loadedPage.r)])),(img=A2($elm$core$Maybe$withDefault,$elm$html$Html$text(""),A2($elm$core$Maybe$map,$author$project$Views$viewNode,loadedPage.af)),A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("previewImage")]),_List_fromArray([img]))),A2($elm$html$Html$i,_List_Nil,_List_fromArray([$elm$html$Html$text(loadedPage.ad)]))])}var img;return _List_fromArray([A2($elm$html$Html$h5,_List_Nil,_List_fromArray([$elm$html$Html$text(page.a)])),A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("spinner-border")]),_List_Nil)])}())))}var header=A2($elm$html$Html$h1,_List_Nil,_List_fromArray([$elm$html$Html$text("The Destinations")])),downArrowElement=$author$project$Helpers$singleRow($author$project$Helpers$downarrow(5));return A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("container"),A2($elm$html$Html$Attributes$style,"text-align","center")]),A2($elm$core$List$cons,header,A2($elm$core$List$intersperse,downArrowElement,A2($elm$core$List$map,viewPagePreview,dests))))}function $author$project$Views$viewPeerLocs(theView){function peerView(peer){return $author$project$Helpers$singleRow(A2($elm$html$Html$div,_List_Nil,_List_fromArray([A2($elm$html$Html$b,_List_Nil,_List_fromArray([$elm$html$Html$text(peer.j)])),A2($elm$html$Html$br,_List_Nil,_List_Nil),$elm$html$Html$text(peer.K)])))}return theView=A2($elm$core$List$intersperse,A2($elm$html$Html$hr,_List_Nil,_List_Nil),A2($elm$core$List$map,peerView,theView)),A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("container")]),theView)}function $author$project$Views$viewWelcome(descSection){function _break(num){return A2($elm$html$Html$span,_List_Nil,A2($elm$core$List$repeat,num,A2($elm$html$Html$br,_List_Nil,_List_Nil)))}var notesSection=$author$project$Helpers$singleRow(A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("m-3")]),_List_fromArray([A2($elm$html$Html$h3,_List_Nil,_List_fromArray([$elm$html$Html$text("Notes")])),A2($elm$html$Html$ul,_List_Nil,_List_fromArray([A2($elm$html$Html$li,_List_Nil,_List_fromArray([$elm$html$Html$text("This game was built with Elm and PeerJS. "),A2($elm$html$Html$a,_List_fromArray([$elm$html$Html$Attributes$class("wikilink"),$elm$html$Html$Attributes$href("https://github.com/NicolasWinsten/racer")]),_List_fromArray([$elm$html$Html$text("source code")]))])),A2($elm$html$Html$li,_List_Nil,_List_fromArray([$elm$html$Html$text("All feedback and complaints go to nicolasd DOT winsten AT gmail DOT com")]))]))]))),joinGameSection=A2($elm$html$Html$div,_List_Nil,_List_fromArray([A2($elm$html$Html$h3,_List_Nil,_List_fromArray([$elm$html$Html$text("Join")])),A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("form-floating")]),_List_fromArray([A2($elm$html$Html$input,_List_fromArray([$elm$html$Html$Attributes$id("joinid"),$elm$html$Html$Attributes$class("form-control"),$elm$html$Html$Attributes$placeholder("Join ID"),$elm$html$Html$Attributes$value(descSection.ab),$elm$html$Html$Events$onInput($author$project$Model$changeJoinId(descSection))]),_List_Nil),A2($elm$html$Html$label,_List_fromArray([$elm$html$Html$Attributes$for("joinid")]),_List_fromArray([$elm$html$Html$text("Join ID")]))])),A2($elm$html$Html$br,_List_Nil,_List_Nil),A2($elm$html$Html$button,_List_fromArray([$elm$html$Html$Events$onClick($author$project$Model$ClickedJoinOrHost({f:!1}))]),_List_fromArray([$elm$html$Html$text("Join Game")]))])),usernameInput=$elm$html$Html$div(_List_fromArray([$elm$html$Html$Attributes$class("form-floating")])),hostGameSection=A2($elm$html$Html$div,_List_Nil,_List_fromArray([A2($elm$html$Html$h3,_List_Nil,_List_fromArray([$elm$html$Html$text("Host")])),usernameInput(_List_fromArray([A2($elm$html$Html$input,_List_fromArray([$elm$html$Html$Attributes$class("form-control"),$elm$html$Html$Attributes$id("seed"),$elm$html$Html$Attributes$placeholder("Game Seed"),$elm$html$Html$Attributes$value(descSection.B),$elm$html$Html$Events$onInput($author$project$Model$changeSeed(descSection))]),_List_Nil),A2($elm$html$Html$label,_List_fromArray([$elm$html$Html$Attributes$for("seed")]),_List_fromArray([$elm$html$Html$text("Game Seed")]))])),A2($elm$html$Html$br,_List_Nil,_List_Nil),usernameInput(_List_fromArray([A2($elm$html$Html$input,_List_fromArray([$elm$html$Html$Attributes$class("form-select"),$elm$html$Html$Attributes$id("numDests"),$elm$html$Html$Attributes$type_("number"),$elm$html$Html$Attributes$value($elm$core$String$fromInt(descSection.F)),$elm$html$Html$Attributes$min("2"),$elm$html$Html$Events$onInput($author$project$Model$changeNumDestinations(descSection))]),_List_Nil),A2($elm$html$Html$label,_List_fromArray([$elm$html$Html$Attributes$for("numDests")]),_List_fromArray([$elm$html$Html$text("Number of destinations")]))])),A2($elm$html$Html$br,_List_Nil,_List_Nil),A2($elm$html$Html$button,_List_fromArray([$elm$html$Html$Events$onClick($author$project$Model$ClickedJoinOrHost({f:!0}))]),_List_fromArray([$elm$html$Html$text("Host Game")]))])),usernameInput=A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("container")]),_List_fromArray([A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("row")]),_List_fromArray([A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("col")]),_List_fromArray([A2($elm$html$Html$h3,_List_Nil,_List_fromArray([$elm$html$Html$text("Enter your username: ")]))])),A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("col-6")]),_List_fromArray([usernameInput(_List_fromArray([A2($elm$html$Html$input,_List_fromArray([$elm$html$Html$Attributes$id("username"),$elm$html$Html$Attributes$class("form-control"),$elm$html$Html$Attributes$placeholder("username"),$elm$html$Html$Attributes$value(descSection.j),$elm$html$Html$Events$onInput($author$project$Model$changeUsername(descSection))]),_List_Nil),A2($elm$html$Html$label,_List_fromArray([$elm$html$Html$Attributes$for("username")]),_List_fromArray([$elm$html$Html$text("Your username")]))]))]))]))])),descSection=$author$project$Helpers$singleRow(A2($elm$html$Html$p,_List_Nil,_List_fromArray([A2($elm$html$Html$img,_List_fromArray([$elm$html$Html$Attributes$class("m-2"),A2($elm$html$Html$Attributes$style,"float","right"),$elm$html$Html$Attributes$src("assets/wikilogo.png"),$elm$html$Html$Attributes$width(300)]),_List_Nil),A2($elm$html$Html$p,_List_Nil,_List_fromArray([$elm$html$Html$text("\r\n                              The aim of the game is to race through wikipedia while hitting all the important pages in order.\r\n                              Enter your username and either host your own game or join a friend's.\r\n                              "),_break(2),$elm$html$Html$text("\r\n                            To host your own game, pick a game seed (eg 'deadbeef' or 'pq9 83&#$hfl' or whatever you want) and specify the number of destinations you want in your game.\r\n                            "),_break(2),$elm$html$Html$text("To join a game, paste in the Join ID given by the game's host"),_break(2),$elm$html$Html$text("Once in the game, you must hit every destination in order to complete the game. Race your friends and see who is the fastest wikiracer"),_break(2),$elm$html$Html$text("You can play alone just by hosting your own game and forgetting to invite your friends"),_break(2),$elm$html$Html$text("It is also possible that you will run into issues connecting with your friends for a variety of reasons.\r\n                                If that's the case then you might just agree on a seed together and everyone host their own game")]))])));return A2($elm$html$Html$div,_List_Nil,_List_fromArray([$author$project$Views$backToMyPageLink,A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("container")]),_List_fromArray([$author$project$Helpers$singleRow(A2($elm$html$Html$h1,_List_Nil,_List_fromArray([$elm$html$Html$text("Let's Race")]))),descSection,A2($elm$html$Html$hr,_List_Nil,_List_Nil),$author$project$Helpers$singleRow(usernameInput),A2($elm$html$Html$hr,_List_Nil,_List_Nil),$author$project$Helpers$singleRow(A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("container")]),_List_fromArray([A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("row")]),_List_fromArray([A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("col")]),_List_fromArray([hostGameSection])),A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("col")]),_List_fromArray([joinGameSection]))]))]))),A2($elm$html$Html$hr,_List_Nil,_List_Nil),notesSection]))]))}function $author$project$Views$view(model){var _v0=model.h;switch(_v0.$){case 2:return $author$project$Views$viewWelcome(model.a);case 3:var withArrows=_Utils_eq(model.X,model.a.B),timeDisplay=(page=A2($elm$core$List$map,function(peer){return $author$project$Helpers$singleRow(A2($elm$html$Html$b,_List_Nil,_List_fromArray([$elm$html$Html$text(peer.f?"Host: "+peer.j:""+peer.j)])))},$elm$core$Dict$values(model.i)),A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("container border border-2 border-dark p-2")]),A2($elm$core$List$cons,$author$project$Helpers$singleRow(A2($elm$html$Html$h5,_List_Nil,_List_fromArray([$elm$html$Html$text("Other players")]))),A2($elm$core$List$cons,A2($elm$html$Html$hr,_List_Nil,_List_Nil),page)))),copyIdBox=model.a.f?A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("m-2")]),_List_fromArray([$elm$html$Html$text("Copy this game ID and send it to your friends:"),A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("d-inline-block")]),_List_fromArray([A2($elm$html$Html$input,_List_fromArray([$elm$html$Html$Attributes$id("hostid"),$elm$html$Html$Attributes$value(model.a.aI),$elm$html$Html$Attributes$readonly(!0)]),_List_Nil),A2($elm$html$Html$button,A2($elm$core$List$cons,$elm$html$Html$Attributes$class("clippybtn"),A2($elm$core$List$cons,A2($elm$html$Html$Attributes$attribute,"data-clipboard-target","#hostid"),$author$project$Views$toolTipStyles("Copy to clipboard"))),_List_fromArray([A2($elm$html$Html$img,_List_fromArray([$elm$html$Html$Attributes$src("assets/clippy.svg"),$elm$html$Html$Attributes$width(13)]),_List_Nil)]))]))])):$elm$html$Html$text(""),page=$author$project$Model$doneLoading(model.S)&&model.a.f?{a:A2($elm$html$Html$button,_List_fromArray([$elm$html$Html$Events$onClick($author$project$Model$StartGame),$elm$html$Html$Attributes$class("m-2")]),_List_fromArray([$elm$html$Html$text("Start game")])),b:A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("p-2")]),_List_fromArray([A2($elm$html$Html$input,_List_fromArray([$elm$html$Html$Attributes$placeholder("new game seed"),$elm$html$Html$Attributes$value(model.X),$elm$html$Html$Events$onInput($author$project$Model$ChangeSeedWhileInPreview)]),_List_Nil),A2($elm$html$Html$button,_List_fromArray([$elm$html$Html$Attributes$disabled(withArrows),$elm$html$Html$Events$onClick($author$project$Model$Refresh)]),_List_fromArray([$elm$html$Html$text("Refresh")]))]))}:model.a.f?{a:$elm$html$Html$text("Waiting for destinations to finish loading..."),b:$elm$html$Html$text("")}:{a:$elm$html$Html$text("Waiting for host to start game..."),b:$elm$html$Html$text("")},withArrows=page.a,page=page.b;return A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("container"),A2($elm$html$Html$Attributes$style,"text-align","center")]),_List_fromArray([A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("row")]),_List_fromArray([A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("col-4")]),_List_fromArray([$author$project$Views$viewPagePreviews(model.S)])),A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("col-5 mt-5")]),_List_fromArray([copyIdBox,page,withArrows])),A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("col-3 mt-5")]),_List_fromArray([timeDisplay]))]))]));case 0:var page=_v0.a,timeBoard=function(dest){return A2($elm$html$Html$span,A2($elm$core$List$cons,A2($elm$html$Html$Attributes$style,"padding","5px"),A2($elm$core$List$cons,A2($elm$html$Html$Attributes$style,"font-size","1.1em"),$author$project$Views$toolTipStyles(dest.ad))),_List_fromArray([$elm$html$Html$text(dest.r)]))},lengthBoard=A2($elm$core$List$cons,A2($elm$html$Html$h2,_List_fromArray([A2($elm$html$Html$Attributes$style,"display","inline")]),_List_fromArray([$elm$html$Html$text(page.r)])),A2($elm$core$List$map,timeBoard,model.o.N)),pathView=_Utils_ap(A2($elm$core$List$map,timeBoard,$elm$core$List$reverse(A3($author$project$Helpers$popBy,function($){return $.r},page,model.o.A))),lengthBoard),withArrows=A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("nav-item")]),A2($elm$core$List$intersperse,A2($author$project$Helpers$arrow,2,2),pathView)),timeDisplay=A2($elm$html$Html$h3,_List_Nil,_List_fromArray([$elm$html$Html$text($elm$core$String$fromInt(model.o.H/100|0)+"s")])),leaderboard=A2($elm$core$Dict$sizeHelp,0,model.i)?$author$project$Views$viewPeerLocs($elm$core$Dict$values(model.i)):A2($author$project$Views$viewPath,A2($elm$core$List$map,function($){return $.r},model.o.u),A2($elm$core$List$map,function($){return $.r},model.y)),timeBoard=1<$elm$core$List$length(model.o.u)?A2($elm$html$Html$button,_List_fromArray([$elm$html$Html$Attributes$class("btn btn-outline-dark"),$elm$html$Html$Events$onClick($author$project$Model$GoBack)]),_List_fromArray([$elm$html$Html$text("Go Back")])):$elm$html$Html$text(""),lengthBoard=A3($elm$html$Html$node,"nav",_List_fromArray([$elm$html$Html$Attributes$class("navbar navbar-light border-bottom border-secondary border-3 fixed-top")]),_List_fromArray([A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("container-fluid")]),_List_fromArray([withArrows,timeDisplay,timeBoard]))])),pathView=A2($elm$html$Html$button,_List_fromArray([$elm$html$Html$Attributes$class("btn btn-outline-dark m-3"),$elm$html$Html$Events$onClick($author$project$Model$GiveUp)]),_List_fromArray([$elm$html$Html$text("Give Up")])),timeBoard=A3($elm$html$Html$node,"nav",_List_fromArray([$elm$html$Html$Attributes$class("navbar invisible")]),_List_fromArray([A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("container-fluid")]),_List_fromArray([withArrows,timeDisplay,timeBoard]))])),pathView=A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("container-fluid pt-4")]),_List_fromArray([A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("row")]),_List_fromArray([A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("col-10")]),_List_fromArray([$author$project$Views$viewNode(page.ac)])),A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("col-2")]),_List_fromArray([pathView,leaderboard]))]))]));return A2($elm$html$Html$div,_List_Nil,_List_fromArray([timeBoard,lengthBoard,pathView]));case 1:return A2($elm$html$Html$h1,_List_Nil,_List_fromArray([$elm$html$Html$text("Fetching "+_v0.a+" ...")]));case 4:var playeruuid=_v0.a,leaderboard={bh:A2($elm$core$Maybe$withDefault,"",A2($elm$core$Maybe$map,function($){return $.r},$elm$core$List$head(model.o.u))),Q:!0,f:model.a.f,K:A2($elm$core$Maybe$withDefault,"",A2($elm$core$Maybe$map,function($){return $.r},$elm$core$List$head(model.o.A))),u:A2($elm$core$List$map,function($){return $.r},model.o.u),H:model.o.H,j:model.a.j,g:model.a.g},viewLink=function(title){var element=A2($elm$html$Html$a,_List_fromArray([$elm$html$Html$Attributes$class("hoverUnderline"),$elm$html$Html$Attributes$href("https://en.wikipedia.org/wiki/"+title),$elm$html$Html$Attributes$target("_blank")]),_List_fromArray([$elm$html$Html$text(title)]));return A2($elm$core$List$member,title,A2($elm$core$List$map,function($){return $.r},model.y))?A2($elm$html$Html$b,_List_Nil,_List_fromArray([element])):element},timeBoard=function(time){return time/100|0},playerList=A2($elm$core$List$cons,leaderboard,$elm$core$Dict$values(model.i)),lengthBoard=A2($elm$core$List$filter,A2($elm$core$Basics$composeR,function($){return $.Q},$elm$core$Basics$not),playerList),msg=0<$elm$core$List$length(lengthBoard)?A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("container.fluid")]),_List_fromArray([$author$project$Helpers$singleRow(A2($elm$html$Html$h3,_List_Nil,_List_fromArray([$elm$html$Html$text("unfinished players")]))),A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("row")]),A2($elm$core$List$map,viewPlayer,lengthBoard))])):$elm$html$Html$text(""),pathView=function(){var listView=A2($elm$core$List$filter,A2($elm$core$Basics$composeR,function($){return $.g},$elm$core$Basics$eq(playeruuid)),playerList);if(listView.b){var player=listView.a,listView=A2($elm$html$Html$div,_List_Nil,A2($elm$core$List$intersperse,A2($author$project$Helpers$arrow,2,1),A2($elm$core$List$map,viewLink,$elm$core$List$reverse(player.u))));return A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("container")]),_List_fromArray(player.Q?[$author$project$Helpers$singleRow(A2($elm$html$Html$h3,_List_Nil,_List_fromArray([$elm$html$Html$text(player.j+"'s path")]))),$author$project$Helpers$singleRow(listView)]:[$author$project$Helpers$singleRow(A2($elm$html$Html$h3,_List_Nil,_List_fromArray([$elm$html$Html$text(player.j+" hasn't finished yet")])))]))}return $elm$html$Html$text("Problem displaying player path")}(),gotToEnd=function(player){return _Utils_eq($elm$core$Maybe$Just(player.K),A2($elm$core$Maybe$map,function($){return $.r},$elm$core$List$head($elm$core$List$reverse(model.y))))},playersThatGaveUp=A2($elm$core$List$filter,function(p){return!gotToEnd(p)&&p.Q},playerList),playersThatGotToEnd=A2($elm$core$List$filter,gotToEnd,playerList),leaderboard=F3(function(header,f,toString){var sortedPlayersView=A2($elm$core$List$map,function(player){var stat=gotToEnd(player)?toString(f(player)):"DNE";return A2($elm$html$Html$span,_List_Nil,_List_fromArray([A2($elm$html$Html$a,_List_fromArray([$elm$html$Html$Attributes$class("hoverUnderline"),$elm$html$Html$Attributes$href("#"),$elm$html$Html$Events$onClick({$:14,a:player.g})]),_List_fromArray([$elm$html$Html$text(player.j)])),$elm$html$Html$text(" "+stat)]))},_Utils_ap(A2($elm$core$List$sortBy,f,playersThatGotToEnd),playersThatGaveUp));return A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("container border border-dark border-2 bg-light m-3 p-2"),A2($elm$html$Html$Attributes$style,"text-align","center")]),A2($elm$core$List$map,$author$project$Helpers$singleRow,A2($elm$core$List$cons,A2($elm$html$Html$h3,_List_Nil,_List_fromArray([$elm$html$Html$text(header)])),A2($elm$core$List$cons,A2($elm$html$Html$hr,_List_Nil,_List_Nil),sortedPlayersView))))}),lengthBoard=A3(leaderboard,"Path Length",A2($elm$core$Basics$composeR,function($){return $.u},$elm$core$List$length),A2($elm$core$Basics$composeR,$elm$core$Basics$add(-1),A2($elm$core$Basics$composeR,$elm$core$String$fromInt,function(l){return l+" steps"}))),timeBoard=A3(leaderboard,"Time",function($){return $.H},A2($elm$core$Basics$composeR,timeBoard,A2($elm$core$Basics$composeR,$elm$core$String$fromInt,function(t){return t+"s"})));return A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("container")]),_List_fromArray([A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("row")]),_List_fromArray([A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("col")]),_List_fromArray([timeBoard])),A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("col")]),_List_fromArray([lengthBoard]))])),A2($elm$html$Html$hr,_List_Nil,_List_Nil),$author$project$Helpers$singleRow($elm$html$Html$text("Click on a player's name to see their path")),A2($elm$html$Html$br,_List_Nil,_List_Nil),A2($elm$html$Html$br,_List_Nil,_List_Nil),$author$project$Helpers$singleRow(pathView),A2($elm$html$Html$br,_List_Nil,_List_Nil),A2($elm$html$Html$br,_List_Nil,_List_Nil),msg,A2($elm$html$Html$br,_List_Nil,_List_Nil),A2($elm$html$Html$br,_List_Nil,_List_Nil),$author$project$Helpers$singleRow(model.a.f?A2($elm$html$Html$button,_List_fromArray([$elm$html$Html$Events$onClick($author$project$Model$ClickedNewGame)]),_List_fromArray([$elm$html$Html$text("New Game")])):$elm$html$Html$text("Waiting on host to make a new game..."))]));default:msg=_v0.a;return A2($elm$html$Html$div,_List_Nil,_List_fromArray([$elm$html$Html$text("There was a problem: "),$elm$html$Html$text(msg)]))}function viewPlayer(player){return A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("col-3")]),_List_fromArray([A2($elm$html$Html$b,_List_Nil,_List_fromArray([$elm$html$Html$text(player.j)])),A2($elm$html$Html$br,_List_Nil,_List_Nil),viewLink(player.bh)]))}}var initCmd,$elm$http$Http$command=_Platform_leaf("Http"),$author$project$PageFetch$pageDecoder=(_Platform_leaf("Http"),A2($elm$json$Json$Decode$field,"parse",A3($elm$json$Json$Decode$map2,F2(function(title,html){return{aB:html,r:title}}),A2($elm$json$Json$Decode$field,"title",$elm$json$Json$Decode$string),A2($elm$json$Json$Decode$field,"text",A2($elm$json$Json$Decode$field,"*",$elm$json$Json$Decode$string))))),$elm$core$String$replace=F3(function(before,after,string){return A2($elm$core$String$join,after,A2($elm$core$String$split,before,string))}),$author$project$PageFetch$requestPage=function(fixedTitle){fixedTitle=A3($elm$core$String$replace,"&","%26",fixedTitle);return $elm$http$Http$get({bk:A2($elm$http$Http$expectJson,$elm$core$Basics$identity,$author$project$PageFetch$pageDecoder),bE:"https://still-woodland-82497.herokuapp.com/https://en.wikipedia.org/w/api.php?action=parse&prop=text&redirects=true&format=json&page="+fixedTitle})},$author$project$PageFetch$getPage=function(title){return A2($elm$core$Platform$Cmd$map,$author$project$PageFetch$content,$author$project$PageFetch$requestPage(title))},$elm$core$Array$bitMask=4294967295>>>32-$elm$core$Array$shiftStep,$elm$core$Elm$JsArray$unsafeGet=$elm$core$Array$fromListHelp,$elm$core$Array$getHelp=F3(function(shift,index,tree){for(;;){var _v0=A2($elm$core$Elm$JsArray$unsafeGet,$elm$core$Array$bitMask&index>>>shift,tree);if(_v0.$)return A2($elm$core$Elm$JsArray$unsafeGet,$elm$core$Array$bitMask&index,_v0.a);shift=shift-$elm$core$Array$shiftStep,index=index,tree=_v0.a}}),$elm$core$Array$get=F2(function(index,tail){var len=tail.a,startShift=tail.b,tree=tail.c,tail=tail.d;return index<0||-1<_Utils_cmp(index,len)?$elm$core$Maybe$Nothing:-1<_Utils_cmp(index,len>>>5<<5)?$elm$core$Maybe$Just(A2($elm$core$Elm$JsArray$unsafeGet,$elm$core$Array$bitMask&index,tail)):$elm$core$Maybe$Just(A3($elm$core$Array$getHelp,startShift,index,tree))}),$elm$core$Basics$modBy=list,$elm$core$Array$fromListHelp=F3(function(list,nodeList,nodeListSize){for(;;){var remainingItems=A2($elm$core$Elm$JsArray$initializeFromList,32,list),jsArray=remainingItems.a,remainingItems=remainingItems.b;if(_Utils_cmp($elm$core$Elm$JsArray$length(jsArray),32)<0)return A2($elm$core$Array$builderToArray,!0,{n:nodeList,k:nodeListSize,m:jsArray});list=remainingItems,nodeList=A2($elm$core$List$cons,{$:1,a:jsArray},nodeList),nodeListSize=nodeListSize+1}}),$author$project$Articles$titles=(list=_List_fromArray(["BBC","Iron_Man","MS_Dhoni","American_Revolutionary_War","Joni_Mitchell","Sharmila_Tagore","Tom_Hanks","Colosseum","The_Sound_of_Music_(film)","Ali_al-Sistani","Aishwarya_Rai_Bachchan","Pizzagate_conspiracy_theory","Mila_Kunis","Pinterest","Kendrick_Lamar","Michael_Fassbender","Yao_Ming","San_Francisco","Lin-Manuel_Miranda","Tyler_Hoechlin","Eternal_Sunshine_of_the_Spotless_Mind","Seychelles","List_of_legendary_creatures_by_type","Stonehenge","Heath_Ledger","Taliban","Ben_Affleck","COVID-19_pandemic","Robin_Williams","Rani_of_Jhansi","A","Sundar_Pichai","Nymphomaniac_(film)","Inferno_(Dante)","Zinedine_Zidane","Westworld_(TV_series)","Greek_alphabet","Seinfeld","Benjamin_Franklin","Grateful_Dead","MacGuffin","Bill_Nighy","Aaron_Burr","Taarak_Mehta_Ka_Ooltah_Chashmah","Platypus","Marlon_Brando","Truman_Capote","Zodiac_(film)","Napoleon","NCAA_Division_I_Men's_Basketball_Tournament","Lists_of_deaths_by_year","List_of_the_verified_oldest_people","The_Chronicles_of_Narnia","Saddam_Hussein","Isabella_Rossellini","Paramount_Pictures","Pomodoro_Technique","Nicole_Scherzinger","Queen's_Gambit","Amphibia_(TV_series)","Jay-Jay_Okocha","Keira_Knightley","Beauty_and_the_Beast_(2017_film)","Armenia","Wonder_Woman_1984","Rosa_Parks","Prime_Minister_of_India","Euphoria_(American_TV_series)","Sridevi","Robert_E._Lee","Michael_Richards","Frida_Kahlo","The_Devil_Wears_Prada_(film)","Doctor_Strange","Kalman_filter","Uma_Thurman","Dune_(novel)","The_Strokes","Japanese_language","Pirates_of_the_Caribbean_(film_series)","Turkish_Radio_and_Television_Corporation","Toyota","Dax_Shepard","Mahatma_Gandhi","Toto_(band)","Jimmy_Page","Salman_of_Saudi_Arabia","Fluvoxamine","Afghanistan","Gavin_Newsom","Independence_Day_(1996_film)","Wikipedia","Catherine_the_Great","Brooklyn","Lovecraft_Country_(TV_series)","Kevin_Bacon","Aristotle","Paul_Thomas_Anderson","Vincent_Cassel","Wonders_of_the_World","Kepler's_Supernova","Gene_Hackman","Jon_Bon_Jovi","British_Raj","Sol_Invictus","Communist_Party_of_India_(Marxist)","Adam_Curtis","George_Orwell","Tom_Hiddleston","Asia_Cup","Melatonin","The_Wachowskis","Chiang_Kai-shek","English_Wikipedia","Six-Day_War","Zooey_Deschanel","Jenny_McCarthy","Arvydas_Sabonis","Zach_Braff","Mongolia","Morocco","Vatican_City","Jane_Lynch","David_Thewlis","Microsoft","James_Woods","Marvel_Studios","Diana_Rigg","Brian_Dennehy","Montana","England_national_football_team","Kiss_(band)","Hema_Malini","Kentucky","Erwin_Rommel","Mary_of_Teck","Ghana","Anne_Boleyn","The_Blair_Witch_Project","The_39_Steps_(1935_film)","Knights_Templar","Maldives","Adolf_Hitler","Rod_Stewart","Prince_Edward,_Earl_of_Wessex","Brooklyn_Nine-Nine","The_Rumble_in_the_Jungle","Senate_of_Pakistan","Delphi_method","Rudolf_Hess","Wallis_Simpson","Joker_(2019_film)","List_of_programs_broadcast_by_Cartoon_Network","Superbad_(film)","Seventh-day_Adventist_Church","Martin_Luther_King_Jr.","Shingles","Ted_Kaczynski","Tallulah_Bankhead","Srinivasa_Ramanujan","Serial_killer","Ewan_McGregor","Colin_Firth","BMW","List_of_most-followed_Instagram_accounts","Batman_in_film","Jordana_Brewster","Steve_Buscemi","Andy_Serkis","R.E.M.","Mickey_Rooney","Tim_Wu","Better_Call_Saul","Indian_Rebellion_of_1857","Madonna","Mario_Draghi","Christopher_Walken","List_of_animal_sounds","Norah_Jones","The_Matrix","Plantar_fasciitis","King_Arthur","Lesley-Anne_Down","Education","Adrien_Brody","Guns_N'_Roses","Krakatoa","Strade_Bianche","Chaldean_Catholic_Church","Samurai","Adam_Lambert","Adrenochrome","Ambergris","2020–21_Premier_League","Pawn_Stars","EBay","Charlemagne","East_Germany","Daft_Punk","West_Bengal","Sia_(musician)","Cancel_culture","Mein_Kampf","Chaka_Khan","Hirohito","The_Great_British_Bake_Off","State_of_the_Union","List_of_current_United_States_governors","Lee_Harvey_Oswald","Elle_Fanning","Jimi_Hendrix","Jeffrey_Epstein","Floyd_Mayweather_Jr.","Gaslighting","Celine_Dion","Steak_and_Blowjob_Day","Great_Famine_(Ireland)","Priyanka_Chopra","Indian_Army","Cerebral_palsy","Salman_Khan","Nintendo_Switch","Neon_Genesis_Evangelion","Julia_Roberts","Ten_Commandments","Bong_Joon-ho","The_Orville","Parasite_(2019_film)","Roman_Polanski","George_VI","The_Americans","Patrice_O'Neal","Gautama_Buddha","XY_sex-determination_system","Burt_Lancaster","Entertainment","Michael_Caine","Stoat","Sandra_Bullock","Illuminati","Darren_Aronofsky","2021_storming_of_the_United_States_Capitol","Sarah_Michelle_Gellar","Martin_Luther","Bharatiya_Janata_Party","Ethanol","Tom_Jones_(singer)","Transgender","QAnon","Bobby_Fischer","Robert_Lewandowski","List_of_hobbies","Diana,_Princess_of_Wales","Oliver_Hardy","Toruń","Bucky_Barnes","Christopher_Reeve","Historical_rankings_of_presidents_of_the_United_States","Reservoir_Dogs","George_V","BTS","Art","Dustin_Hoffman","Armenian_genocide","Robert_F._Kennedy_Jr.","Die_Another_Day","KFC","Yoko_Ono","Sweden","Mesopotamia","FC_Barcelona","Subhas_Chandra_Bose","Big_Five_personality_traits","The_Lion_King","Vladimir_Putin","Fleetwood_Mac","HMS_Terror_(1813)","Aunt_Jemima","Anal_sex","Julie_Christie","George_IV","Gazprom","Seven_deadly_sins","Rheal_Cormier","Led_Zeppelin","Anders_Behring_Breivik","Renaissance","Ellen_DeGeneres","Shutter_Island_(film)","COINTELPRO","The_Truman_Show","Great_Depression","Kate_Bush","Charles_Barkley","Green_Day","Dr._Seuss","Walt_Disney","Pope_Benedict_XVI","1958_Lituya_Bay_earthquake_and_megatsunami","Joss_Whedon","List_of_cities_in_the_United_Kingdom","George_S._Patton","The_Last_of_Us","Sinaloa_Cartel","Absinthe","Britney_Spears","SpaceX_Starship","Godzilla","Kardashian_family","117th_United_States_Congress","Army_ranks_and_insignia_of_India","PewDiePie","Union_Council_of_Ministers","Python_(programming_language)","Birthstone","Yoga","Jim_Croce","WhatsApp","A.C._Milan","Astrological_sign","Gujarat","Skid_Row,_Los_Angeles","Ellie_Kemper","COVID-19_pandemic_in_the_United_States","Ted_Bundy","Arrow_(TV_series)","Walter_Cronkite","James,_Viscount_Severn","Woody_Allen","Hank_Williams","Hassanal_Bolkiah","Oxford–AstraZeneca_COVID-19_vaccine","Aquarius_(astrology)","Gene_Kelly","Steven_Gerrard","Henry_Cavill","Bhutan","World_War_II","Sean_Penn","Burt_Reynolds","Denial-of-service_attack","Raiders_of_the_Lost_Ark","Library_Genesis","Dexter_(TV_series)","Abdication_of_Edward_VIII","The_Expanse_(TV_series)","Dolly_Parton","Baby_boomers","Sharon_Stone","Saladin","Utah","The_Shape_of_Water","Greece","Cali_Cartel","Joan_of_Arc","Deaths_in_2021","Shia_Islam","Computer","Aleister_Crowley","Con_Air","Jesse_James_(entrepreneur)","Boxer_Rebellion","Endeavour_(TV_series)","Air_pollution","MacOS","Aamir_Khan","Mark_Wahlberg","List_of_poker_hands","Edinson_Cavani","Volkswagen","Marvel_Comics","Kane_Tanaka","National_Assembly_of_Pakistan","Luis_Suárez","Aries_(astrology)","Thurgood_Marshall","Alan_Tudyk","Dave_Allen_(comedian)","Maharashtra","Bing_Crosby","J._K._Rowling","Sean_Combs","Croatia","HIV/AIDS","Jojo_Rabbit","Carl_Jung","The_Oprah_Winfrey_Show","John_Mulaney","David_Duchovny","Colin_Farrell","Richard_I_of_England","List_of_political_parties_in_India","Irish_Republican_Army","Tamil_Nadu_Legislative_Assembly","Ketamine","Slender_Man","Operating_system","Adderall","German_Shepherd","Les_Misérables","Red_Hot_Chili_Peppers","John_Brown_(abolitionist)","Will_Poulter","Mindy_Kaling","Prince_Harry,_Duke_of_Sussex","Circulatory_system","European_Union","Resident_Evil","Solomon","Streisand_effect","AstraZeneca","1968_United_States_presidential_election","David_Lloyd_George","Rodney_King","Shang-Chi","Daniel_Craig","Sean_Bean","Queer","Stephen_Curry","Wes_Anderson","Ottoman_Empire","Katherine_Waterston","Kazuo_Ishiguro","Grant_Imahara","Five_Families","Peter_Sellers","Ben_Kingsley","Albania","U.S._state","Yom_Kippur_War","Twin_Peaks","Happy_Birthday_to_You","Ed_Harris","New_Girl","Grammy_Award","Doris_Day","Rabindranath_Tagore","List_of_islands_of_Greece","69_(sex_position)","CBS","Qatar","BoJack_Horseman","Silver_Linings_Playbook","Coup_d'état","Serbia","The_Monkees","Cholangiocarcinoma","Leprechaun","Glee_(TV_series)","Polyethylene_glycol","Blackbeard","William_Randolph_Hearst","Richard_Attenborough","Albert,_Prince_Consort","Weather","Manny_Pacquiao","Barbados","George_Chakiris","Malcolm_X","Wiki","Tim_Burton","Aspire_(TV_network)","The_Chronicles_of_Narnia_(film_series)","Black_Eyed_Peas","Jason_Sudeikis","Władysław_Szpilman","Superman","Naomi_Scott","Lincoln_(film)","Blade_(film)","Hong_Kong","Aretha_Franklin","Scarface_(1983_film)","Cynthia_Gibb","Jenna_Dewan","Ludwig_van_Beethoven","Lion","2021_Myanmar_protests","Mohammed_bin_Rashid_Al_Maktoum","March_6","March_7","Todd_Rundgren","Angels_&_Demons_(film)","Alibaba_Group","March_8","March_9","Alex_Ferguson","Sonic_the_Hedgehog_(film)","Francis_Ford_Coppola","Dr._Stone","Scooby-Doo_(film)","Sex_position","BlacKkKlansman","Maryland","Frozen_II","Rajya_Sabha","Les_Dawson","CARES_Act","Sex","Bible","No_Country_for_Old_Men_(film)","Romani_people","Mumbai","Tiger","Zayn_Malik","The_Beach_Boys","Deadpool_2","Wentworth_Miller","The_Undertaker","Monosodium_glutamate","Lilith","Rick_Astley","Dawn_Wells","Elizabeth_II","Patton_Oswalt","List_of_ongoing_armed_conflicts","Trent_Reznor","Amelia_Earhart","Heart_(band)","Jackie_Chan","Sci-Hub","Burger_King","Richard_Simmons","Star_Wars_(film)","Battle_of_the_Alamo","Serena_Williams","Debbie_Reynolds","Ruth_Bader_Ginsburg","André_Previn","Charli_D'Amelio","Battle_of_Waterloo","Keith_Richards","Jennifer_Connelly","Penicillin","Rob_Zombie","Anni-Frid_Lyngstad","Interstellar_(film)","New_York_(state)","Shah_Rukh_Khan","Survivor_(American_TV_series)","Peter_the_Great","Berlin_Wall","Nestlé","Kevin_Spacey","Judd_Apatow","Dakota_Fanning","Seal_(musician)","Kunal_Nayyar","Linux","Jeff_Goldblum","Normal_distribution","Mos_Def","Black_Mirror","Cristiano_Ronaldo","Lady_Jane_Grey","Kobe_Bryant","Atlético_Madrid","Christina_Aguilera","Bill_Burr","Benito_Mussolini","DreamWorks_Animation","Real_Madrid_CF","Ned_Kelly","Rottweiler","Democratic_Party_(United_States)","Jessica_Alba","Sunderland_A.F.C.","And_Then_There_Were_None","Steve_Harvey","Ted_Cruz","Aliens_(film)","Psycho_(1960_film)","Tencent","Stanley_Kubrick","Eton_College","Catherine_de'_Medici","Harrison_Ford","Orson_Welles","Battle_of_Los_Angeles","Conservative_Party_(UK)","The_Challenge_(TV_series)","Daniel_Bryan","Jonestown","Bruce_Lee","List_of_most-played_video_games_by_player_count","J._R._R._Tolkien","United_Airlines_Flight_93","Hakeem_Olajuwon","Governor_of_New_York","Ted_Kennedy","Allen_Iverson","David_(Michelangelo)","Angela_Davis","Florida","List_of_most-subscribed_YouTube_channels","Rajasthan","Canada","Michelle_Trachtenberg","State_Bank_of_India","Rosetta_Stone","Ariana_Grande","The_Carpenters","Genesis_(band)","Sanremo_Music_Festival","Laverne_Cox","Edith_Pretty","Cindy_Crawford","The_Masked_Singer_(American_TV_series)","Pitaya","Forrest_Gump","Justin_Hartley","Josef_Mengele","Karnataka","Abdullah_of_Pahang","Bebe_Rexha","Spike_Lee","Pixar","Logan_Lerman","List_of_elected_and_appointed_female_heads_of_state_and_government","2019_Indian_general_election","Baywatch","Spain","Korean_drama","James_Taylor","Marilyn_Monroe","Erin_Brockovich","Big_Little_Lies_(TV_series)","Ray_Kroc","Sherlock_Holmes","Maha_Shivaratri","Wernher_von_Braun","Princess_Beatrice","Bashar_al-Assad","Eva_Braun","Jordan_Peterson","International_Monetary_Fund","Cary_Elwes","Maslow's_hierarchy_of_needs","J._Robert_Oppenheimer","Chris_Brown","Salamander_letter","Gianni_Versace","List_of_NBA_All-Stars","Inter_Milan","Southeast_Asia","Dassault_Rafale","Borderline_personality_disorder","Depeche_Mode","Samsung","Letterkenny_(TV_series)","Taj_Mahal","Will_Arnett","Don_Quixote","Buffy_the_Vampire_Slayer","Jallianwala_Bagh_massacre","Andrew_Johnson","All_India_Trinamool_Congress","Mad_Max","Godzilla_(franchise)","Al-Qaeda","Vince_McMahon","The_Holocaust","Border_Collie","Edward_Snowden","Richard_Feynman","Alyson_Hannigan","Whoopi_Goldberg","Lithuania","Chernobyl","Rule_34","List_of_films_considered_the_worst","Fritzl_case","List_of_most-followed_TikTok_accounts","Damian_Lewis","Shahid_Khan","Greta_Thunberg","Tom_Brady","Predator_(film)","Huey_P._Newton","Animal_Farm","Star_Wars:_Episode_I_–_The_Phantom_Menace","Pete_Davidson","Morse_code","Norway","Sigourney_Weaver","Chris_Hemsworth","Eternals_(comics)","Dogecoin","Ronnie_James_Dio","Israeli–Palestinian_conflict","Fred_Armisen","Jim_Jones","Henry_V_of_England","Sean_Connery","History","George_I_of_Greece","Anthony_Fauci","Madam_C._J._Walker","14th_Dalai_Lama","Malala_Yousafzai","Peter_Tosh","Germany_national_football_team","Tata_Group","Iliad","Frank_Abagnale","ER_(TV_series)","Argentina","Belize","Kalpana_Chawla","Sun","Olivia_de_Havilland","Argo_(2012_film)","Alphabet_Inc.","The_Rolling_Stones","Walt_Disney_Animation_Studios","AC/DC","Abraham","Brian_Wilson","Christopher_Hitchens","Kylian_Mbappé","Suicide","In_Cold_Blood","Titanic","Call_of_Duty","Vikings","Mad_Men","Osman_I","Warwick_Davis","James_Spader","Taylor_Swift","Jurassic_Park_(film)","Harold_Wilson","Hawaii","Anastasia_(1997_film)","Date_Masamune","Metallica","Stoicism","Azerbaijan","PepsiCo","Tony_Hendra","Dolph_Lundgren","Snooker","Drake_(musician)","Abraham_Lincoln","4K_resolution","Australia","Die_Hard","Michael_Crichton","Prime_Video","Queen_Latifah","Iceland","Selma_to_Montgomery_marches","Winston_Churchill","UEFA_Champions_League","States_and_union_territories_of_India","List_of_countries_and_dependencies_by_population_density","Lavrentiy_Beria","Camila_Cabello","Henry_Stuart,_Lord_Darnley","Wedding_anniversary","5G","Special_Air_Service","Gary_Oldman","Seven_Wonders_of_the_Ancient_World","Fallingwater","Hiragana","Yin_and_yang","Bo_Burnham","China","Georgy_Malenkov","Sara_Ali_Khan","Calvin_Coolidge","Pride_and_Prejudice","Democratic_Republic_of_the_Congo","Miracle_on_Ice","Monty_Python","The_Mummy_(1999_film)","Mark_Cuban","Philippines","The_Expanse_(novel_series)","Alexander_the_Great","Richard_Nixon","Gwen_Stefani","Gangs_of_New_York","Bill_Paxton","Aircraft_carrier","How_to_Get_Away_with_Murder","Pelé","Battle_of_Thermopylae","The_Temptations","The_Dark_Knight_(film)","Hugh_Grant","Bob_Barker","Thierry_Henry","Rita_Ora","Salem_witch_trials","Iran","Erykah_Badu","Iraq","Jane_Goodall","Margaret_Guido","Rajiv_Gandhi","Nepal","Binomial_distribution","There's_Something_About_Mary","Peter_III_of_Russia","Adam_Levine","2026_FIFA_World_Cup","Karl_Marx","Neil_Gaiman","Romeo_and_Juliet","Robert_Redford","The_Pianist_(2002_film)","Eeny,_meeny,_miny,_moe","Moses","Jerry_Seinfeld","Twilight_(2008_film)","Fibonacci_number","Belgium","Prince_Andrew,_Duke_of_York","Robert_F._Kennedy","Hotstar","Mohamed_Al-Fayed","Shakira","Carrie-Anne_Moss","Nineteen_Eighty-Four","Socialism","Katey_Sagal","Kim's_Convenience","Operation_Paperclip","Æthelstan","Justin_Bieber","Desi_Arnaz","2021_in_video_games","Czech_Republic","List_of_ethnic_slurs","Sigmund_Freud","Anurag_Kashyap","Trailer_Park_Boys","QR_code","Michael_Gambon","Elsa_Pataky","Cock_and_ball_torture","WandaVision","Memphis_Pyramid","P._T._Barnum","Asperger_syndrome","Emperor_of_Japan","Natalie_Portman","Ronald_Reagan","Mike_Pence","Ballon_d'Or","Elon_Musk","Linkin_Park","Louis_III_of_France","Spider-Man_(2002_film)","Roger_Federer","List_of_epidemics","Stephen_Hawking","Eagles_(band)","Golden_State_Warriors","Cisgender","Davy_Crockett","Cystic_fibrosis","Community_(TV_series)","The_Silence_of_the_Lambs_(film)","IPad","Anne,_Queen_of_Great_Britain","Endometriosis","Smallville","Margaret_Tudor","Senegal","Greta_Scacchi","Cat","The_Go-Go's","Peter_O'Toole","Bryce_Dallas_Howard","Daniel_Radcliffe","J._D._Salinger","Gini_coefficient","Oxycodone","The_Favourite","Science","1883_eruption_of_Krakatoa","The_Scream","Charlie_Sheen","Joe_Biden_sexual_assault_allegation","Song_of_the_South","James_Madison","Cher","Luc_Besson","Audrey_Hepburn","The_Little_Mermaid_(1989_film)","Aileen_Wuornos","Fata_Morgana_(mirage)","Corruption_Perceptions_Index","Robert_Wadlow","Stanford_prison_experiment","The_Miz","Guillermo_del_Toro","Dick_Cheney","Anunnaki","Petra","Christian_Slater","Jehovah's_Witnesses","Paris_Hilton","Bruno_Mars","Djimon_Hounsou","Power_Rangers","Man_of_Steel_(film)","Hurrem_Sultan","Michael_Keaton","The_Who","Muhammad_Ali","J._J._Abrams","Kate_Moss","List_of_dates_for_Easter","Nuremberg_trials","HTTP_cookie","Mary_Magdalene","J-Hope","Great_Pyramid_of_Giza","Prince_(musician)","Me_Too_movement","Women's_poll_tax_repeal_movement","Wladimir_Klitschko","Roman_Empire","Peter_Fonda","Finland","Roger_Ebert","Ingrid_Bergman","Crystal_Palace_F.C.","Foo_Fighters","Raspberry_Pi","2020_Nagorno-Karabakh_war","Michael_Sheen","Steve_Martin","2020_Formula_One_World_Championship","The_Walking_Dead_(TV_series)","John_Wick","World_Trade_Organization","British_prince","Ice_Age_(franchise)","Sister_Wives","Robert_Downey_Jr.","Hans_Zimmer","Michigan","Anupam_Kher","List_of_pornographic_performers_by_decade","Bobby_Seale","The_Blue_Lagoon_(1980_film)","Christopher_Nolan","Nirvana_(band)","Pfizer–BioNTech_COVID-19_vaccine","Gemini_(astrology)","Cyprus","Alan_Alda","Sri_Lanka","The_World_to_Come","Dark_web","Nation_of_Islam","Naruhito","Pollution","Tokyo","Cory_Booker","Brazil","Elizabeth_Schuyler_Hamilton","The_Fifth_Element","The_Prestige_(film)","Geri_Halliwell","Battle_of_Midway","Shirley_MacLaine","Angela_Merkel","Schutzstaffel","Sinéad_O'Connor","Sam_Rockwell","Microsoft_Word","True_Detective","How_to_Train_Your_Dragon_(film)","Holi","Normandy_landings","Spirograph","Julius_Hoffman","George_C._Scott","List_of_UFC_champions","Non-binary_gender","Patrick_Stewart","George_II_of_Great_Britain","Soul_(2020_film)","Hamilton_(musical)","Michelle_Yeoh","National_Basketball_Association","Rain_Man","Riverdale_(2017_TV_series)","Pisces_(astrology)","Asia","Helen_Keller","DNA","Republic_of_Ireland","Mars_2020","Jimmy_Carter","Mads_Mikkelsen","RM_(rapper)","Apocalypse_Now","Pink_Floyd","David_Attenborough","Eddie_Van_Halen","Magic_Johnson","Debbie_Harry","Orlando_Bloom","Guardians_of_the_Galaxy_(film)","Lennox_Lewis","Spotlight_(film)","Wedding_of_Prince_Harry_and_Meghan_Markle","The_Hunger_Games","Bob_Marley","The_Beatles","Dune_(2021_film)","Brigham_Young","Miguel_Ángel_Félix_Gallardo","List_of_countries_by_suicide_rate","List_of_United_States_cities_by_population","Adam_and_Eve","Jet_Li","List_of_Greek_mythological_figures","David_Lynch","Warren_Beatty","Lana_Condor","John_Krasinski","Oda_Nobunaga","Toronto","Heinrich_Himmler","Billy_Joel","List_of_states_and_territories_of_the_United_States_by_population","Farrah_Fawcett","Popular_culture","Zootopia","Jim_Henson","MDMA","Seth_Green","The_Office_(American_TV_series)","Epic_Games","Apollo_11","Apollo_13","Parks_and_Recreation","Nigeria","Kevin_Kline","Roger_Lloyd-Pack","Meiji_Restoration","2022_FIFA_World_Cup_qualification","Tucker_Carlson","USB","300_(film)","Kevin_O'Leary","Red_Dragon_(2002_film)","Jack_Dorsey","Voice_of_America","King_Crimson","Christoph_Waltz","Johnson_&_Johnson","Aston_Villa_F.C.","O._J._Simpson_murder_case","Concorde","Cleopatra","Microsoft_Office","Gerard_Butler","Larry_David","The_Last_Kingdom_(TV_series)","Tiger_Woods","House_of_Hanover","Guillain–Barré_syndrome","Alan_Turing","DC_Extended_Universe","Multi-level_marketing","Manchester_City_F.C.","List_of_countries_and_dependencies_by_population","Sienna_Miller","Yellowstone_National_Park","Ashkenazi_Jews","Shivaji","Conan_O'Brien","LL_Cool_J","Ted_Turner","The_Lord_of_the_Rings_(film_series)","Sodom_and_Gomorrah","List_of_common_misconceptions","Wolverhampton_Wanderers_F.C.","Once_Upon_a_Time_in_America","American_Idol","World_War_II_casualties","Nawazuddin_Siddiqui","Rihanna","Charlie_and_the_Chocolate_Factory_(film)","Isle_of_Man","The_Runaways","Leonid_Brezhnev","Garcelle_Beauvais","Tilda_Swinton","Malta","Anthony_Hopkins","Ireland","Libertarianism","Raccoon","American_Civil_War","France","Maria_Sharapova","Metro-Goldwyn-Mayer","Historically_black_colleges_and_universities","Latter_Day_Saint_movement","Black_Panther_(film)","Bitcoin","Google_Meet","Rachel_Weisz","Reinhard_Heydrich","Lucky_Luciano","Body_mass_index","Brave_New_World","Hillary_Clinton","Ian_Hart","List_of_languages_by_number_of_native_speakers","Pineal_gland","BDSM","Volkswagen_Group","Duran_Duran","Northern_voalavo","Miyamoto_Musashi","Aurora","Ninja","Viv_Richards","Pi","Emma_Watson","Shazam!_(film)","Dark_(TV_series)","Jason_Segel","Harpo_Productions","Eternals_(film)","Star_Trek","Firefox","Kill_Bill:_Volume_1","Temple_garment","Tuberculosis","Wiccan_(character)","Taylor_series","Chicken","Mardi_Gras","Coyote","Black_Lives_Matter","The_Shining_(film)","Novak_Djokovic","American_Rescue_Plan_Act_of_2021","Mark_Hamill","Dubai","List_of_current_United_States_senators","PlayStation_4","Joan_Jett","PlayStation_5","Wright_brothers","PlayStation_2","Kareena_Kapoor","2012_(film)","MacKenzie_Scott","Mamma_Mia!_(film)","Baphomet","Dachshund","Fringe_(TV_series)","Ratchet_&_Clank","Marilyn_Manson","Mulholland_Drive_(film)","U2","Harry_Potter_and_the_Cursed_Child","Werner_Herzog","Ronaldo_(Brazilian_footballer)","Kamal_Haasan","Venus_Williams","Robert_Wagner","Maroon_5","Mitch_McConnell","Bob_Denver","Bob's_Burgers","James_Baldwin","Auschwitz_concentration_camp","Margaux_Hemingway","Cobie_Smulders","Algeria","Gigi_Hadid","PlayerUnknown's_Battlegrounds","Dave_Grohl","Harry_S._Truman","Gerald_Ford","The_Matrix_(franchise)","Euronews","Women's_suffrage","Naomi_Osaka","Jenni_Rivera","Kylie_Minogue","Kate_Hudson","Jodie_Foster","James_Cameron","Daniel_Day-Lewis","North_Korea","Internet_of_things","Texas","Virgo_(astrology)","Severe_acute_respiratory_syndrome_coronavirus_2","Ur","Henrietta_Lacks","Easter","Katie_Price","Ali_Khamenei","United_States_Navy","Attack_on_Pearl_Harbor","Basketball","Suez_Canal","Back_to_the_Future_Part_II","Futurama","Netherlands","Olga_Kurylenko","American_Horror_Story","1984_United_States_presidential_election","JavaScript","William_Henry_Harrison","Alaska","Tom_&_Jerry_(2021_film)","American_Pie_(film)","Semen","John_Cleese","Christian_Bale","Edgar_Allan_Poe","Ray_Charles","Rangers_F.C.","Multiple_sclerosis","MP3","The_Greatest_Showman","Naruto","Superman_&_Lois","Wolfgang_Amadeus_Mozart","The_Wolf_of_Wall_Street_(2013_film)","Scrubs_(TV_series)","Ragnar_Lodbrok","Orange_Is_the_New_Black","Jay-Z","Nicholas_II_of_Russia","Tony_Curtis","Nicola_Sturgeon","Nostradamus","George_W._Bush","Sammy_Davis_Jr.","David_Fincher","Katherine_Johnson","Kim_Il-sung","Andrew_Cuomo","Rose_Byrne","John_Lennon","Billie_Holiday","List_of_Star_Wars_films","Helen_Mirren","Constantine_the_Great","North_by_Northwest","Bill_Murray","Liberace","Star_Wars","Rain_(entertainer)","Ringo_Starr","Deepfake","Lloyd_Austin","Nefertiti","Clint_Eastwood","Paul_Anka","Alanis_Morissette","List_of_countries_and_dependencies_by_area","Thailand","The_Flash_(2014_TV_series)","Quentin_Tarantino","ICC_World_Test_Championship","Neil_Patrick_Harris","George_Harrison","Chrissy_Teigen","Ford_Motor_Company","Jane_Fonda","Iman_(model)","Bill_Maher","Henry_VII_of_England","Four_temperaments","Al_Pacino","Brian_May","Harold_Macmillan","Three-cushion_billiards","Howl's_Moving_Castle_(film)","Harriet_Tubman","Slavery_in_the_United_States","UEFA_Euro_2020","Family_Guy","Bill_Gates","Michael_Phelps","Christopher_Plummer","Drink","Björk","Agatha_Christie","Val_Kilmer","Rush_Limbaugh","Joseph_James_DeAngelo","Bethenny_Frankel","Dagestan","Dobermann","Culture","Mark_Kelly","Niccolò_Machiavelli","Hell's_Kitchen_(American_TV_series)","Typhoid_fever","Akon","John_F._Kennedy","Mao_Zedong","Human_penis_size","Alison_Brie","Rekha","Robert_the_Bruce","Schizophrenia","RuPaul","Buddy_Holly","Death_of_Diana,_Princess_of_Wales,_conspiracy_theories","Fantastic_Beasts_and_Where_to_Find_Them_(film)","Augustus","Meg_Ryan","Earth","Bloody_Sunday_(1972)","Newcastle_United_F.C.","Eliot_Spitzer","War_in_Donbass","The_King's_Speech","Zanzibar","Father's_Day","Kumail_Nanjiani","Lady_Gaga","Phil_Spector","Apple_Inc.","James_VI_and_I","Pythagorean_theorem","Garry_Kasparov","Lea_Michele","The_Golden_Girls","Felicity_Huffman","James_Hetfield","Darth_Vader","American_Psycho_(film)","Kevin_Hart","Denmark","Pose_(TV_series)","Occam's_razor","Harry_Houdini","Bhagat_Singh","Alicia_Keys","Paris_Saint-Germain_F.C.","Mikhail_Gorbachev","Diazepam","The_Cranberries","Poll_taxes_in_the_United_States","Stanford_University","Ngozi_Okonjo-Iweala","Full_Metal_Jacket","Tower_of_Babel","Generation","Filibuster","Genghis_Khan","Brokeback_Mountain","Pansexuality","ABBA","Microsoft_Windows","Don_Cheadle","Tina_Fey","En_passant","Harley_Quinn","Paracetamol","Syrian_civil_war","Fortnite","Suicide_Squad_(film)","Prince_George_of_Cambridge","RT_(TV_network)","Cryptocurrency","Russell_Brand","John_Lewis","Nikola_Tesla","Angela_Lansbury","Fluoxetine","Charlize_Theron","Lil_Nas_X","Provisional_Irish_Republican_Army","Pope","Cicely_Tyson","List_of_Tor_onion_services","Aziz_Ansari","Curling","Anne_Hathaway","Cthulhu","The_Exorcist_(film)","Empire_State_Building","The_Birds_(film)","J._Edgar_Hoover","Fred_Hampton","Natalie_Wood","Highlander_(film)","Nayib_Bukele","The_Hobbit","Hermann_Göring","Def_Leppard","Bipolar_disorder","Google_logo","Sons_of_Anarchy","Iron_Man_(2008_film)","Kareem_Abdul-Jabbar","List_of_tallest_people","Oprah_Winfrey","Lord_Voldemort","Julianne_Moore","Cirrhosis","Nile","Battlestar_Galactica_(2004_TV_series)","Google_Drive","Rowan_Atkinson","Italy","Ivermectin","Princess_Alice_of_the_United_Kingdom","Bill_Cosby","Fentanyl","List_of_religious_populations","Andhra_Pradesh","Multiple_myeloma","John_Wayne","Hulk_Hogan","Louis_Mountbatten,_1st_Earl_Mountbatten_of_Burma","Atherosclerosis","Academy_Award_for_Best_Actress","Spirited_Away","Kyrgyzstan","Halsey_(singer)","Ava_Gardner","East_India_Company","Exo_(group)","Charles_Edward_Stuart","Nicole_Richie","The_Star-Spangled_Banner","Muhammad","Frozen_(2013_film)","Prison_Break","Icarus","Nathuram_Godse","Soylent_Green","Gypsy_(1962_film)","Stock_market","Riz_Ahmed","The_Simpsons","Rush_Hour_(1998_film)","Eugene_Levy","The_Stormlight_Archive","Christianity_in_Iraq","IQ_classification","John_Travolta","Reserve_Bank_of_India","Nontheism","Dog","Christina_Hendricks","Crimean_War","Bodhidharma","Christopher_Columbus","Addison_Rae","Soviet–Afghan_War","Lauryn_Hill","Gay_sexual_practices","Babirusa","Henry_VIII","United_Arab_Emirates","Michelangelo","Two_and_a_Half_Men","Chevelle_(band)","Monster_Energy","Charlotte_of_Mecklenburg-Strelitz","Solange_Knowles","List_of_most_expensive_films","John_Cena","Bangalore","Jews","Chris_McCandless","Catch_Me_If_You_Can","Surströmming","99942_Apophis","The_Coca-Cola_Company","Once_Upon_a_Time_(TV_series)","Will_Smith","Jude_Law","Machine_learning","Wi-Fi","Attack_on_Titan","Bermuda_Triangle","Andrew_Jackson","Sophia_Loren","Watchmen_(film)","Walmart","Operation_Flavius","Brooke_Shields","2016_United_States_presidential_election","Charles,_Prince_of_Wales","Paramount+","Robert_Hanssen","World_War_I","Portuguese_man_o'_war","Minstrel_show","Virender_Sehwag","Lockheed_Martin_F-22_Raptor","Laika","Sagittarius_(astrology)","Aaliyah","Kerala","Richard_Burton","Mark_Rothko","Brad_Pitt","Vladimir_Lenin","Mauritius","Banana","Princess_Hours","Coco_Chanel","Hemorrhoid","Billy_Idol","Lisa_Lopes","Tennessee","Ark_of_the_Covenant","List_of_presidents_of_the_United_States","The_Terminal","Industrial_Revolution","Billy_Connolly","Brian_Cox_(actor)","Evangeline_Lilly","Ming-Na_Wen","2020–21_Liverpool_F.C._season","Unit_731","Paul_I_of_Russia","Sutton_Hoo","List_of_conspiracy_theories","James_McAvoy","Larry_Page","Human_Development_Index","Gremlins","Steve_McQueen","Dan_Levy_(Canadian_actor)","Paris","Mohammad_Reza_Pahlavi","Odin","JoJo's_Bizarre_Adventure","Windsor_Castle","Wesley_Snipes","International_Women's_Day","Costa_Rica","Ethan_Hawke","Marvin_Gaye","Calvin_Lockhart","Kazakhstan","Nancy_Pelosi","Crypto_art","List_of_largest_cities","Arrowverse","Napoleon_Dynamite","Laura_Dern","The_Seven_Deadly_Sins_(manga)","Schitt's_Creek","Lockheed_Martin_F-35_Lightning_II","Mickey_Mouse","Us_(2019_film)","Elizabeth_Taylor","Marfan_syndrome","Eurocopter_AS350_Écureuil","Robin_Hood","London","Dissolution_of_Czechoslovakia","American_Gods_(TV_series)","Indiana_Jones_and_the_Last_Crusade","List_of_footballers_with_500_or_more_goals","Marion_Cotillard","The_Handmaid's_Tale","Spectre_(2015_film)","Pharrell_Williams","Bluetooth","Dave_Bautista","Gwyneth_Paltrow","Tom_Cruise","H._P._Lovecraft","Battle_of_Stalingrad","Muhammad_Ali_Jinnah","Supernatural_(American_TV_series)","Stephen_Hillenburg","Iggy_Pop","U.S._Route_66","H._H._Holmes","Scottish_Premier_League","Shia_LaBeouf","Pol_Pot","Mr._Bean","His_Dark_Materials_(TV_series)","Toyotomi_Hideyoshi","Gmail","John_F._Kennedy_Jr.","Bruce_Springsteen","Kylie_Jenner","Portia_de_Rossi","Anglo-Saxons","Inside_Out_(2015_film)","Jill_Biden","Lost_(TV_series)","Babe_Ruth","Jason_Alexander","Diane_Kruger","Taurus_(astrology)","Joseph_P._Kennedy_Sr.","Boeing_777","Complaint_tablet_to_Ea-nasir","Pompeii","2012_United_States_presidential_election","Penélope_Cruz","Scarlet_Witch","Tenet_(film)","Sertraline","Fast_Times_at_Ridgemont_High","Holy_Roman_Empire","Academy_Award_for_Best_Picture","Boeing_787_Dreamliner","Mithun_Chakraborty","Giga_Nevada","Internet","Black_Widow_(2021_film)","Oral_sex","Leeds_United_F.C.","Eddie_Izzard","Twitter","Pat_Sajak","Women's_empowerment","Winona_Ryder","List_of_British_monarchs","Nicolas_Cage_filmography","Vernon_Jordan","Russian_alphabet","Elvis_Presley","Ranveer_Singh","Tim_Allen","John_Belushi","The_X-Files","Arrested_Development","Psoriasis","Pfizer","Rosamund_Pike","Beyoncé","Richard_Harris","Daryl_Hannah","Libra_(astrology)","Bono","Steve_Nash","Malaysia_Airlines_Flight_370","Nigger","Cocaine","One_Piece","Lemmy","The_Great_Gatsby","Prohibition_in_the_United_States","Angola","Moon","The_Church_of_Jesus_Christ_of_Latter-day_Saints","West_Ham_United_F.C.","Kishore_Kumar","Tame_Impala","Borussia_Dortmund","Joel_Osteen","George_Wallace","Mary_Shelley","Kensington_Palace","Laurel_and_Hardy","Foie_gras","The_Trial_of_the_Chicago_7","Bill_Hader","Matthew_Macfadyen","John_Landis","Grigori_Rasputin","The_Hunt_(2020_film)","Buzz_Aldrin","Isra_and_Mi'raj","Gary_Cooper","Saif_Ali_Khan","Kyrsten_Sinema","Vagina","British_royal_family","Lizzy_Caplan","Jake_Gyllenhaal","Justin_Timberlake","Cars_(film)","The_Avengers_(2012_film)","David_Dellinger","Friedrich_Nietzsche","Diverticulitis","Animal","Megalodon","Warren_G._Harding","Beauty_Revealed","Indo-European_languages","Demi_Moore","The_Walt_Disney_Company","Jurassic_Park","NBA_G_League","Amyotrophic_lateral_sclerosis","Jawaharlal_Nehru","List_of_countries_by_Human_Development_Index","Sundown_town","Microsoft_Excel","Mohammed_bin_Salman","Isla_Fisher","Fellatio","Amy_Schumer","Venezuela","Dragon_Ball","Grey's_Anatomy","Louisiana","Mughal_Empire","Bryan_Cranston","Women's_History_Month","Salvador_Dalí","Chechnya","Klaus_Barbie","Sidney_Poitier","Michael_Palin","World","Black_Swan_(film)","Kelsey_Grammer","Edge_of_Tomorrow","Hilary_Swank","Stephen_King","Plato","Jim_Brown","Equality_Act_(United_States)","Birds_of_Prey_(2020_film)","Married_at_First_Sight_(Australian_TV_series)","Wu-Tang_Clan","Impact_of_the_COVID-19_pandemic_on_education","Smallpox","Non-penetrative_sex","Jackson_Pollock","Muammar_Gaddafi","Belarus","Elizabeth_Montgomery","Sex_Pistols","A_Knight's_Tale","A._P._J._Abdul_Kalam","Unforgiven","Vietnam_War","Axolotl","Louis_Armstrong","2017_Las_Vegas_shooting","Janet_Leigh","Nick_Cave","Steam_(service)","Saturday_Night_Live","SpaceX","SWOT_analysis","Order_of_the_British_Empire","Black_Death","Mary,_Queen_of_Scots","Red_pill_and_blue_pill","The_Big_Short_(film)","Encyclopedia","C_(programming_language)","Harvey_Weinstein","Chicago","French_Bulldog","Bob_Dylan","List_of_deadliest_animals_to_humans","Larry_Bird","Cuban_Missile_Crisis","Bella_ciao","Breaking_Bad","Osama_bin_Laden","Henry_Kissinger","Billboard_Hot_100","Polyamory","Nick_Nolte","Steve_Jobs","Robert_Duvall","Roald_Dahl","DC_Universe_Animated_Original_Movies","Twitch_(service)","Jerry_Lewis","Pepsi","England","Jonah_Hill","Ironheart_(character)","Kenneth_Branagh","William_IV","Keeping_Up_with_the_Kardashians","Edward_VIII","Hagia_Sophia","Matthew_Perry","Eurovision_Song_Contest","Amitabh_Bachchan","Gamergate_controversy","Sachin_Tendulkar","Elijah_Muhammad","Mars_rover","HMS_Erebus_(1826)","Frédéric_Chopin","Usain_Bolt","Catherine,_Duchess_of_Cambridge","Islamic_State_of_Iraq_and_the_Levant","FC_Bayern_Munich","Richard_Branson","Greg_Abbott","Dragon","Timothée_Chalamet","Frankenstein","Sting_(musician)","Ridley_Scott","Top_Gun","Warren_Buffett","Thomas_Wolfe","John_Williams","List_of_countries_by_GDP_(PPP)_per_capita","Eddie_Redmayne","Eugenics","Neil_Armstrong","Down_syndrome","Nina_Simone","Janis_Joplin","10_Things_I_Hate_About_You","Assassination_of_John_F._Kennedy","Great_Wall_of_China","Java_(programming_language)","Michelle_Obama","Emily_Blunt","Julian_Assange","Stevie_Wonder","Alice_Cooper","Baháʼí_Faith","Rob_Lowe","Alan_Rickman","Lisa_Kudrow","Jayne_Mansfield","Angela_Bassett","Tasuku_Honjo","List_of_current_monarchs_of_sovereign_states","Gypsy_Rose_Lee","Soviet_Union","B._R._Ambedkar","KickassTorrents","The_Band","Demi_Lovato","Marvel_Cinematic_Universe","Keanu_Reeves","2024_United_States_presidential_election","M16_rifle","Communism","Association_football","Richard_Pryor","Yazidis","Coca-Cola","Alprazolam","Gorillaz","Al_Gore","F._Scott_Fitzgerald","Human_Sexuality","Pink_(singer)","A_Song_of_Ice_and_Fire","Ivar_the_Boneless","United_Kingdom","Liam_Neeson","The_Dark_Side_of_the_Moon","GitHub","Jason_Bateman","Abbie_Hoffman","Leprosy","Lil_Uzi_Vert","Alabama","Björn_Ironside","Good_Times","Milky_Way","Sex_Education_(TV_series)","Julia_Louis-Dreyfus","Incel","Ryan_Reynolds","Umami","Labrador_Retriever","Chuck_Schumer","Babylon","List_of_James_Bond_films","Frasier","Johnson_&_Johnson_COVID-19_vaccine","Star_Trek:_The_Next_Generation","Jefferson_Davis","Anne_of_Green_Gables","Firefly_(TV_series)","Narendra_Modi","Harpocrates","Ulysses_S._Grant","Chris_Rock","Cyndi_Lauper","Schrödinger's_cat","IKEA","Google_Classroom","Elo_rating_system","September_11_attacks","Steve_Wozniak","OnlyFans","All-Russia_State_Television_and_Radio_Broadcasting_Company","Kim_Basinger","Emily_Dickinson","Kamala_Harris","Helen_Hunt","Kim_Kardashian","Now_You_See_Me_(film)","Sojourner_(rover)","Inter_Miami_CF","Selena","The_Blacklist_(TV_series)","Diane_Keaton","Eva_Longoria","Ice-T","Ant-Man_and_the_Wasp","Franklin_D._Roosevelt","List_of_best-selling_albums","Harry_Styles","Jacqueline_Kennedy_Onassis","Berkshire_Hathaway","Rodney_Dangerfield","Kali","France_24","Virat_Kohli","Presidency_of_Joe_Biden","Washington,_D.C.","Tottenham_Hotspur_F.C.","Beagle","Grace_and_Frankie","Lockheed_SR-71_Blackbird","Boardwalk_Empire","WWE","Yahoo!","DC_Comics","Ur_of_the_Chaldees","Tesla,_Inc.","Katie_Couric","Lily_Tomlin","Quicksilver_(Marvel_Comics)","Michael_Schumacher","RoboCop","Maurice_Gibb","Cate_Blanchett","Little_Richard","The_World's_Billionaires","Nazi_Germany","Frogmore_Cottage","Space_Jam","ISO_3103","Florence_Nightingale","Catherine_Zeta-Jones","Pope_John_Paul_II","Steven_Spielberg","Dick_Van_Dyke","The_Notebook","Charles_de_Gaulle","Radiohead","Basque_language","Mel_Blanc","Angelina_Jolie","Rage_Against_the_Machine","Mohamed_Salah","Roblox","TikTok","West_Bengal_Legislative_Assembly","List_of_governors_of_New_York","Mumford_&_Sons","List_of_Disney_theatrical_animated_feature_films","Virtual_private_network","Future_(rapper)","Andrew_Yang","Costco","Katy_Perry","COVID-19_pandemic_in_the_United_Kingdom","Elton_John","Thomas_Edison","List_of_countries_by_GDP_(PPP)","Lucy_Liu","It_(2017_film)","Holodomor","Ayn_Rand","Helen_McCrory","Lok_Sabha","Ram_Nath_Kovind","Juventus_F.C.","Donald_Sutherland","Generation_Alpha","Harry_Potter","Bachelor_of_Arts","Camilla,_Duchess_of_Cornwall","Young_Avengers","Judy_Garland","Tiffany_Haddish","How_I_Met_Your_Mother","ICC_Test_Championship","Howard_Hughes","Coldplay","Ramadan","Henry_VI_of_England","50_Cent","Helicobacter_pylori","Rheumatoid_arthritis","Keystone_Pipeline","Wales","Andy_Samberg","Freemasonry","Sid_Vicious","Jamie_Chung","Phoenix_Lights","The_Notorious_B.I.G.","Denzel_Washington","Akihito","Google_Play","Bernie_Mac","My_Hero_Academia","The_Doors","Constantinople","Africa","Pablo_Picasso","Joanna_Lumley","Virginia_Woolf","Scientology","Nazi_Party","New_Deal","Lionel_Richie","Pitch_Perfect","Freyja","Albus_Dumbledore","Queen_Elizabeth_The_Queen_Mother","Hannibal_(2001_film)","Indian_Idol","Pope_Francis","Goldie_Hawn","Mary-Louise_Parker","Ozzy_Osbourne","M1_Abrams","Andorra","Jeremy_Irons","Ed_Sheeran","Armie_Hammer","Treasure_Planet","Kim_Jong-un","Provinces_and_territories_of_Canada","Janet_Jackson","Sikkim","Economy_of_India","Saudi_Arabia",'Joaquín_"El_Chapo"_Guzmán',"Second_Boer_War","Pet_Shop_Boys","James_Brown","Artificial_intelligence","Hero_Fiennes_Tiffin","Phil_McGraw","Cameron_Diaz","Steven_Seagal","Google_Earth","Scarlett_Johansson","Mel_Gibson","Ludacris","Golden_Globe_Awards","Mark_Twain","Roger_Ailes","New7Wonders_of_the_World","Spotify","Isaac_Newton","Jessica_Biel","Marcus_Rashford","List_of_best-selling_manga","Ernest_Hemingway","Yuri_Gagarin","Colombia","Uttar_Pradesh","Lynyrd_Skynyrd","Barbiturate","IP_address","Prince_Louis_of_Cambridge","New_Jersey","Ike_Turner","Northrop_Grumman_B-2_Spirit","Avril_Lavigne","James_Cromwell","2021_ICC_Men's_T20_World_Cup","Ramones","Snoop_Dogg","Little_Women","Eminem","Law_Abiding_Citizen","Fascism","Franz_Kafka","Johan_Cruyff","War","Mötley_Crüe","Satan","Joy_Division","Saint_Patrick's_Day","Mean_Girls","Earthquake","Min_Aung_Hlaing","Frank_Langella","Crips","Kate_Beckinsale","Dire_Straits","Sciatica","Tropic_Thunder","Teetotalism","Mormonism","Slipknot_(band)","Coach_Carter","Continent","Eleanor_Roosevelt","Roger_Moore","Rick_Ross","Perseverance_(rover)","Indiana_Jones_and_the_Temple_of_Doom","Nicole_Kidman","Ezra_Miller","Diego_Maradona","Ant-Man_(film)","Julie_Bowen","Jane_Austen","Zeus","Titanic_(1997_film)","David_Paterson","Creedence_Clearwater_Revival","Aurangzeb","David_Spade","Philip_Seymour_Hoffman","Guyana","Equatorial_Guinea","Bloods","Ben_Shapiro","ICC_Men's_T20_World_Cup","Execution_of_the_Romanov_family","Lauren_Bacall","Sword_Art_Online","Rooney_Mara","Ukraine","Good_Will_Hunting","Curb_Your_Enthusiasm","List_of_country_calling_codes","Nickelodeon","Breakfast_at_Tiffany's_(film)","Liza_Minnelli","System_of_a_Down","Fairchild_Republic_A-10_Thunderbolt_II","The_Hobbit_(film_series)","Jamaica","Starlink","Rajesh_Khanna","Prodigal_Son_(TV_series)","Cloverfield","The_Alchemist_(novel)","NATO","Ku_Klux_Klan","David_Tennant","Jeremy_Renner","Pamela_Anderson","Bette_Davis","Alien_(film)","Imran_Khan","NASA","Desperate_Housewives","Treaty_of_Roskilde","Miley_Cyrus","Generation_Z","Sherlock_(TV_series)","Generation_X","John_Malkovich","Taika_Waititi","Sarah_Silverman","Pablo_Escobar","Jesse_Eisenberg","Stephen_Fry","Jair_Bolsonaro","Shirley_Temple","Yemeni_Civil_War_(2014–present)","Mayim_Bialik","List_of_programs_broadcast_by_Nickelodeon","List_of_stadiums_by_capacity","IPhone","Tammy_Baldwin","Tom_Clancy","Phil_Chisnall","Dionysus","Austria","Anime","Hentai","Dwight_D._Eisenhower","Russell_Wilson","Citizen_Kane","Odisha","Neil_Young","Fukushima_Daiichi_nuclear_disaster","Cara_Delevingne","Louis_Farrakhan","Rick_James","Avatar_(2009_film)","Monarchy_of_the_United_Kingdom","Spider-Man","Bridget_Fonda","List_of_popes","Ethiopia","California_grizzly_bear","Ron_Johnson_(Wisconsin_politician)","Hanging_Gardens_of_Babylon","Brooklyn_Nets","Operation_Barbarossa","HTTP_404","Gulf_War","Doctor_of_Philosophy","Pakistan","Reddit","Michael_Douglas","Emoji","Rush_(band)","Vic_Morrow","List_of_prime_ministers_of_the_United_Kingdom","Gladiator_(2000_film)","Domantas_Sabonis","Anne_Frank","Ayaan_Hirsi_Ali","Dravida_Munnetra_Kazhagam","Frank_Lampard","Jennifer_Lopez","Bangladesh","The_Starry_Night","Quran","Alfred_Molina","Jennifer_Jason_Leigh","Mel_Brooks","Black_hole","Ingenuity_(helicopter)","Daylight_saving_time","Mount_Vesuvius","Ivanka_Trump","Grease_(film)","Ben_Stiller","Mike_Myers","Idi_Amin","California","Book_of_Enoch","Coming_to_America","Mississippi","List_of_largest_companies_by_revenue","List_of_longest-reigning_monarchs","Zsa_Zsa_Gabor","Loretta_Lynn","Rodrigo_Duterte","Jerry_Rubin","The_Lighthouse_(2019_film)","Rothschild_family","Website","Hannibal_Lecter","Akbar","Emma_(2020_film)","The_West_Wing","Woodrow_Wilson","Buddhism","Eric_Harris_and_Dylan_Klebold","Indian_Super_League","Nat_King_Cole","The_dress","Alexis_Bledel","List_of_most-liked_TikTok_videos","The_Godfather_Part_III","Blink-182","Killing_of_George_Floyd","Ava_Max","Laurence_Fishburne","Four_Horsemen_of_the_Apocalypse","Boys_Over_Flowers_(TV_series)","Oliver_Cromwell","The_Fresh_Prince_of_Bel-Air","John_Forbes_Nash_Jr.","Willem_Dafoe","Chris_Evans_(actor)","Uyghurs","Inglourious_Basterds","Labour_Party_(UK)","Jamie_Lee_Curtis","Wyoming","Nick_Offerman","Shaquille_O'Neal","Polio","Zoroastrianism","ASCII","Aerosmith","Elizabeth_Báthory","One_Flew_Over_the_Cuckoo's_Nest_(film)","India_national_cricket_team","Rome","Hells_Angels","Tomb_Raider","Windows_10","Event_Horizon_(film)","The_Wizard_of_Oz_(1939_film)","PBS","TLA+","William_Shatner","Hunter_S._Thompson","Book_of_Mormon","Suga_(rapper)","Mortal_Kombat","Shreya_Ghoshal","Sputnik_V_COVID-19_vaccine","Doordarshan","Family_of_Barack_Obama","Queen_Victoria","Sepsis","Albert_II,_Prince_of_Monaco","Jacinda_Barrett","George_Foreman","Don_Rickles","Lucifer","BBC_World_Service","Silk_Road_(marketplace)","Ella_Fitzgerald","The_Conjuring","George_Washington","West_Virginia","Life_of_Pi_(film)","Walter_Gretzky","Neil_deGrasse_Tyson","Bupropion","Millennials","Carol_Danvers","Racketeering","Midsomer_Murders","United_States_presidential_line_of_succession","Clark_Gable","2021","Human_penis","George_III","Lymphoma","Football","Mike_Krzyzewski","One_Direction","Will_Ferrell","Rachel_Dolezal","Laura_Linney","Classification_of_demons","Chess","National_Hockey_League","John_McAfee","Jean-Claude_Van_Damme","Davido","Formula_One","Fulham_F.C.","Caitlyn_Jenner","Valentina_Tereshkova","Prime_number","Money_Heist","Frank_Ocean","List_of_most-disliked_YouTube_videos","House_of_Saxe-Coburg_and_Gotha","Boris_Johnson","Human","Google","Sylvia_Plath","Bhopal_disaster","Tanzania","Suez_Crisis","Liev_Schreiber","COVID-19_pandemic_in_India","Fairuza_Balk","Suzi_Quatro","Richard_Jewell","Anna_Nicole_Smith","Sustainable_Development_Goals","Taiwan","Brie_Larson","Leonard_Cohen","Sex_and_the_City","Dawson's_Creek","Mr._Potato_Head","Lent","Dyatlov_Pass_incident","Aaron_Sorkin","Pocahontas","2020–21_United_States_network_television_schedule","Leukemia","Albert_Einstein","Aberfan_disaster","Ken_Jennings","Los_Angeles","Apocalypto","Vietnam","Matthew_Broderick","Jim_Crow_laws","Bad_Bunny","Chicago_Seven","Columbine_High_School_massacre","Nigersaurus","Princess_Margaret,_Countess_of_Snowdon","Dan_Aykroyd","Emmett_Till","Liverpool_F.C.","Bernie_Sanders","Project_MKUltra","American_Mafia","Ravi_Zacharias","National_Football_League","Jonathan_(tortoise)","Seven_(1995_film)","Alex_Jones","HBO_Max","José_Mourinho","Jeff_Bridges","Jack_Nicholson","Gout","The_Godfather","Jeremy_Lin","Vlad_the_Impaler","UEFA_Europa_League","Brian_Sicknick","J._J._Watt","White_House","The_Wheel_of_Time","Robert_Kardashian","Amy_Winehouse","Chuck_Norris","Catholic_Church","Julie_Andrews","Sexual_intercourse","Betty_White","Theresa_May","Climate_change","Pornhub","Rhodesia","Eric_Clapton","Hannibal_(TV_series)","Deep_Purple","Rob_Reiner","A_Clockwork_Orange_(film)","John_Adams","Bob_Hope","Sperm_whale","Raynaud_syndrome","Android_(operating_system)","Big_Bang","Nike,_Inc.","Pokémon_(anime)","John_Kerry","Fidel_Castro","Indiana_Jones","Magna_Carta","Alec_Baldwin","Gerd_Müller","Wil_Wheaton","Brazil_national_football_team","Leaning_Tower_of_Pisa","The_Voice_(American_TV_series)","N,N-Dimethyltryptamine","Edward_VI_of_England","Ja'far_al-Sadiq","Kaley_Cuoco","Joe_Rogan","Black_Panther_Party","Stellan_Skarsgård","Confederate_States_of_America","2022_FIFA_World_Cup","SpongeBob_SquarePants","Pride_&_Prejudice_(2005_film)","Akshay_Kumar","Mount_Rushmore","Chaos_magic","Suriname","Renée_Zellweger","Greenland","King_Kong_(2005_film)","Prince_Philip,_Duke_of_Edinburgh","Natasha_Lyonne","A*_search_algorithm","Meryl_Streep","Death_of_Adolf_Hitler","Peyton_Manning","Unsimulated_sex","Mother_Teresa","Kevin_Durant","Flipkart","Jamie_Foxx","Maine_Coon","Helen_Reddy","Freddie_Mercury","Waco_siege","John_Glenn","Romelu_Lukaku","J._Jayalalithaa","2020_Summer_Olympics","Batman_Begins","Justice_League_(film)","Oscar_Isaac","Cabinet_of_Joe_Biden","Katharine_Hepburn","Hugh_Hefner","Caste_system_in_India","1996_United_States_presidential_election","Harry_Potter_and_the_Philosopher's_Stone_(film)","Dawn_French","Toy_Story","Thanos","Kristen_Bell","Van_Halen","List_of_Marvel_Cinematic_Universe_films","Kings_of_Leon","Eva_Perón","Lisa_(rapper)","Lynda_Carter","Nephilim","Poisson_distribution","Lebanon","Manhattan_(1979_film)","Krishna","Mauritania","Stevie_Ray_Vaughan","Camera_obscura","Oasis_(band)","French_language","Elizabeth_of_York","Kathy_Bates","Thomas_Jefferson","Ashton_Kutcher","William_the_Conqueror","Harvey_Keitel","South_Africa","MAPPA_(studio)","Luxembourg","Emu_War","Ashoka","Manute_Bol","Kanye_West","Fingering_(sexual_act)","Cricket_World_Cup","Caligula","War_of_1812","The_Impossible_(2012_film)","Coronavirus","Charles_Bronson","Joan_Crawford","Dunblane_massacre","Adele","Clubhouse_(app)","27_Club","Mona_Lisa","Dances_with_Wolves","Native_Americans_in_the_United_States","M4_carbine","Frederick_Douglass","Léa_Seydoux","Jordan_Peele","Channing_Tatum","Rock_Hudson","Russia","Jamal_Khashoggi","Capricorn_(astrology)","Edward_VII","Marie_Curie","Michael_Peña","Tom_Hardy","James_Corden","Statue_of_Liberty","Thomas_Müller","Prime_Minister_of_the_United_Kingdom","Disney+","Bernard_Arnault","Zac_Efron","RuPaul's_Drag_Race","Synesthesia","Larry_King","The_Good_Place","List_of_video_games_considered_the_best","Ricky_Gervais","Margaret_Thatcher","Northern_Ireland","Indonesia","Indian_National_Congress","Video_game","Wuthering_Heights","Melanie_C","Benedict_Cumberbatch","Independence_Day_(Ghana)","Capital_punishment","The_Revenant_(2015_film)","Istanbul","Samuel_L._Jackson","Bob_Newhart","Astrology_and_the_classical_elements","Milla_Jovovich","World_Wide_Web","Jonas_Brothers","Jeff_Bezos","2019–21_ICC_World_Test_Championship","Hasselblad","Lolita","Turkey","Susan_Sarandon","Live_Aid","North_America","Isabel_Allende","Dylann_Roof","Schindler's_List","Leonard_Nimoy","Tim_Roth","Kerry_Washington","Mariel_Hemingway","Wikimedia_Foundation","Jesus","Taxi_Driver","President_of_India","Tutankhamun","Jared_Leto","Marcia_Gay_Harden","Catalytic_converter","Reese_Witherspoon","Microsoft_Teams","Frank_Bruno","Kaaba","The_Godfather_Part_II","Batman","Rickrolling","Dave_Chappelle","Neoliberalism","Astral_projection","Charles_II_of_Spain","RuPaul's_Drag_Race_UK","Bee_Gees","Facebook_Messenger","HIV","Sam_Worthington","Jennifer_Doudna","Ronda_Rousey","Kevin_Costner","Emma_Thompson","Rennie_Davis","Noah_Schnapp","David_Dobrik","Jim_Carrey","Ma_Rainey","Japan","Standard_deviation","Commodus","Gin","Rammstein","Google_Maps","Guantanamo_Bay_detention_camp","Joe_Biden","Israel_Adesanya","General_Dynamics_F-16_Fighting_Falcon","Django_Unchained","Bruce_Willis","Blade_Runner","Dassault_Aviation","Spice_Girls","Charles_I_of_England","Salò,_or_the_120_Days_of_Sodom","List_of_countries_by_foreign-exchange_reserves","Rajkummar_Rao","Grand_Theft_Auto","Candace_Owens","Skyfall","Banksy","List_of_theological_demons","Lana_Del_Rey","2018_FIFA_World_Cup","List_of_Harry_Potter_cast_members","Monica_Bellucci","Bill_de_Blasio","Captain_America","Sylvester_Stallone","Mansa_Musa","Casablanca_(film)","Celts","Coeliac_disease","24_(TV_series)","Manga","List_of_TCP_and_UDP_port_numbers","North_Sentinel_Island","Intermittent_fasting","James_Franco","The_Bachelor_(American_TV_series)","Tupac_Shakur","Los_Angeles_Lakers","Lisa_Murkowski","Van_Morrison","James_Earl_Jones","Michael_Jordan","Harry_Potter_(film_series)","Rupert_Everett","Sanfilippo_syndrome","Suleiman_the_Magnificent","Nicolas_Sarkozy","Heaven's_Gate_(religious_group)","Crohn's_disease","Blood_type","Yul_Brynner","Pete_Buttigieg","Arsenal_F.C.","Nasdaq","Islam","Anjelica_Huston","Nikolaj_Coster-Waldau","Blue_whale","Minimum_wage_in_the_United_States","Scooby-Doo","State_of_Palestine","92nd_Academy_Awards","Ken_Jeong","Al_Jazeera","Helena_Bonham_Carter","Tsar_Bomba","Oklahoma_City_bombing","Ides_of_March","World's_Strongest_Man","Ice_Cube","Tokugawa_Ieyasu","Brandon_Lee","7_March_Speech_of_Bangabandhu","Goodfellas","Back_to_the_Future","The_Big_Lebowski","Constitutional_monarchy","Cougar","Millie_Bobby_Brown","Rafael_Caro_Quintero","Skathi_(moon)","Lyndon_B._Johnson","Bernese_Mountain_Dog","Howard_Stern","Cuba","Leonardo_da_Vinci","Che_Guevara","Eddie_Murphy","Non-fungible_token","Email","Malcolm_McDowell","The_Legend_of_Zelda","LVMH","Andrea_Bocelli","CoronaVac","Grimes_(musician)","Discord_(software)","Javier_Bardem","Kama_Sutra","La_Liga","Lupus","MF_Doom","John_Legend","Equal_Rights_Amendment","Lou_Reed","List_of_tallest_buildings","New_York_City","Mr._&_Mrs._Smith_(2005_film)","Manchester_United_F.C.","Evan_Rachel_Wood","Rotten_Tomatoes","Marco_Pierre_White","The_Last_of_Us_Part_II","Magnum,_P.I.","Linda_Ronstadt","Jack_Lemmon","James_Dean","Lionel_Messi","Paradise_Lost","Rockwell_B-1_Lancer","Rogue_One","Russell_Crowe","Chris_Martin","Eli_Cohen","Treaty_of_Versailles","Chris_Pratt","Journey_(band)","Assertiveness","List_of_Money_Heist_episodes","Marie_Antoinette","IMDb","Mary_I_of_England","Ralph_Fiennes","Humphrey_Bogart","David_Schwimmer","The_Terminator","Feminism","Paul_Simon","List_of_best-selling_music_artists","Alexandra_Hedison","George_Michael","Dominican_Republic","Falklands_War","Johnny_Carson","Mount_Everest","Barack_Obama","Joker_(character)","Diana_Ross","List_of_Disney+_original_programming","Paul_McCartney","Eurovision_Song_Contest_2021","Brian_Jones","Tokugawa_shogunate","Korean_War","Cowboy_Bebop","Rocky","The_Matrix_Resurrections","Alexandria_Ocasio-Cortez","For_All_Mankind_(TV_series)","Moon_Knight","Tom_Felton","Michael_Somare","Jessica_Chastain","Saint_Peter","Rupert_Grint","Labyrinth_(1986_film)","Chris_Tucker","Battle_of_Culloden","Harvard_University","Evan_Peters","Jessica_Lange","Turing_test","Charles_Bronson_(prisoner)","Dwayne_Johnson","Iron_Maiden","Sidney_Crosby","Tim_Berners-Lee","Blade_Runner_2049","Antonio_Banderas","Gone_Girl_(film)","The_Martian_(film)","X-Men_(film_series)","Minecraft","Zachary_Levi","Pig","List_of_European_Cup_and_UEFA_Champions_League_finals","Pierre-Emerick_Aubameyang","John_D._Rockefeller","Don_Ameche","Inception","Mansoor_Ali_Khan_Pataudi","Olivia_Newton-John","Killer_whale","Democracy_Index","Alexander_Hamilton","Academy_Award_for_Best_Actor","Deutsche_Welle","Assam","Trainspotting_(film)","McDonald's","Jared_Harris","Benicio_del_Toro","List_of_highest_mountains_on_Earth","Haile_Selassie","Thor_(film)","Facebook,_Inc.","Melissa_McCarthy","Parkinson's_disease","Casino_Royale_(2006_film)","Volleyball","Supergirl_(TV_series)","English_language","Royal_Navy","Jerry_Lee_Lewis","Maggie_Smith","Billie_Jean_King","Commonwealth_of_Nations","TLC_(group)","Karl_Malone","Riven_Rock,_Montecito","Guy_Pearce","George_Soros","Selena_Gomez","Ada_Lovelace","Christopher_Lee","LeBron_James","Aung_San_Suu_Kyi","Constitution_of_India","Indian_Premier_League","Chris_Cornell","Married..._with_Children","Adidas","2008_United_States_presidential_election","2014_FIFA_World_Cup","William_Shakespeare","Ajith_Kumar","International_Phonetic_Alphabet","Coronavirus_disease_2019","O._J._Simpson","Burgess_Meredith","Grace_Jones","Mercury_(planet)","Dharmendra","Mexico","Queen_(band)","Tim_Daly","Oscar_Pistorius","United_Nations","British_nobility","Lance_Armstrong","Charlie_Chaplin","Badminton","2010_FIFA_World_Cup","Bradley_Cooper","Mahabharata","Lindsay_Lohan","Kirk_Douglas","Alex_Trebek","Anthony_Eden","Jimmy_Fallon","White_people","Ronaldinho","Prince_Henry,_Duke_of_Gloucester","Kate_Spade","Jennifer_Lawrence","Craig_Ferguson","Henry_II_of_England","Studio_Ghibli","Kevin_Smith","The_Three_Stooges","Moneyball_(film)","Grand_Slam_(tennis)","Henry_Fonda","Jyotirlinga","Fantastic_Four_(2015_film)","Seppuku","Gone_with_the_Wind_(film)","2011_Tōhoku_earthquake_and_tsunami","Manhattan","Prometheus_(2012_film)","Fundamental_rights_in_India","Fahrenheit_451","Prince_George,_Duke_of_Kent","Josh_Hawley","The_Intouchables","Bon_Jovi","Al_Capone","Justin_Trudeau","Hedy_Lamarr","Madagascar","Coen_brothers","Brandy_Norwood","Pulp_Fiction","Poland","Layne_Staley","Joan_Cusack","Jim_Morrison","Hip_hop_music","Netflix","Mediacorp","Loki","Fred_Rogers","Enrique_Iglesias","Monica_Rambeau","The_Real_World_(TV_series)","Jane_Seymour","List_of_Bollywood_films_of_2020","Paul_Newman","Suicide_methods","Invictus_(film)","Caucasian_race","List_of_Bollywood_films_of_2021","Peter_Jackson","Dennis_Hopper","12_Years_a_Slave_(film)","Joseph_Stalin","Cellulitis","4chan","George_Lucas","Gloria_Steinem","Will.i.am","The_Lord_of_the_Rings","Rita_Hayworth","George_Clooney","Jennifer_Aniston","Mother's_Day","Alice_in_Chains","2000_United_States_presidential_election","Bundesliga","Aladdin_(2019_film)","List_of_Star_Trek_films_and_television_series","Carl_Sagan","R._Kelly","Joseph_Goebbels","1992_United_States_presidential_election","Vikings_(2013_TV_series)","2004_Indian_Ocean_earthquake_and_tsunami","Al_Franken","123Movies","Stan_Laurel","Shrek","Martin_Freeman","Wilhelm_II,_German_Emperor","List_of_states_and_territories_of_the_United_States","Tyrannosaurus","Dikembe_Mutombo","Emmanuel_Macron","Fast_&_Furious","Arnold_Schwarzenegger","Mars","Chelsea_F.C.","Rudy_Giuliani","List_of_countries_by_GDP_(nominal)","Cunnilingus","Allison_Stokke","Benzodiazepine","Leonardo_DiCaprio","Rudyard_Kipling","Academy_Awards","Logan_Paul","Grover_Cleveland","Johnny_Cash","Madhuri_Dixit","The_Wire","List_of_films_considered_the_best","Shiva","Intelligence_quotient","The_Departed","Steve_Irwin","Henry_Ford","Bear_Grylls","The_French_Dispatch","House_of_Windsor","Golden_ratio","Nancy_Sinatra","Cricket","Julius_Caesar","House_(TV_series)","Capybara","Paul_Williams_(songwriter)","Puerto_Rico","Cast_Away","Jeanne_Calment","The_Princess_Bride_(film)","Fran_Lebowitz","George_R._R._Martin","Ziggurat_of_Ur","Tracy_Chapman","Forest_Whitaker","Rohit_Sharma","Uyghur_genocide","Prince_Edward,_Duke_of_Kent","Avengers_(comics)","Starbucks","List_of_cities_in_India_by_population","José_Rizal","The_Little_Mermaid_(upcoming_film)","Kristin_Chenoweth","List_of_musical_symbols","Laura_Prepon","Ethereum","Morgan_Freeman","Critics'_Choice_Movie_Awards","Ron_DeSantis","Dunkirk_(2017_film)","Harry_Belafonte","Fifty_Shades_of_Grey_(film)","List_of_amendments_to_the_United_States_Constitution","Janet_Yellen","Chronostasis","Fyre_Festival","James_Bond","Mariana_Trench","Member_states_of_the_Commonwealth_of_Nations","Mandy_Patinkin","Lamborghini","Oswald_Mosley","Commonwealth_Day","Burqa","Tommy_Lee","NCIS_(TV_series)","Steely_Dan","M*A*S*H_(TV_series)","Paul_Hogan","Armand_Duplantis","Michael_B._Jordan","Milgram_experiment","Lucille_Ball","Golden_Retriever","Pornography","Google_Scholar","Hulkling","Glenn_Close","Monaco","Boy_George","Dr._Dre","Ugly_Betty","Legion_(TV_series)","President_of_the_United_States","Dean_Martin","Hacksaw_Ridge","The_Troubles","Judi_Dench","Saint_Patrick","Starship_Troopers_(film)","The_Suicide_Squad_(film)","Emilio_Estevez","List_of_programmes_broadcast_by_StarPlus","William_Wallace","Rollo","Lewis_Hamilton","Variance","Statue_of_Unity","British_Empire","Viggo_Mortensen","Northwest_Passage","Kosovo","Tommy_Wiseau","Kristen_Wiig","Atlanta","Chico_Marx","Game_of_Thrones","Alfred_Hitchcock","Google_Docs","Cole_Sprouse","Zodiac","Scorpio_(astrology)","Vaccine","Adam_Brody","Eric_Stonestreet","Jimmy_Kimmel","The_Cat_in_the_Hat","Ratatouille_(film)","Intersex","McDonnell_Douglas_F-15_Eagle","Nicki_Minaj","Anne,_Princess_Royal","Gisele_Bündchen","Cambodia","Nintendo","Gilmore_Girls","Fibromyalgia","The_Incredible_Hulk_(film)","Syria","Looney_Tunes","Famke_Janssen","Sunny_Deol","Impostor_syndrome","French_Revolution","RNA_vaccine","Eric_Rudolph","Vivien_Leigh","James_Harden","Hinduism","Vulva","Bahrain","Triangle_Shirtwaist_Factory_fire","Darkseid","Paul_Giamatti","Eyes_Wide_Shut","Flo_Rida","Cain_and_Abel","Vincent_van_Gogh","Louis_C.K.","Myers–Briggs_Type_Indicator","Google_Chrome","2021_in_film","South_Korea","Requiem_for_a_Dream","List_of_most-viewed_YouTube_videos","Mithali_Raj","The_Ipcress_File_(film)","Saw_(franchise)","Solar_System","Peppa_Pig","Jean-Michel_Basquiat","Dylan_O'Brien","Anderson_Cooper","List_of_Netflix_original_programming","Wonder_Woman_(2017_film)","OSI_model","Swastika","Bulgaria","Backstreet_Boys","Lupita_Nyong'o","Georgia_Guidestones","Selma_Blair","Republican_Party_(United_States)","Nelson_Mandela","Scottish_Premiership","Michael_Jackson","Xi_Jinping","Neanderthal","Jupiter","Mike_Tyson","Noam_Chomsky","2019_United_Kingdom_general_election","Descendants_of_the_Sun","New_Zealand","Israel","Barbra_Streisand","The_Many_Saints_of_Newark","Cardi_B","Carole_King","Andy_Warhol","John_McCain","Sino-Indian_War","Malaysia","Martin_Scorsese","Ultimate_Fighting_Championship","Omar_Sy","The_Last_Supper_(Leonardo)","Gandhi_(film)","James_II_of_England","The_Good,_the_Bad_and_the_Ugly","Matthew_Shepard","Kate_Winslet","Warner_Bros.","Carol_Burnett","Mount_Etna","George_H._W._Bush","Operation_Northwoods","The_Grand_Budapest_Hotel","Sam_Taylor-Johnson","Georgia_(country)","Gordon_B._Hinckley","Apartheid","AK-47","Cat_Stevens","Charlton_Heston","Ketogenic_diet","Isaac_Asimov","Mercedes-Benz","Grace_Kelly","Inuit","Periodic_table","Scotland","The_Witcher","Magneto_(Marvel_Comics)","Eiffel_Tower","Frank_Sinatra","Google_Translate","Miles_Davis","Simon_Pegg","Peter_Gabriel","Watergate_scandal","Richard_Gere","Dyslexia","To_Kill_a_Mockingbird","List_of_metropolitan_statistical_areas","PayPal","Wayne_Brady","Gal_Gadot","Ron_Howard","RuPaul's_Drag_Race_Down_Under","Battle_of_the_Bulge","Final_Fantasy","Matt_Damon","Herbert_Hoover","Naomi_Watts","Mormons","Monica_Lewinsky","Empire_of_the_Sun_(film)","Phoebe_Waller-Bridge","1989_Tiananmen_Square_protests","Ohio","Opossum","Caroline_Kennedy","Quantum_computing","ZZ_Top","XXX_(2002_film)","Vice_President_of_the_United_States","Vasa_(ship)","Ian_McKellen","Spanish_flu","Portugal","Brown_bear","Edward_I_of_England","Benjamin_Netanyahu","Apep","Mark_Ruffalo","America_Ferrera","Fyodor_Dostoevsky","Bigfoot","India","93rd_Academy_Awards","Sandra_Day_O'Connor","Zhang_Ziyi","Rajneesh","Charles_II_of_England","Joseph_Smith","Germany","Moldavite","P._V._Sindhu","Casey_Affleck","George_I_of_Great_Britain","Burj_Khalifa","Byzantine_Empire","Amanda_Gorman","Beowulf","Stockholm_syndrome","A_Beautiful_Mind_(film)","The_Mamas_&_the_Papas","Average_human_height_by_country","Māori_people","Richard_III_of_England","John_Lithgow","Saint_Petersburg","Martin_Sheen","Valerie_Bertinelli","Mick_Jagger","Iraq_War","Dalai_Lama","Roy_Orbison","Tom_and_Jerry","Switzerland","Tina_Turner","Amazon_(company)","Louis_XIV","The_Dark_Knight_Rises","Kelly_Clarkson","The_Sopranos","Eastern_Time_Zone","Courtney_Love","Patrick_J._Kennedy","Polymerase_chain_reaction","Proud_Boys","The_Invisible_Man_(2020_film)","Mark_Zuckerberg","Phil_Collins","Strawberry","2021_Myanmar_coup_d'état","Dennis_Rodman","The_Marvelous_Mrs._Maisel","Nikita_Khrushchev","Europe","Legality_of_cannabis_by_U.S._jurisdiction","Chernobyl_disaster","Adolf_Eichmann","Wonder_Woman","Call_Me_by_Your_Name_(film)","David","Meghan,_Duchess_of_Sussex","Arnab_Goswami","Alicia_Vikander","Comfort_women","Billie_Eilish","David_Bowie","Rebecca_Romijn","Blockchain","The_Pirate_Bay","South_Park","Sudden_arrhythmic_death_syndrome","Jaggi_Vasudev","Zack_Snyder's_Justice_League","Area_51","Thomas_Sowell","Bunny_Wailer","Fargo_(TV_series)","FIFA_World_Cup","Alfred_the_Great","Modern_Family","Hrithik_Roshan","God_of_War_(franchise)","Gilligan's_Island","Terence_Stamp","Christianity","Indian_Air_Force","Doctor_Who","Wilt_Chamberlain","Matt_Dillon","Mitt_Romney","Chappelle's_Show","Leviathan","Paula_Abdul","Cary_Grant","Braveheart","Jada_Pinkett_Smith","Pokémon_(video_game_series)","Planet_of_the_Apes","Mark_Thatcher","Type_A_and_Type_B_personality_theory","Pokémon","John_Bonham","The_Big_Bang_Theory","Friends","Gemma_Chan","Errol_Flynn","Martha_Stewart","Pulmonary_embolism","Saving_Private_Ryan","Olivia_Wilde","New_Kids_on_the_Block","OPEC","Moonlight_(2016_film)","Martin_Lawrence","S&P_500","Donald_Trump","Edward_Norton","Royal_Households_of_the_United_Kingdom","Eurofighter_Typhoon","Carom_billiards","Prince_Michael_of_Kent","Sarah_Jessica_Parker","The_Matrix_Reloaded","Francisco_Franco","Telegram_(software)","Rwandan_genocide","David_Niven","2004_United_States_presidential_election","Evil_eye","Khmer_Rouge","Yemen","Danny_DeVito","James_Stewart","Syd_Barrett","Gabapentin","Doctor_Strange_(2016_film)","List_of_countries_by_GDP_(nominal)_per_capita","Crispin_Glover","List_of_national_parks_of_the_United_States","Vin_Diesel","Gross_domestic_product","Longest_word_in_English","Missouri","Elizabeth_I","Celtic_F.C.","Coco_(2017_film)","Elizabeth_Banks","Kamala_Khan","The_Social_Network","Magnus_Carlsen","Google_Forms","Mirage","Nero","Tuskegee_Syphilis_Study","Brunei","William_H._Macy","Operation_Market_Garden","Rashtriya_Swayamsevak_Sangh","Dunning–Kruger_effect","Jon_Voight","Myanmar","Atomic_bombings_of_Hiroshima_and_Nagasaki","Franklin's_lost_expedition","Carrara_marble","The_Lion_King_(2019_film)","Mariah_Carey","Masturbation","Sleep_paralysis","Canadian_Broadcasting_Corporation","Susan_B._Anthony","Yugoslavia","Homeland_(TV_series)","List_of_highest-grossing_films","Polycystic_ovary_syndrome","Brexit","Ship_of_Theseus","United_States_Senate","Andrew_Garfield","Ruby_Ridge","Band_of_Brothers_(miniseries)","Jimmy_Floyd_Hasselbaink","Fran_Drescher","Josephine_Baker","Katrina_Kaif","Lobotomy","Dua_Lipa","Zoom_Video_Communications","Zamfara_kidnapping","Mohanlal","Prince_Richard,_Duke_of_Gloucester","Gene_Simmons","Cold_War","Venus","Democracy","Eduardo_Saverin","Talking_Heads","Instagram","Death_of_Diana,_Princess_of_Wales","Singapore","2020_in_film","Narcissism","Melania_Trump","Zendaya","Ian_Holm","Jack_the_Ripper","Green_Book_(film)","Romania","Boeing_B-52_Stratofortress","Benedict_Arnold","Qigong","Hayao_Miyazaki","List_of_best-selling_books","David_Beckham","Space_Shuttle_Challenger_disaster","Sacha_Baron_Cohen","Black_Sabbath","Archangel","Rose_McGowan","EFL_Championship","2020_United_States_presidential_election","Adobe_Photoshop","Adam_Sandler","Francis_Crozier","List_of_female_billionaires","Robert_Plant","Felicity_Jones","Onward_(film)","Waylon_Jennings","United_States","Nora_Fatehi","Charles_Manson","United_States_House_of_Representatives","Tsunami","Vanessa_Redgrave","Mario_Cuomo","LGBT","YouTube","Sengoku_period","Alan_Arkin","Final_Fantasy_VII","List_of_highest-grossing_Indian_films","One-Punch_Man","Machu_Picchu","Starship_development_history","Everton_F.C.","Prince_of_Wales","Bhagavad_Gita","Red_Dead_Redemption_2","Lucifer_(TV_series)","Cultural_Revolution","Nigel_Farage","Blackpink","Idris_Elba","International_Men's_Day","Hank_Azaria","China_Global_Television_Network","The_Catcher_in_the_Rye","List_of_most_expensive_paintings","Theodore_Roosevelt","Emma_Stone","NATO_phonetic_alphabet","Borat","Fight_Club","Sade_(singer)","Scandal_(TV_series)","Hulu","Israel_Kamakawiwoʻole","Julia_Child","Robert_Pattinson","Daniel_Dae_Kim","List_of_ATP_number_1_ranked_singles_tennis_players","Alcubierre_drive","List_of_best-selling_video_games","CRISPR","Francis_II_of_France","Serie_A","Komodo_dragon","M._Night_Shyamalan","American_Dad!","Ready_Player_One_(film)","Gregory_Peck","Amish","Lord's_Prayer","Shania_Twain","Rabies","David_Cameron","Bill_Clinton","HTML","Amal_Clooney","Sharon_Osbourne","Indian_Space_Research_Organisation","Johnny_Depp","Zlatan_Ibrahimović","Demographics_of_the_United_States","Jackie_Robinson","Tramadol","Facebook","Hugo_Weaving","Hungary","Robert_De_Niro","Prince_William,_Duke_of_Cambridge","Tom_Petty","Diarrhea","Beastie_Boys","Octopus","Trevor_Noah","Spud_Webb","Nicolas_Cage","International_Space_Station","Tom_Hayden","Outlook.com","Ruhollah_Khomeini","Premier_League","Carrie_Fisher","List_of_Indian_states_and_union_territories_by_GDP","Egypt","Kombucha","Frank_Zappa","Gorr_the_God_Butcher","Catherine_of_Aragon","Octavia_E._Butler","John_Franklin","Swami_Vivekananda","A_Fish_Called_Wanda","Graham_Norton","Saina_Nehwal","Zero_Dark_Thirty","Indira_Gandhi","Ivy_League","John_Quincy_Adams","List_of_English_monarchs","Ciara","This_Is_Spinal_Tap","Moby-Dick","James_Gunn","Cloud_computing","Marcus_Aurelius","Bosnia_and_Herzegovina","Valhalla","Oscar_Wilde","Sam_Cooke","Shinee","Rupert_Murdoch","Toy_Story_4"])).b?A3($elm$core$Array$fromListHelp,list,_List_Nil,0):$elm$core$Array$empty,$author$project$Helpers$randomTitle=A2($elm$random$Random$map,function(seed){return A2($elm$core$Maybe$withDefault,"Kevin_Bacon",A2($elm$core$Array$get,A2($elm$core$Basics$modBy,$elm$core$Array$length($author$project$Articles$titles),seed),$author$project$Articles$titles))},A2($elm$random$Random$int,0,$elm$core$Array$length($author$project$Articles$titles))),$author$project$Helpers$getDestinations=F2(function(title,seed){if(title){var _v2=title,lastSeed=function(newSeed){var _v0=A2($elm$random$Random$step,$author$project$Helpers$randomTitle,newSeed),newSeed=_v0.b;return{a:A3($elm$core$String$replace,"_"," ",_v0.a),b:newSeed}}(seed),title=lastSeed.a,_v2=A2($author$project$Helpers$getDestinations,_v2-1,lastSeed.b),lastSeed=_v2.b;return{a:A2($elm$core$List$cons,title,_v2.a),b:lastSeed}}return{a:_List_Nil,b:seed}}),$author$project$Model$NoOp={$:15},$author$project$Main$goBackToTop=A2($elm$core$Task$perform,function(_v0){return $author$project$Model$NoOp},A2(exports,0,0)),$author$project$Main$makeToast=_Platform_outgoingPort("makeToast",$elm$json$Json$Encode$string),$elm$core$Platform$Cmd$none=$elm$core$Platform$Cmd$batch(_List_Nil),$elm$json$Json$Encode$object=function(pairs){return A3($elm$core$List$foldl,F2(function(_v0,obj){return A3(_Json_addField,_v0.a,_v0.b,obj)}),{},pairs)},$author$project$PeerPort$createMsg=function(header){return function(value){return $elm$json$Json$Encode$object(_List_fromArray([{a:header,b:value}]))}},$elm$json$Json$Encode$int=_Json_wrap,$author$project$PeerPort$seedInfo=F2(function(num,seed){return A2($author$project$PeerPort$createMsg,"seedInfo",$elm$json$Json$Encode$object(_List_fromArray([{a:"numTitles",b:$elm$json$Json$Encode$int(num)},{a:"seed",b:$elm$json$Json$Encode$string(seed)}])))}),$author$project$PeerPort$sendData=_Platform_outgoingPort("sendData",$elm$core$Basics$identity),$elm$core$String$foldl=$elm$html$Html$Attributes$boolProperty,$author$project$Model$doneLoading=F2(function(isOkay,list){return!A2($elm$core$List$any,A2($elm$core$Basics$composeL,$elm$core$Basics$not,isOkay),list)})(function(dest){return 1===dest.$}),$author$project$Model$emptyPeer={bh:"",Q:!1,f:!1,K:"",u:_List_Nil,H:0,j:"",g:0},$elm$core$List$filter=F2(function(isGood,list){return A3($elm$core$List$foldr,F2(function(x,xs){return isGood(x)?A2($elm$core$List$cons,x,xs):xs}),_List_Nil,list)}),$elm$json$Json$Encode$list=F2(function(func,entries){return A3($elm$core$List$foldl,function(func){return F2(function(entry,array){return array.push(func(entry)),array})}(func),[],entries)}),$author$project$PeerPort$gameFinish=F3(function(uuid,path,time){return A2($author$project$PeerPort$createMsg,"finish",$elm$json$Json$Encode$object(_List_fromArray([{a:"uuid",b:$elm$json$Json$Encode$int(uuid)},{a:"path",b:A2($elm$json$Json$Encode$list,$elm$json$Json$Encode$string,path)},{a:"time",b:$elm$json$Json$Encode$int(time)}])))}),$elm$json$Json$Encode$bool=_Json_wrap,$author$project$PeerPort$gameInfo=F2(function(uuid,encodeInfo){function encodePeer(peer){return $elm$json$Json$Encode$object(_List_fromArray([{a:"uuid",b:$elm$json$Json$Encode$int(peer.g)},{a:"username",b:$elm$json$Json$Encode$string(peer.j)},{a:"isHost",b:$elm$json$Json$Encode$bool(peer.f)},{a:"finished",b:$elm$json$Json$Encode$bool(peer.Q)},{a:"lastDest",b:$elm$json$Json$Encode$string(peer.K)}]))}encodeInfo=$elm$json$Json$Encode$object(_List_fromArray([{a:"seed",b:$elm$json$Json$Encode$string(encodeInfo.a_)},{a:"numDestinations",b:$elm$json$Json$Encode$int(encodeInfo.F)},{a:"peers",b:A2($elm$json$Json$Encode$list,encodePeer,encodeInfo.i)},{a:"started",b:$elm$json$Json$Encode$bool(encodeInfo.by)}]));return A2($author$project$PeerPort$createMsg,"gameInfo",$elm$json$Json$Encode$object(_List_fromArray([{a:"uuid",b:$elm$json$Json$Encode$int(uuid)},{a:"info",b:encodeInfo}])))}),$author$project$Model$GotPage=F2(function(a,b){return{$:0,a:a,b:b}}),$author$project$PeerPort$initPeer=_Platform_outgoingPort("initPeer",function($){return $elm$json$Json$Encode$object(_List_fromArray([{a:"connectId",b:$elm$json$Json$Encode$string($.bf)},{a:"isHost",b:$elm$json$Json$Encode$bool($.f)},{a:"username",b:$elm$json$Json$Encode$string($.j)},{a:"uuid",b:$elm$json$Json$Encode$int($.g)}]))}),$elm$core$Maybe$map=F2(function(f,maybe){return maybe.$?$elm$core$Maybe$Nothing:$elm$core$Maybe$Just(f(maybe.a))}),$author$project$PeerPort$peerConnect=F2(function(username,uuid){return A2($author$project$PeerPort$createMsg,"peerConnect",$elm$json$Json$Encode$object(_List_fromArray([{a:"uuid",b:$elm$json$Json$Encode$int(uuid)},{a:"username",b:$elm$json$Json$Encode$string(username)}])))}),$author$project$Helpers$popBy=F3(function(f,_this,xs){if(xs.b){var thebunch=xs,xs=thebunch.b;return _Utils_eq(f(thebunch.a),f(_this))?xs:thebunch}return _List_Nil}),$author$project$Model$replaceWithLoaded=F2(function(dest,loadingDests){if(loadingDests.b){if(loadingDests.a.$)return A2($elm$core$List$cons,loadingDests.a,A2($author$project$Model$replaceWithLoaded,dest,rest=loadingDests.b));var title=loadingDests.a.a,rest=loadingDests.b;return _Utils_eq(dest.r,title)?A2($elm$core$List$cons,{$:1,a:dest},rest):A2($elm$core$List$cons,{$:0,a:title},A2($author$project$Model$replaceWithLoaded,dest,rest))}return _List_Nil}),$elm$core$Dict$map=F2(function(func,dict){if(-2===dict.$)return $elm$core$Dict$RBEmpty_elm_builtin;var key=dict.b,left=dict.d,right=dict.e;return A5($elm$core$Dict$RBNode_elm_builtin,dict.a,key,A2(func,key,dict.c),A2($elm$core$Dict$map,func,left),A2($elm$core$Dict$map,func,right))}),$author$project$PeerPort$titleReach=F2(function(uuid,title){return A2($author$project$PeerPort$createMsg,"titleReach",$elm$json$Json$Encode$object(_List_fromArray([{a:"uuid",b:$elm$json$Json$Encode$int(uuid)},{a:"title",b:$elm$json$Json$Encode$string(title)}])))}),$author$project$Main$transition=$elm$core$Platform$Cmd$batch(_List_fromArray([$author$project$Main$activateTooltips,$author$project$Main$goBackToTop])),$elm$core$String$trim=function(str){return str.trim()},exports=F2(function(msg,model){switch(msg.$){case 7:return{a:_Utils_update(model,{a:options=msg.a}),b:$elm$core$Platform$Cmd$none};case 8:return{a:_Utils_update(model,{X:seed=msg.a}),b:$elm$core$Platform$Cmd$none};case 5:return $author$project$Main$startGame(model);case 1:if(msg.b.$)return{a:_Utils_update(model,{h:{$:5,a:"Ran into issue getting description for "+(title=msg.a)}}),b:$elm$core$Platform$Cmd$none};var dest=A2($author$project$Model$replaceWithLoaded,rest=msg.b.a,model.S),restOfDests=(allDestsLoaded=$author$project$Model$doneLoading(dest))?$author$project$Model$extractLoadedDestinations(dest):model.y,newModel=_Utils_update(model,{y:restOfDests,S:dest});return model.R&&allDestsLoaded?$author$project$Main$startGame(newModel):{a:newModel,b:$elm$core$Platform$Cmd$none};case 0:if(msg.b.$)return{a:_Utils_update(model,{h:{$:5,a:"Http error while fetching "+(title=msg.a)}}),b:$elm$core$Platform$Cmd$none};var rest=msg.b.a,newOptions=model.o,currentPage=$author$project$PeerPort$sendData(A2($author$project$PeerPort$titleReach,model.a.g,rest.r)),newGameState=A2($elm$core$List$cons,rest,model.o.u),signalGameFinished=$author$project$PeerPort$sendData(A3($author$project$PeerPort$gameFinish,model.a.g,A2($elm$core$List$map,function($){return $.r},newGameState),newOptions.H)),restOfDests=newOptions.N;if(restOfDests.b){dest=restOfDests.a,restOfDests=restOfDests.b,newGameState=_Utils_eq(rest.r,dest.r)?_Utils_update(newOptions,{A:A2($elm$core$List$cons,dest,newOptions.A),u:newGameState,N:restOfDests}):_Utils_update(newOptions,{u:newGameState});return _Utils_eq(rest.r,dest.r)&&!restOfDests.b?{a:_Utils_update(model,{o:newGameState,h:{$:4,a:model.a.g}}),b:$elm$core$Platform$Cmd$batch(_List_fromArray([signalGameFinished,currentPage,$author$project$Main$transition]))}:{a:_Utils_update(model,{o:newGameState,h:{$:0,a:rest}}),b:$elm$core$Platform$Cmd$batch(_List_fromArray([currentPage,$author$project$Main$transition]))}}return{a:_Utils_update(model,{h:{$:5,a:"Why are we out of destinations?"}}),b:$elm$core$Platform$Cmd$none};case 2:return{a:_Utils_update(model,{h:{$:1,a:title=msg.a}}),b:function(title){return A2($elm$core$Platform$Cmd$map,$author$project$Model$GotPage(title),$author$project$PageFetch$getPage(title))}(title)};case 9:rest=(newOptions=model.o).u;if(rest.b&&rest.b.b){var currentPage=rest.a,rest=rest.b,flag=rest.a,rest=rest.b;if(_Utils_eq($elm$core$List$head(newOptions.u),$elm$core$List$head(newOptions.A))){var _v4=_Utils_update(newOptions,{A:A3($author$project$Helpers$popBy,function($){return $.r},currentPage,newOptions.A),u:A2($elm$core$List$cons,flag,rest),N:A2($elm$core$List$cons,currentPage,newOptions.N)});return{a:_Utils_update(model,{o:_v4,h:{$:0,a:flag}}),b:$author$project$Main$transition}}return{a:_Utils_update(model,{o:_Utils_update(newOptions,{u:A2($elm$core$List$cons,flag,rest)}),h:{$:0,a:flag}}),b:$author$project$Main$transition}}return{a:model,b:$elm$core$Platform$Cmd$none};case 10:_v4=_Utils_update(newOptions=model.o,{H:newOptions.H+1});return{a:_Utils_update(model,{o:_v4}),b:$elm$core$Platform$Cmd$none};case 15:return{a:model,b:$elm$core$Platform$Cmd$none};case 4:if(_Utils_eq(model.X,model.a.B))return{a:model,b:$elm$core$Platform$Cmd$none};newModel=_Utils_update(model,{a:_Utils_update(options=model.a,{B:model.X})});return $author$project$Main$createGame(newModel);case 3:flag=msg.a;if($elm$core$String$isEmpty(model.a.j))return{a:model,b:$author$project$Main$makeToast("You must give a username!")};if(!flag.f&&$elm$core$String$isEmpty(model.a.ab))return{a:model,b:$author$project$Main$makeToast("You have to provide the host's game ID to join their game")};var newOptions=_Utils_update(model.a,{f:flag.f}),peerMsg=$author$project$PeerPort$initPeer({bf:model.a.ab,f:flag.f,j:model.a.j,g:model.a.g}),_v4=$author$project$Main$createGame(model),cmd=_v4.b;return flag.f?{a:_Utils_update(_v4.a,{a:_Utils_update(newOptions,{ab:""})}),b:$elm$core$Platform$Cmd$batch(_List_fromArray([cmd,peerMsg]))}:{a:_Utils_update(model,{a:newOptions}),b:$elm$core$Platform$Cmd$batch(_List_fromArray([peerMsg,$author$project$Main$makeToast("attempting to join game...")]))};case 12:var uuid=msg.a;return{a:_Utils_update(model,{a:_Utils_update(options=model.a,{g:uuid})}),b:$elm$core$Platform$Cmd$none};case 14:return{a:_Utils_update(model,{h:{$:4,a:uuid=msg.a}}),b:$elm$core$Platform$Cmd$none};case 6:peerMsg=$author$project$PeerPort$sendData(A3($author$project$PeerPort$gameFinish,model.a.g,A2($elm$core$List$map,function($){return $.r},model.o.u),model.o.H));return{a:_Utils_update(model,{h:{$:4,a:model.a.g}}),b:peerMsg};case 13:return model.a.f?$author$project$Main$reset(model):{a:_Utils_update(model,{h:{$:5,a:"Only hosts can start new games"}}),b:$elm$core$Platform$Cmd$none};default:switch(msg.a.$){case 8:return{a:_Utils_update(model,{a:_Utils_update(options=model.a,{aI:msg.a.a})}),b:$elm$core$Platform$Cmd$none};case 0:var _v5=msg.a,_v6=_v5.a,seed=_v5.b;return model.a.f?{a:_Utils_update(model,{h:{$:5,a:"Host shouldnt be receiving seedinfo"}}),b:$elm$core$Platform$Cmd$none}:$author$project$Main$createGame(_Utils_update(model,{a:_Utils_update(options=model.a,{F:_v6,B:seed})}));case 1:var toast=msg.a.a;if(model.a.f)return{a:_Utils_update(model,{h:{$:5,a:"Host shouldnt be receiving game start message"}}),b:$elm$core$Platform$Cmd$none};var toast=""===(_v6=$elm$core$String$trim(toast))?$elm$core$Platform$Cmd$none:$author$project$Main$makeToast(_v6),allDestsLoaded=$author$project$Model$doneLoading(model.S),_v6=$author$project$Main$startGame(model),newModel=_v6.a,cmd=_v6.b;return allDestsLoaded?{a:newModel,b:$elm$core$Platform$Cmd$batch(_List_fromArray([cmd,toast]))}:{a:_Utils_update(model,{R:!0}),b:toast};case 2:var info=msg.a,uuid=info.a,title=info.b,peerUsername=A2($elm$core$Dict$get,uuid,model.i);if(peerUsername.$)return{a:model,b:$elm$core$Platform$Cmd$none};var updatedPeer=_Utils_update(peer=peerUsername.a,{bh:title,K:A2($elm$core$List$member,title,A2($elm$core$List$map,function($){return $.r},model.y))?title:peer.K}),toast=A2($elm$core$List$member,title,A2($elm$core$List$map,function($){return $.r},model.y))?$author$project$Main$makeToast(peer.j+" found "+title):$elm$core$Platform$Cmd$none,info=model.a.f?$author$project$PeerPort$sendData(A2($author$project$PeerPort$titleReach,uuid,title)):$elm$core$Platform$Cmd$none;return{a:_Utils_update(model,{i:A3($elm$core$Dict$insert,uuid,updatedPeer,model.i)}),b:$elm$core$Platform$Cmd$batch(_List_fromArray([info,toast]))};case 4:var peeruuid=msg.a,peerUsername=peeruuid.a,_v14=peeruuid.b;if(_Utils_eq(_v14,model.a.g))return{a:model,b:$elm$core$Platform$Cmd$none};var toast=$author$project$Main$makeToast(peerUsername+" joined the game"),_v16=A2($elm$core$List$map,function(peer){return{Q:peer.Q,f:!1,K:peer.K,j:peer.j,g:peer.g}},$elm$core$Dict$values(model.i)),peeruuid=(peeruuid=A2($elm$core$Maybe$withDefault,"",A2($elm$core$Maybe$map,function($){return $.r},$elm$core$List$head(model.o.A))),A2($elm$core$List$cons,{Q:4===model.h.$,f:!0,K:peeruuid,j:model.a.j,g:model.a.g},_v16)),_v16=_Utils_update($author$project$Model$emptyPeer,{j:peerUsername,g:_v14}),_v16=A3($elm$core$Dict$insert,_v14,_v16,model.i),peeruuid=$author$project$PeerPort$sendData(A2($author$project$PeerPort$gameInfo,_v14,{F:model.a.F,i:peeruuid,a_:model.a.B,by:model.R})),info=$author$project$PeerPort$sendData(A2($author$project$PeerPort$peerConnect,peerUsername,_v14));return model.a.f?{a:_Utils_update(model,{i:_v16}),b:$elm$core$Platform$Cmd$batch(_List_fromArray([peeruuid,info,toast]))}:{a:_Utils_update(model,{i:_v16}),b:toast};case 5:toast=(path=A2($elm$core$Maybe$map,function($){return $.j},A2($elm$core$Dict$get,uuid=msg.a.a,model.i))).$?$elm$core$Platform$Cmd$none:$author$project$Main$makeToast(path.a+" has left the game"),_v16=A2($elm$core$Dict$remove,uuid,model.i),info=model.a.f?$author$project$PeerPort$sendData(function(uuid){return A2($author$project$PeerPort$createMsg,"peerDisconnect",$elm$json$Json$Encode$object(_List_fromArray([{a:"uuid",b:$elm$json$Json$Encode$int(uuid)}])))}(uuid)):$elm$core$Platform$Cmd$none;return{a:_Utils_update(model,{i:_v16}),b:$elm$core$Platform$Cmd$batch(_List_fromArray([info,toast]))};case 6:var time=msg.a.a;return model.a.f?{a:_Utils_update(model,{h:{$:5,a:"Host connection was lost... but you're the host"}}),b:$elm$core$Platform$Cmd$none}:{a:_Utils_update($author$project$Main$initialModel,{a:options=model.a}),b:$author$project$Main$makeToast(time)};case 3:_v14=msg.a,peeruuid=_v14.a,path=_v14.b,time=_v14.c,_v14=A2($elm$core$Dict$get,peeruuid,model.i);if(_v14.$)return{a:model,b:$elm$core$Platform$Cmd$none};var peer,updatedPeer=_Utils_update(peer=_v14.a,{Q:!0,u:path,H:time}),toast=_Utils_eq(A2($elm$core$Basics$composeR,$elm$core$List$reverse,A2($elm$core$Basics$composeR,$elm$core$List$head,$elm$core$Maybe$map(function($){return $.r})))(model.y),$elm$core$List$head(path))?peer.j+" has finished!":peer.j+" gave up",info=model.a.f?$author$project$PeerPort$sendData(A3($author$project$PeerPort$gameFinish,peeruuid,path,time)):$elm$core$Platform$Cmd$none;return{a:_Utils_update(model,{i:A3($elm$core$Dict$insert,peeruuid,updatedPeer,model.i)}),b:$elm$core$Platform$Cmd$batch(_List_fromArray([info,$author$project$Main$makeToast(toast)]))};case 10:info=msg.a,uuid=info.a,info=info.b;if(_Utils_eq(uuid,model.a.g)){var options=model.a,_v17=A2($elm$core$Basics$composeR,$elm$core$List$filter(function($){return $.f}),A2($elm$core$Basics$composeR,$elm$core$List$head,A2($elm$core$Basics$composeR,$elm$core$Maybe$map(function($){return $.j}),$elm$core$Maybe$withDefault("???"))))(info.i),_v16=A3($elm$core$List$foldl,F2(function(peer,dict){return A3($elm$core$Dict$insert,peer.g,_Utils_update($author$project$Model$emptyPeer,{Q:peer.Q,f:peer.f,K:peer.K,j:peer.j,g:peer.g}),dict)}),model.i,info.i),_v16=$author$project$Main$createGame(_Utils_update(model,{a:_Utils_update(options,{F:info.F,B:info.a_}),i:_v16}));return{a:newModel=_v16.a,b:$elm$core$Platform$Cmd$batch(_List_fromArray([cmd=_v16.b,$author$project$Main$makeToast("You joined "+_v17+"'s game")]))}}return{a:model,b:$elm$core$Platform$Cmd$none};case 11:return{a:_Utils_update(model,{h:{$:5,a:msg.a.a}}),b:$elm$core$Platform$Cmd$none};case 9:return{a:model,b:$author$project$Main$makeToast(msg.a.a)};default:toast=$author$project$Main$makeToast(msg.a.a),_v17=$author$project$Main$reset(model);return{a:newModel=_v17.a,b:$elm$core$Platform$Cmd$batch(_List_fromArray([cmd=_v17.b,toast]))}}}var path}),$author$project$Model$ClickedNewGame={$:13},$author$project$Model$GiveUp={$:6},$author$project$Model$GoBack={$:9},$author$project$Model$Refresh={$:4},$author$project$Model$StartGame={$:5},$elm$html$Html$a=_VirtualDom_node("a"),$elm$html$Html$Attributes$attribute=F2(function(key,value){return A2(_VirtualDom_attribute,function(key){return/^(on|formAction$)/i.test(key)?"data-"+key:key}(key),_VirtualDom_noJavaScriptOrHtmlUri(value))}),$elm$html$Html$b=_VirtualDom_node("b"),$elm$html$Html$br=_VirtualDom_node("br"),$elm$html$Html$button=_VirtualDom_node("button"),$elm$html$Html$Attributes$stringProperty=F2(function(key,string){return A2(_VirtualDom_property,key,$elm$json$Json$Encode$string(string))}),$elm$html$Html$Attributes$class=$elm$html$Html$Attributes$stringProperty("className"),$elm$html$Html$Attributes$boolProperty=F2(function(key,bool){return A2(_VirtualDom_property,key,$elm$json$Json$Encode$bool(bool))}),$elm$html$Html$Attributes$disabled=$elm$html$Html$Attributes$boolProperty("disabled"),$elm$html$Html$div=_VirtualDom_node("div"),$elm$html$Html$h1=_VirtualDom_node("h1"),$elm$html$Html$h2=_VirtualDom_node("h2"),$elm$html$Html$h3=_VirtualDom_node("h3"),$elm$html$Html$h5=_VirtualDom_node("h5"),$elm$html$Html$hr=_VirtualDom_node("hr"),$elm$html$Html$Attributes$href=function(value){return A2($elm$html$Html$Attributes$stringProperty,"href",/^javascript:/i.test((value=value).replace(/\s/g,""))?"":value)},$elm$html$Html$Attributes$id=$elm$html$Html$Attributes$stringProperty("id"),$elm$html$Html$img=_VirtualDom_node("img"),$elm$html$Html$input=_VirtualDom_node("input"),$elm$core$List$intersperse=F2(function(sep,xs){if(xs.b){var tl=xs.b;return A2($elm$core$List$cons,xs.a,A3($elm$core$List$foldr,F2(function(x,rest){return A2($elm$core$List$cons,sep,A2($elm$core$List$cons,x,rest))}),_List_Nil,tl))}return _List_Nil}),$elm$html$Html$node=function(tag){return _VirtualDom_node(function(tag){return"script"==tag?"p":tag}(tag))},$elm$virtual_dom$VirtualDom$on=_VirtualDom_on,$elm$html$Html$Events$on=F2(function(event,decoder){return A2($elm$virtual_dom$VirtualDom$on,event,{$:0,a:decoder})}),$elm$html$Html$Events$onClick=function(msg){return A2($elm$html$Html$Events$on,"click",$elm$json$Json$Decode$succeed(msg))},$elm$html$Html$Events$alwaysStop=function(x){return{a:x,b:!0}},$elm$html$Html$Events$stopPropagationOn=F2(function(event,decoder){return A2($elm$virtual_dom$VirtualDom$on,event,{$:1,a:decoder})}),$elm$html$Html$Events$targetValue=A2(F2(function(fields,decoder){return A3($elm$core$List$foldr,$elm$json$Json$Decode$field,decoder,fields)}),_List_fromArray(["target","value"]),$elm$json$Json$Decode$string),$elm$html$Html$Events$onInput=function(tagger){return A2($elm$html$Html$Events$stopPropagationOn,"input",A2($elm$json$Json$Decode$map,$elm$html$Html$Events$alwaysStop,A2($elm$json$Json$Decode$map,tagger,$elm$html$Html$Events$targetValue)))},$elm$html$Html$Attributes$placeholder=$elm$html$Html$Attributes$stringProperty("placeholder"),$elm$html$Html$Attributes$readonly=$elm$html$Html$Attributes$boolProperty("readOnly"),$elm$core$String$fromFloat=_String_fromNumber,$elm$html$Html$text=_VirtualDom_text,$hecrj$html_parser$Html$Parser$Util$toAttribute=function(_v0){return A2($elm$html$Html$Attributes$attribute,_v0.a,_v0.b)},$hecrj$html_parser$Html$Parser$Util$toVirtualDom=function(nodes){return A2($elm$core$List$map,$hecrj$html_parser$Html$Parser$Util$toVirtualDomEach,nodes)},$author$project$Helpers$arrow=F2(function(dir,_v1){var em=$elm$core$String$fromFloat(_v1)+"em",_v1=function(){switch(dir){case 0:return"&uarr;";case 1:return"&darr;";default:return"&rarr;"}}(),_v1=$hecrj$html_parser$Html$Parser$run('<span style="font-size: '+em+';">'+_v1+"</span>");if(_v1.$)return $elm$html$Html$text("");_v1=$elm$core$List$head($hecrj$html_parser$Html$Parser$Util$toVirtualDom(_v1.a));return _v1.$?$elm$html$Html$text(""):_v1.a}),$author$project$Helpers$singleRow=function(element){return A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("row")]),_List_fromArray([A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("col")]),_List_fromArray([element]))]))},$elm$core$Dict$sizeHelp=F2(function(n,dict){for(;;){if(-2===dict.$)return n;var left=dict.d;n=A2($elm$core$Dict$sizeHelp,n+1,dict.e),dict=left}}),$elm$core$List$sortBy=_List_sortBy,$elm$html$Html$span=_VirtualDom_node("span"),$elm$html$Html$Attributes$src=function(url){return A2($elm$html$Html$Attributes$stringProperty,"src",_VirtualDom_noJavaScriptOrHtmlUri(url))},$elm$html$Html$Attributes$style=_VirtualDom_style,$elm$html$Html$Attributes$target=$elm$html$Html$Attributes$stringProperty("target"),$elm$html$Html$Attributes$title=$elm$html$Html$Attributes$stringProperty("title"),$elm$html$Html$Attributes$value=$elm$html$Html$Attributes$stringProperty("value"),$author$project$Model$ClickedLink=function(a){return{$:2,a:a}},$author$project$Helpers$attr2htmlattr=function(_v0){return A2($elm$html$Html$Attributes$attribute,_v0.a,_v0.b)},$author$project$Views$viewNode=function(n){_v0$9:for(;;)switch(n.$){case 1:switch(n.a){case"a":if(n.b.b&&"href"===n.b.a.a){var _v1=n.b,_v13=_v1.a.b,attrs=_v1.b,children=n.c;return A2($elm$html$Html$a,A2($elm$core$String$startsWith,"/wiki/File:",_v13)||A2($elm$core$String$startsWith,"/wiki/Special:",_v13)?A2($elm$core$List$map,$author$project$Helpers$attr2htmlattr,attrs):A2($elm$core$String$startsWith,"/wiki/",_v13)?_List_fromArray([$elm$html$Html$Attributes$class("wikilink"),$elm$html$Html$Attributes$href("#"),$elm$html$Html$Events$onClick($author$project$Model$ClickedLink(A2($elm$core$String$dropLeft,6,_v13)))]):A2($elm$core$String$startsWith,"#",_v13)?A2($elm$core$List$cons,$elm$html$Html$Attributes$href(_v13),A2($elm$core$List$map,$author$project$Helpers$attr2htmlattr,attrs)):A2($elm$core$List$map,$author$project$Helpers$attr2htmlattr,attrs),A2($elm$core$List$map,$author$project$Views$viewNode,children))}return A2($elm$html$Html$span,_List_Nil,A2($elm$core$List$map,$author$project$Views$viewNode,children=n.c));case"form":return $elm$html$Html$text("");case"span":if(!n.b.b)break _v0$9;switch(n.b.a.a){case"id":if("coordinates"!==n.b.a.b)break _v0$9;return $elm$html$Html$text("");case"class":switch(n.b.a.b){case"mw-editsection":return $elm$html$Html$text("");case"toctext":var _v11=n.b,attrs=_v11.b,children=n.c;return A2($elm$html$Html$span,A2($elm$core$List$cons,A2($elm$html$Html$Attributes$style,"text-decoration","underline"),A2($elm$core$List$map,$author$project$Helpers$attr2htmlattr,attrs)),A2($elm$core$List$map,$author$project$Views$viewNode,children));default:if(n.b.b.b&&"id"===n.b.b.a.a){var headline=n.b,clazz=headline.a.b,_v11=headline.b,headline=_v11.a.b,attrs=_v11.b,children=n.c;return A2($elm$core$String$contains,"mw-headline",clazz)&&A2($elm$core$List$member,headline,_List_fromArray(["Citations","Notes","References"]))?$elm$html$Html$text(""):A2($elm$html$Html$span,A2($elm$core$List$cons,$elm$html$Html$Attributes$class(clazz),A2($elm$core$List$cons,$elm$html$Html$Attributes$id(headline),A2($elm$core$List$map,$author$project$Helpers$attr2htmlattr,attrs))),A2($elm$core$List$map,$author$project$Views$viewNode,children))}break _v0$9}default:break _v0$9}case"div":if(n.b.b&&"class"===n.b.a.a){_v13=n.b,clazz=_v13.a.b,attrs=_v13.b,children=n.c;return A2($elm$core$String$startsWith,"reflist",clazz)?$elm$html$Html$text(""):A2($elm$html$Html$div,A2($elm$core$List$cons,$elm$html$Html$Attributes$class(clazz),A2($elm$core$List$map,$author$project$Helpers$attr2htmlattr,attrs)),A2($elm$core$List$map,$author$project$Views$viewNode,children))}break _v0$9;case"sup":return $elm$html$Html$text("");default:break _v0$9}case 0:return $elm$html$Html$text(n.a);default:return $elm$html$Html$text("")}children=n.c;return A3($elm$html$Html$node,n.a,A2($elm$core$List$map,$author$project$Helpers$attr2htmlattr,n.b),A2($elm$core$List$map,$author$project$Views$viewNode,children))},$author$project$Helpers$downarrow=function(size){return A2($author$project$Helpers$arrow,1,size)},$elm$html$Html$i=_VirtualDom_node("i"),$author$project$Views$viewPath=F2(function(withArrows,dests){withArrows=A2($elm$core$List$map,function(title){return A2($elm$core$List$member,title,dests)?A2($elm$html$Html$b,_List_Nil,_List_fromArray([$elm$html$Html$text(title)])):$elm$html$Html$text(title)},withArrows),withArrows=A2($elm$core$List$intersperse,A2($author$project$Helpers$arrow,0,2),withArrows);return A2($elm$html$Html$div,_List_fromArray([$elm$html$Html$Attributes$class("container")]),A2($elm$core$List$map,$author$project$Helpers$singleRow,withArrows))}),$author$project$Model$ClickedJoinOrHost=function(a){return{$:3,a:a}},$author$project$Views$backToMyPageLink=A2(_VirtualDom_node("small"),_List_fromArray([$elm$html$Html$Attributes$class("d-inline m-2"),A2($elm$html$Html$Attributes$style,"float","right")]),_List_fromArray([$elm$html$Html$text("go back to "),A2($elm$html$Html$a,_List_fromArray([$elm$html$Html$Attributes$class("wikilink"),$elm$html$Html$Attributes$href("https://nicolaswinsten.github.io")]),_List_fromArray([$elm$html$Html$text("my page")]))])),$author$project$Model$changeJoinId=F2(function(options,id){return{$:7,a:_Utils_update(options,{ab:id})}}),$author$project$Model$changeNumDestinations=F2(function(options,num){return{$:7,a:_Utils_update(options,{F:A2($elm$core$Maybe$withDefault,3,$elm$core$String$toInt(num))})}}),$author$project$Model$changeSeed=F2(function(options,seedStr){return{$:7,a:_Utils_update(options,{B:seedStr})}}),$author$project$Model$changeUsername=F2(function(options,string){return{$:7,a:_Utils_update(options,{j:string})}}),$elm$html$Html$Attributes$for=$elm$html$Html$Attributes$stringProperty("htmlFor"),$elm$html$Html$label=_VirtualDom_node("label"),$elm$html$Html$li=_VirtualDom_node("li"),$elm$html$Html$Attributes$min=$elm$html$Html$Attributes$stringProperty("min"),$elm$html$Html$p=_VirtualDom_node("p"),$elm$core$List$repeatHelp=F3(function(result,n,value){for(;;){if(n<=0)return result;result=A2($elm$core$List$cons,value,result),n=n-1,value=value}}),$elm$core$List$repeat=F2(function(n,value){return A3($elm$core$List$repeatHelp,_List_Nil,n,value)}),$elm$html$Html$Attributes$type_=$elm$html$Html$Attributes$stringProperty("type"),$elm$html$Html$ul=_VirtualDom_node("ul"),$elm$html$Html$Attributes$width=function(n){return A2(_VirtualDom_attribute,"width",$elm$core$String$fromInt(n))},exports=(initCmd=$elm$core$Platform$Cmd$batch(_List_fromArray([A2($elm$random$Random$generate,$author$project$Model$GotUUID,A2($elm$random$Random$int,0,2147483647)),$author$project$PeerPort$makePeer("")])),$elm$browser$Browser$element({bo:function(_v0){return{a:$author$project$Main$initialModel,b:initCmd}},bB:$author$project$Main$subscriptions,bD:exports,bF:$author$project$Views$view}));exports={Main:{init:exports($elm$json$Json$Decode$succeed(0))(0)}},scope.Elm?function _Platform_mergeExportsProd(obj,exports){for(var name in exports)name in obj?"init"==name?_Debug_crash(6):_Platform_mergeExportsProd(obj[name],exports[name]):obj[name]=exports[name]}(scope.Elm,exports):scope.Elm=exports}(this);